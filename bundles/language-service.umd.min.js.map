{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../packages/compiler/esm5/src/ml_parser/tags.js","../../../packages/compiler/esm5/src/ml_parser/html_tags.js","../../../packages/compiler/esm5/src/core.js","../../../packages/compiler/esm5/src/selector.js","../../../packages/compiler/esm5/src/util.js","../../../packages/compiler/esm5/src/template_parser/template_ast.js","../../../packages/compiler/esm5/src/config.js","../../../packages/compiler/esm5/src/aot/static_symbol.js","../../../packages/compiler/esm5/src/compile_metadata.js","../../../packages/compiler/esm5/src/ast_path.js","../../../packages/compiler/esm5/src/ml_parser/ast.js","../../../packages/compiler/esm5/src/assertions.js","../../../packages/compiler/esm5/src/ml_parser/interpolation_config.js","../../../packages/compiler/esm5/src/style_url_resolver.js","../../../packages/compiler/esm5/src/template_parser/template_preparser.js","../../../packages/compiler/esm5/src/directive_normalizer.js","../../../packages/compiler/esm5/src/directive_resolver.js","../../../packages/compiler/esm5/src/chars.js","../../../packages/compiler/esm5/src/expression_parser/lexer.js","../../../packages/compiler/esm5/src/expression_parser/ast.js","../../../packages/compiler/esm5/src/expression_parser/parser.js","../../../packages/compiler/esm5/src/parse_util.js","../../../packages/compiler/esm5/src/ml_parser/lexer.js","../../../packages/compiler/esm5/src/ml_parser/parser.js","../../../packages/compiler/esm5/src/i18n/digest.js","../../../packages/compiler/esm5/src/i18n/i18n_ast.js","../../../packages/compiler/esm5/src/i18n/serializers/placeholder.js","../../../packages/compiler/esm5/src/i18n/i18n_parser.js","../../../packages/compiler/esm5/src/i18n/parse_util.js","../../../packages/compiler/esm5/src/i18n/extractor_merger.js","../../../packages/compiler/esm5/src/ml_parser/xml_tags.js","../../../packages/compiler/esm5/src/ml_parser/xml_parser.js","../../../packages/compiler/esm5/src/i18n/serializers/serializer.js","../../../packages/compiler/esm5/src/i18n/serializers/xml_helper.js","../../../packages/compiler/esm5/src/i18n/serializers/xliff.js","../../../packages/compiler/esm5/src/i18n/serializers/xliff2.js","../../../packages/compiler/esm5/src/i18n/serializers/xmb.js","../../../packages/compiler/esm5/src/i18n/serializers/xtb.js","../../../packages/compiler/esm5/src/ml_parser/html_parser.js","../../../packages/compiler/esm5/src/i18n/translation_bundle.js","../../../packages/compiler/esm5/src/i18n/i18n_html_parser.js","../../../packages/compiler/esm5/src/output/output_ast.js","../../../packages/compiler/esm5/src/identifiers.js","../../../packages/compiler/esm5/src/output/value_util.js","../../../packages/compiler/esm5/src/injectable_compiler.js","../../../packages/compiler/esm5/src/aot/util.js","../../../packages/compiler/esm5/src/lifecycle_reflector.js","../../../packages/compiler/esm5/src/metadata_resolver.js","../../../packages/compiler/esm5/src/provider_analyzer.js","../../../packages/compiler/esm5/src/view_compiler/provider_compiler.js","../../../packages/compiler/esm5/src/ng_module_compiler.js","../../../packages/compiler/esm5/src/ng_module_resolver.js","../../../packages/compiler/esm5/src/output/source_map.js","../../../packages/compiler/esm5/src/output/abstract_emitter.js","../../../packages/compiler/esm5/src/output/ts_emitter.js","../../../packages/compiler/esm5/src/pipe_resolver.js","../../../packages/compiler/esm5/src/schema/dom_security_schema.js","../../../packages/compiler/esm5/src/schema/dom_element_schema_registry.js","../../../packages/compiler/esm5/src/shadow_css.js","../../../packages/compiler/esm5/src/style_compiler.js","../../../packages/compiler/esm5/src/ml_parser/html_whitespaces.js","../../../packages/compiler/esm5/src/ml_parser/icu_ast_expander.js","../../../packages/compiler/esm5/src/template_parser/binding_parser.js","../../../packages/compiler/esm5/src/template_parser/template_parser.js","../../../packages/compiler/esm5/src/compiler_util/expression_converter.js","../../../packages/compiler/esm5/src/view_compiler/type_check_compiler.js","../../../packages/compiler/esm5/src/view_compiler/view_compiler.js","../../../packages/compiler/esm5/src/constant_pool.js","../../../packages/compiler/esm5/src/i18n/message_bundle.js","../../../packages/compiler/esm5/src/render3/r3_identifiers.js","../../../packages/compiler/esm5/src/render3/view/util.js","../../../packages/compiler/esm5/src/render3/r3_factory.js","../../../packages/compiler/esm5/src/render3/util.js","../../../packages/compiler/esm5/src/render3/r3_module_compiler.js","../../../packages/compiler/esm5/src/output/map_util.js","../../../packages/compiler/esm5/src/render3/r3_pipe_compiler.js","../../../packages/compiler/esm5/src/render3/r3_ast.js","../../../packages/compiler/esm5/src/render3/r3_template_transform.js","../../../packages/compiler/esm5/src/render3/view/styling.js","../../../packages/compiler/esm5/src/render3/view/template.js","../../../packages/compiler/esm5/src/render3/view/compiler.js","../../../packages/compiler/esm5/src/aot/generated_file.js","../../../packages/compiler/esm5/src/aot/lazy_routes.js","../../../packages/compiler/esm5/src/aot/static_symbol_resolver.js","../../../packages/compiler/esm5/src/aot/summary_serializer.js","../../../packages/compiler/esm5/src/aot/compiler.js","../../../packages/compiler/esm5/src/aot/formatted_error.js","../../../packages/compiler/esm5/src/aot/static_reflector.js","../../../packages/compiler/esm5/src/aot/summary_resolver.js","../../../packages/compiler/esm5/src/aot/compiler_factory.js","../../../packages/compiler/esm5/src/summary_resolver.js","../../../packages/compiler/esm5/src/output/output_interpreter.js","../../../packages/compiler/esm5/src/output/output_jit.js","../../../packages/compiler/esm5/src/output/abstract_js_emitter.js","../../../packages/compiler/esm5/src/jit/compiler.js","../../../packages/compiler/esm5/src/url_resolver.js","../../../packages/compiler/esm5/src/resource_loader.js","../../../packages/compiler/esm5/src/i18n/extractor.js","../../../packages/compiler/esm5/src/render3/r3_jit.js","../../../packages/compiler/esm5/src/injectable_compiler_2.js","../../../../packages/compiler-cli/src/diagnostics/symbols.ts","../../../../packages/compiler-cli/src/diagnostics/expression_type.ts","../../../../packages/compiler-cli/src/diagnostics/expression_diagnostics.ts","../../../../packages/compiler-cli/src/diagnostics/typescript_version.ts","../../../../packages/compiler-cli/src/diagnostics/typescript_symbols.ts","../../../../packages/compiler-cli/src/metadata/schema.ts","../../../../packages/compiler-cli/src/metadata/evaluator.ts","../../../../packages/compiler-cli/src/metadata/symbols.ts","../../../../packages/compiler-cli/src/metadata/collector.ts","../../../../packages/compiler-cli/src/metadata/bundler.ts","../../../../packages/compiler-cli/src/metadata/index_writer.ts","../../../../packages/compiler-cli/src/metadata/bundle_index_host.ts","../../../../packages/compiler-cli/src/transformers/api.ts","../../../../packages/compiler-cli/src/transformers/util.ts","../../../../packages/compiler-cli/src/transformers/metadata_reader.ts","../../../../packages/compiler-cli/src/language_services.ts","../../../../node_modules/rxjs/src/internal/util/isFunction.ts","../../../../node_modules/rxjs/src/internal/config.ts","../../../../node_modules/rxjs/src/internal/Observer.ts","../../../../node_modules/rxjs/src/internal/util/isObject.ts","../../../../node_modules/rxjs/src/internal/util/tryCatch.ts","../../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../../../node_modules/rxjs/src/internal/Subscription.ts","../../../../node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","../../../../node_modules/rxjs/src/internal/Subscriber.ts","../../../../node_modules/rxjs/src/internal/util/toSubscriber.ts","../../../../node_modules/rxjs/src/internal/util/noop.ts","../../../../node_modules/rxjs/src/internal/util/pipe.ts","../../../../node_modules/rxjs/src/internal/Observable.ts","../../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../../../node_modules/rxjs/src/internal/SubjectSubscription.ts","../../../../node_modules/rxjs/src/internal/Subject.ts","../../../../node_modules/rxjs/src/internal/operators/refCount.ts","../../../../node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","../../../../node_modules/rxjs/src/internal/operators/groupBy.ts","../../../../node_modules/rxjs/src/internal/BehaviorSubject.ts","../../../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../../../node_modules/rxjs/src/internal/scheduler/QueueAction.ts","../../../../node_modules/rxjs/src/internal/Scheduler.ts","../../../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../../../node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","../../../../node_modules/rxjs/src/internal/observable/empty.ts","../../../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToArray.ts","../../../../node_modules/rxjs/src/internal/observable/fromArray.ts","../../../../node_modules/rxjs/src/internal/observable/scalar.ts","../../../../node_modules/rxjs/src/internal/observable/of.ts","../../../../node_modules/rxjs/src/internal/observable/throwError.ts","../../../../node_modules/rxjs/src/internal/Notification.ts","../../../../node_modules/rxjs/src/internal/operators/observeOn.ts","../../../../node_modules/rxjs/src/internal/ReplaySubject.ts","../../../../node_modules/rxjs/src/internal/AsyncSubject.ts","../../../../node_modules/rxjs/src/internal/util/Immediate.ts","../../../../node_modules/rxjs/src/internal/scheduler/AsapAction.ts","../../../../node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","../../../../node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","../../../../node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","../../../../node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","../../../../node_modules/rxjs/src/internal/util/identity.ts","../../../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","../../../../node_modules/rxjs/src/internal/util/EmptyError.ts","../../../../node_modules/rxjs/src/internal/util/TimeoutError.ts","../../../../node_modules/rxjs/src/internal/operators/map.ts","../../../../node_modules/rxjs/src/internal/observable/bindCallback.ts","../../../../node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","../../../../node_modules/rxjs/src/internal/OuterSubscriber.ts","../../../../node_modules/rxjs/src/internal/InnerSubscriber.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToPromise.ts","../../../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToIterable.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToObservable.ts","../../../../node_modules/rxjs/src/internal/util/isPromise.ts","../../../../node_modules/rxjs/src/internal/util/subscribeTo.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToResult.ts","../../../../node_modules/rxjs/src/internal/observable/combineLatest.ts","../../../../node_modules/rxjs/src/internal/util/isObservable.ts","../../../../node_modules/rxjs/src/internal/util/isIterable.ts","../../../../node_modules/rxjs/src/internal/observable/fromPromise.ts","../../../../node_modules/rxjs/src/internal/observable/fromIterable.ts","../../../../node_modules/rxjs/src/internal/observable/fromObservable.ts","../../../../node_modules/rxjs/src/internal/observable/from.ts","../../../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../../../node_modules/rxjs/src/internal/observable/concat.ts","../../../../node_modules/rxjs/src/internal/observable/defer.ts","../../../../node_modules/rxjs/src/internal/observable/forkJoin.ts","../../../../node_modules/rxjs/src/internal/observable/fromEvent.ts","../../../../node_modules/rxjs/src/internal/observable/fromEventPattern.ts","../../../../node_modules/rxjs/src/internal/observable/generate.ts","../../../../node_modules/rxjs/src/internal/observable/iif.ts","../../../../node_modules/rxjs/src/internal/util/isNumeric.ts","../../../../node_modules/rxjs/src/internal/observable/interval.ts","../../../../node_modules/rxjs/src/internal/observable/merge.ts","../../../../node_modules/rxjs/src/internal/observable/never.ts","../../../../node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","../../../../node_modules/rxjs/src/internal/observable/pairs.ts","../../../../node_modules/rxjs/src/internal/observable/race.ts","../../../../node_modules/rxjs/src/internal/observable/range.ts","../../../../node_modules/rxjs/src/internal/observable/timer.ts","../../../../node_modules/rxjs/src/internal/observable/using.ts","../../../../node_modules/rxjs/src/internal/observable/zip.ts","../../../../node_modules/rxjs/src/index.ts","../../../../node_modules/rxjs/src/internal/operators/audit.ts","../../../../node_modules/rxjs/src/internal/operators/buffer.ts","../../../../node_modules/rxjs/src/internal/operators/bufferCount.ts","../../../../node_modules/rxjs/src/internal/operators/bufferTime.ts","../../../../node_modules/rxjs/src/internal/operators/bufferToggle.ts","../../../../node_modules/rxjs/src/internal/operators/bufferWhen.ts","../../../../node_modules/rxjs/src/internal/operators/catchError.ts","../../../../node_modules/rxjs/src/internal/operators/combineAll.ts","../../../../node_modules/rxjs/src/internal/operators/combineLatest.ts","../../../../node_modules/rxjs/src/internal/operators/concat.ts","../../../../node_modules/rxjs/src/internal/operators/count.ts","../../../../node_modules/rxjs/src/internal/operators/debounce.ts","../../../../node_modules/rxjs/src/internal/operators/debounceTime.ts","../../../../node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","../../../../node_modules/rxjs/src/internal/util/isDate.ts","../../../../node_modules/rxjs/src/internal/operators/delay.ts","../../../../node_modules/rxjs/src/internal/operators/delayWhen.ts","../../../../node_modules/rxjs/src/internal/operators/dematerialize.ts","../../../../node_modules/rxjs/src/internal/operators/distinct.ts","../../../../node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","../../../../node_modules/rxjs/src/internal/operators/filter.ts","../../../../node_modules/rxjs/src/internal/operators/tap.ts","../../../../node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","../../../../node_modules/rxjs/src/internal/operators/take.ts","../../../../node_modules/rxjs/src/internal/operators/elementAt.ts","../../../../node_modules/rxjs/src/internal/operators/every.ts","../../../../node_modules/rxjs/src/internal/operators/exhaust.ts","../../../../node_modules/rxjs/src/internal/operators/exhaustMap.ts","../../../../node_modules/rxjs/src/internal/operators/expand.ts","../../../../node_modules/rxjs/src/internal/operators/finalize.ts","../../../../node_modules/rxjs/src/internal/operators/find.ts","../../../../node_modules/rxjs/src/internal/operators/ignoreElements.ts","../../../../node_modules/rxjs/src/internal/operators/isEmpty.ts","../../../../node_modules/rxjs/src/internal/operators/takeLast.ts","../../../../node_modules/rxjs/src/internal/operators/mapTo.ts","../../../../node_modules/rxjs/src/internal/operators/materialize.ts","../../../../node_modules/rxjs/src/internal/operators/scan.ts","../../../../node_modules/rxjs/src/internal/operators/reduce.ts","../../../../node_modules/rxjs/src/internal/operators/max.ts","../../../../node_modules/rxjs/src/internal/operators/merge.ts","../../../../node_modules/rxjs/src/internal/operators/mergeMapTo.ts","../../../../node_modules/rxjs/src/internal/operators/mergeScan.ts","../../../../node_modules/rxjs/src/internal/operators/min.ts","../../../../node_modules/rxjs/src/internal/operators/multicast.ts","../../../../node_modules/rxjs/src/internal/operators/onErrorResumeNext.ts","../../../../node_modules/rxjs/src/internal/operators/pairwise.ts","../../../../node_modules/rxjs/src/internal/util/not.ts","../../../../node_modules/rxjs/src/internal/operators/partition.ts","../../../../node_modules/rxjs/src/internal/operators/pluck.ts","../../../../node_modules/rxjs/src/internal/operators/publish.ts","../../../../node_modules/rxjs/src/internal/operators/publishLast.ts","../../../../node_modules/rxjs/src/internal/operators/publishReplay.ts","../../../../node_modules/rxjs/src/internal/operators/race.ts","../../../../node_modules/rxjs/src/internal/operators/repeat.ts","../../../../node_modules/rxjs/src/internal/operators/repeatWhen.ts","../../../../node_modules/rxjs/src/internal/operators/retry.ts","../../../../node_modules/rxjs/src/internal/operators/retryWhen.ts","../../../../node_modules/rxjs/src/internal/operators/sample.ts","../../../../node_modules/rxjs/src/internal/operators/sampleTime.ts","../../../../node_modules/rxjs/src/internal/operators/sequenceEqual.ts","../../../../node_modules/rxjs/src/internal/operators/share.ts","../../../../node_modules/rxjs/src/internal/operators/shareReplay.ts","../../../../node_modules/rxjs/src/internal/operators/single.ts","../../../../node_modules/rxjs/src/internal/operators/skip.ts","../../../../node_modules/rxjs/src/internal/operators/skipLast.ts","../../../../node_modules/rxjs/src/internal/operators/skipUntil.ts","../../../../node_modules/rxjs/src/internal/operators/skipWhile.ts","../../../../node_modules/rxjs/src/internal/operators/startWith.ts","../../../../node_modules/rxjs/src/internal/observable/SubscribeOnObservable.ts","../../../../node_modules/rxjs/src/internal/operators/subscribeOn.ts","../../../../node_modules/rxjs/src/internal/operators/switchMap.ts","../../../../node_modules/rxjs/src/internal/operators/switchAll.ts","../../../../node_modules/rxjs/src/internal/operators/takeUntil.ts","../../../../node_modules/rxjs/src/internal/operators/takeWhile.ts","../../../../node_modules/rxjs/src/internal/operators/throttle.ts","../../../../node_modules/rxjs/src/internal/operators/throttleTime.ts","../../../../node_modules/rxjs/src/internal/operators/timeInterval.ts","../../../../node_modules/rxjs/src/internal/operators/timeoutWith.ts","../../../../node_modules/rxjs/src/internal/operators/timestamp.ts","../../../../node_modules/rxjs/src/internal/operators/toArray.ts","../../../../node_modules/rxjs/src/internal/operators/window.ts","../../../../node_modules/rxjs/src/internal/operators/windowCount.ts","../../../../node_modules/rxjs/src/internal/operators/windowTime.ts","../../../../node_modules/rxjs/src/internal/operators/windowToggle.ts","../../../../node_modules/rxjs/src/internal/operators/windowWhen.ts","../../../../node_modules/rxjs/src/internal/operators/withLatestFrom.ts","../../../../node_modules/rxjs/src/internal/operators/zip.ts","../../../../node_modules/rxjs/src/internal/operators/zipAll.ts","../../../../node_modules/rxjs/src/operators/index.ts","../../../packages/core/esm5/src/di/injection_token.js","../../../packages/core/esm5/src/util/decorators.js","../../../packages/core/esm5/src/change_detection/constants.js","../../../packages/core/esm5/src/util.js","../../../packages/core/esm5/src/di/forward_ref.js","../../../packages/core/esm5/src/di/injector.js","../../../packages/core/esm5/src/metadata/view.js","../../../packages/core/esm5/src/render3/hooks.js","../../../packages/core/esm5/src/render3/ng_dev_mode.js","../../../packages/core/esm5/src/render3/interfaces/renderer.js","../../../packages/core/esm5/src/render3/node_assert.js","../../../packages/core/esm5/src/change_detection/change_detection_util.js","../../../packages/core/esm5/src/render3/util.js","../../../packages/core/esm5/src/render3/node_manipulation.js","../../../packages/core/esm5/src/render3/instructions.js","../../../packages/core/esm5/src/render3/component.js","../../../packages/core/esm5/src/util/property.js","../../../packages/core/esm5/src/change_detection/change_detector_ref.js","../../../packages/core/esm5/src/linker/element_ref.js","../../../packages/core/esm5/src/render/api.js","../../../packages/core/esm5/src/linker/component_factory_resolver.js","../../../packages/core/esm5/src/render3/view_ref.js","../../../packages/core/esm5/src/render3/component_ref.js","../../../packages/core/esm5/src/render3/assert.js","../../../packages/core/esm5/src/render3/di.js","../../../packages/core/esm5/src/di/r3_injector.js","../../../packages/core/esm5/src/render3/ng_module_ref.js","../../../packages/core/esm5/src/render3/pure_function.js","../../../packages/core/esm5/src/event_emitter.js","../../../packages/core/esm5/src/render3/interfaces/definition.js","../../../packages/core/esm5/src/render3/query.js","../../../packages/core/esm5/src/sanitization/html_sanitizer.js","../../../packages/core/esm5/src/sanitization/security.js","../../../packages/core/esm5/src/sanitization/style_sanitizer.js","../../../packages/core/esm5/src/type.js","../../../packages/core/esm5/src/reflection/reflection_capabilities.js","../../../packages/core/esm5/src/render3/jit/injectable.js","../../../packages/core/esm5/src/ivy_switch_legacy.js","../../../packages/core/esm5/src/version.js","../../../packages/core/esm5/src/errors.js","../../../packages/core/esm5/src/error_handler.js","../../../packages/core/esm5/src/di/reflective_errors.js","../../../packages/core/esm5/src/di/reflective_key.js","../../../packages/core/esm5/src/reflection/reflector.js","../../../packages/core/esm5/src/di/reflective_provider.js","../../../packages/core/esm5/src/di/reflective_injector.js","../../../packages/core/esm5/src/application_init.js","../../../packages/core/esm5/src/application_tokens.js","../../../packages/core/esm5/src/console.js","../../../packages/core/esm5/src/linker/compiler.js","../../../packages/core/esm5/src/profile/wtf_impl.js","../../../packages/core/esm5/src/zone/ng_zone.js","../../../packages/core/esm5/src/testability/testability.js","../../../packages/core/esm5/src/application_ref.js","../../../packages/core/esm5/src/zone.js","../../../packages/core/esm5/src/linker/query_list.js","../../../packages/core/esm5/src/linker/system_js_ng_module_factory_loader.js","../../../packages/core/esm5/src/linker/view_ref.js","../../../packages/core/esm5/src/debug/debug_node.js","../../../packages/core/esm5/src/change_detection/differs/default_iterable_differ.js","../../../packages/core/esm5/src/change_detection/differs/default_keyvalue_differ.js","../../../packages/core/esm5/src/change_detection/differs/iterable_differs.js","../../../packages/core/esm5/src/change_detection/differs/keyvalue_differs.js","../../../packages/core/esm5/src/application_module.js","../../../packages/core/esm5/src/view/types.js","../../../packages/core/esm5/src/view/errors.js","../../../packages/core/esm5/src/view/util.js","../../../packages/core/esm5/src/view/element.js","../../../packages/core/esm5/src/view/ng_module.js","../../../packages/core/esm5/src/view/view_attach.js","../../../packages/core/esm5/src/view/refs.js","../../../packages/core/esm5/src/view/provider.js","../../../packages/core/esm5/src/view/query.js","../../../packages/core/esm5/src/view/ng_content.js","../../../packages/core/esm5/src/view/text.js","../../../packages/core/esm5/src/view/view.js","../../../packages/core/esm5/src/view/pure_expression.js","../../../packages/core/esm5/src/view/services.js","../../../packages/core/esm5/src/view/entrypoint.js","../../../packages/core/esm5/src/render3/debug.js","../../../packages/language-service/esm5/src/utils.js","../../../packages/language-service/esm5/src/expressions.js","../../../packages/language-service/esm5/src/html_info.js","../../../packages/language-service/esm5/src/completions.js","../../../packages/language-service/esm5/src/locate_symbol.js","../../../packages/language-service/esm5/src/language_service.js","../../../packages/language-service/esm5/src/diagnostics.js","../../../packages/language-service/esm5/src/hover.js","../../../packages/language-service/esm5/src/reflector_host.js","../../../packages/language-service/esm5/src/typescript_host.js","../../../packages/language-service/esm5/src/ts_plugin.js"],"names":["extendStatics","d","b","__proto__","Array","p","hasOwnProperty","__","this","constructor","Object","create","prototype","assign","t","s","i","n","arguments","length","call","apply","o","Symbol","iterator","m","next","value","done","__read","r","e","ar","push","error","__await","v","TagContentType","indexOf","getOwnPropertySymbols","decorators","target","key","desc","Reflect","decorate","c","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","result","then","rejected","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","op","TypeError","pop","exports","concat","asyncIterator","q","a","resume","settle","fulfill","shift","__values","cooked","raw","mod","__esModule","k","default","splitNsName","elementName","colonIndex","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","not","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","prop","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sum","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","zwj","zwnj","_DEFAULT_TAG_DEFINITION","HtmlTagDefinition","_a","_b","closedByChildren","requiredParents","implicitNamespacePrefix","_c","contentType","PARSABLE_DATA","_d","closedByParent","_e","isVoid","_f","ignoreFirstLf","_this","canSelfClose","forEach","parentToAdd","requireExtraParent","currentParent","lcParent","toLowerCase","isClosedByChild","name","base","meta","area","embed","link","img","input","param","hr","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","RAW_TEXT","script","title","ESCAPABLE_RAW_TEXT","ViewEncapsulation","ChangeDetectionStrategy","attrs","notSelectors","parse","selector","match","_addResult","res","cssSel","element","classNames","cssSelector","CssSelector","lastIndex","_SELECTOR_REGEXP","exec","inNot","current","setElement","addClassName","addAttribute","results","isElementSelector","hasElementSelector","getMatchingElementTemplate","classAttr","join","getHtmlTagDefinition","getAttrs","toString","klass","name_1","SelectorMatcher","_elementMap","Map","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","SelectorContext","isTerminal","_addTerminal","selectable","_addPartial","className","name_2","terminalMap","terminalValuesMap","get","set","partialMap","partialValuesMap","map","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","selectors","cbContext","callback","createInject","tslib_1.__assign","token","createInjectionToken","makeMetadataFactory","_desc","ngInjectableDef","undefined","createAttribute","attributeName","createContentChildren","data","__assign","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","createDirective","dir","SecurityContext","MissingTranslationStrategy","createComponent","changeDetection","Default","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","args","createNgModule","ngModule","createInjectable","injectable","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createSelf","createSkipSelf","createHost","Type","Function","props","factory","_i","values","ngMetadataName","isTypeOf","obj","parserSelectorToR3Selector","positive","classes","parserSelectorToSimpleSelector","negative","notSelector","splitAtColon","defaultValues","_splitAt","character","characterIndex","trim","visitValue","visitor","context","isArray","visitArray","getPrototypeOf","STRING_MAP_PROTO","visitStringMap","visitPrimitive","visitOther","isDefined","val","noUndefined","ValueTransformer","arr","keys","isPromise","cb","syncAsyncValues","some","all","msg","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","escapeRegExp","replace","encoded","index","str","codePoint","charCodeAt","low","String","fromCharCode","stringify","overriddenName","newLineIndex","substring","resolveForwardRef","type","ProviderAstType","full","splits","split","major","TextAst","ngContentIndex","sourceSpan","BoundTextAst","AttrAst","visit","visitAttr","BoundPropertyMapping","BoundElementPropertyAst","securityContext","unit","isAnimation","fromBoundProperty","BoundEventAst","phase","handler","calcFullName","fromParsedEvent","event","targetOrPhase","ReferenceAst","originalValue","VariableAst","fromParsedVariable","ElementAst","inputs","outputs","references","directives","providers","hasViewContainer","queryMatches","children","endSourceSpan","EmbeddedTemplateAst","variables","BoundDirectivePropertyAst","directiveName","templateName","DirectiveAst","directive","hostProperties","hostEvents","contentQueryStartId","ProviderAst","multiProvider","eager","providerType","lifecycleHooks","isModule","NgContentAst","NullTemplateVisitor","visitNgContent","ast","visitEmbeddedTemplate","visitElement","visitReference","visitVariable","visitEvent","visitElementProperty","visitBoundText","RecursiveTemplateAstVisitor","_super","__extends","visitChildren","visitDirective","templateVisitAll","asts","astResult","defaultEncapsulation","Emulated","useJit","jitDevMode","missingTranslation","preserveWhitespaces","strictInjectionParameters","preserveWhitespacesDefault","StaticSymbol","filePath","members","assertNoMembers","StaticSymbolCache","cache","declarationFile","HOST_REG_EXP","sanitizeIdentifier","CompileSummaryKind","_anonymousTypeIndex","identifierName","compileIdentifier","reference","ref","identifier","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","moduleUrl","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","isInline","_normalizeArray","flatten$1","toSummary","CompileDirectiveMetadata","isHost","isComponent","exportAs","hostListeners","hostAttributes","viewProviders","queries","guards","viewQueries","entryComponents","componentViewType","rendererType","componentFactory","host","matches","bindConfig","parts","inputsMap","outputsMap","summaryKind","Directive","CompilePipeMetadata","Pipe","CompileNgModuleMetadata","declaredDirectives","exportedDirectives","declaredPipes","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","transitiveModule","id","module","NgModule","modules","TransitiveCompileNgModuleMetadata","directivesSet","Set","exportedDirectivesSet","pipesSet","pipes","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","provider","addDirective","has","add","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","useClass","useValue","useExisting","useFactory","deps","multi","flatten","list","reduce","flat","item","jitSourceUrl","url","compMeta","ngModuleType","templateMeta","sharedStylesheetJitUrl","pathParts","ngModuleJitUrl","moduleMeta","AstPath","path$$1","position","path","enumerable","configurable","parentOf","node","childOf","ctor","Text","visitText","Expansion","switchValue","cases","switchValueSourceSpan","visitExpansion","ExpansionCase","expression","valueSourceSpan","expSourceSpan","visitExpansionCase","Attribute","valueSpan","visitAttribute","Element","startSourceSpan","Comment","visitComment","visitAll","nodes","RecursiveVisitor","class_1","spanOf","start","offset","end","spanOf$1$1","tslib_1.__extends","span","assertArrayOfStrings","INTERPOLATION_BLACKLIST_REGEXPS","assertInterpolationSymbols","regexp","test","start_1","end_1","InterpolationConfig","fromArray","markers","DEFAULT_INTERPOLATION_CONFIG","StyleWithImports","isStyleUrlResolvable","PreparsedElementType","NG_CONTENT_SELECT_ATTR","LINK_ELEMENT","LINK_STYLE_REL_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_VALUE","STYLE_ELEMENT","SCRIPT_ELEMENT","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","preparseElement","selectAttr","hrefAttr","relAttr","attr","lcAttrName","projectAs","normalizeNgContentSelect","OTHER","nodeName","NG_CONTENT","STYLE","SCRIPT","STYLESHEET","PreparsedElement","nonBindable","DirectiveNormalizer","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","delete","stylesheet","_fetch","normalizeTemplate","prenormData","SyncAsync","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","interpolationConfig","rootNodesAndErrors","templateSourceUrl","errors","templateMetadataStyles","_normalizeStylesheet","CompileStylesheetMetadata","TemplatePreparseVisitor","rootNodes","templateStyles","inlineStyleUrls","_inlineStyles","stylesheets","styleUrl","None","targetStyles","_loadMissingExternalStylesheets","loadedStylesheets","filter","loadedStyle","allStyleUrls","allStyles","resolver","baseUrl","styleWithImports","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","foundUrls","ngNonBindableStackCount","preparsedElement","textContent_1","child","QUERY_METADATA_IDENTIFIERS","DirectiveResolver","_reflector","isDirective","typeMetadata","annotations","isDirectiveMetadata","throwIfNotFound","findLast","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","propName","output","hostBinding","startWith","hostListener","query","_merge","_dedupeBindings","bindings","names","publicNames","reversedResult","binding","_extractPublicName","reverse","mergedInputs","mergedOutputs","comp","mergedHost","moduleId","mergedQueries","condition","TokenType","$EOF","$TAB","$LF","$VTAB","$FF","$CR","$SPACE","$DQ","$$","$SQ","$PLUS","$MINUS","$SLASH","$SEMICOLON","$EQ","$GT","$0","$9","$A","$E","$F","$Z","$_","$a","$e","$f","$n","$r","$t","$v","$NBSP","$BT","isWhitespace","code","isDigit","isAsciiLetter","Lexer","tokenize","text","scanner","_Scanner","tokens","scanToken","Token","numValue","strValue","isCharacter","Character","isNumber","Number","isString","isOperator","operater","Operator","isIdentifier","Identifier","isKeyword","Keyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","newCharacterToken","newOperatorToken","peek","advance","chars.$EOF","chars.isDigit","isIdentifierStart","chars.$PERIOD","scanIdentifier","chars.$LBRACE","chars.$RBRACE","scanNumber","chars.$LBRACKET","chars.$COLON","chars.$HASH","scanCharacter","chars.$MINUS","chars.$STAR","scanString","chars.$CARET","scanOperator","scanComplexOperator","chars.$AMPERSAND","one","twoCode","two","threeCode","three","isIdentifierPart","KEYWORDS","newIdentifierToken","isExponentSign","simple","parseInt","parseIntAutoRadix","parseFloat","quote","buffer","marker","unescapedCode","hex","unescape","last","message","newErrorToken","$z","chars.isAsciiLetter","isQuote","chars.$LF","errLocation","ctxLocation","ParseSpan","AST","Quote","prefix","uninterpretedExpression","location","visitQuote","EmptyExpr","ImplicitReceiver","Chain","expressions","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","receiver","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","exp","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","strings","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","NonNullAssert","visitNonNullAssert","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","visitFunctionCall","ASTWithSource","source","keyIsVar","NullAstVisitor","visitImplicitReceiver","RecursiveAstVisitor","AstTransformer","AstMemoryEfficientTransformer","modified","original","visitAstChildren","ParsedPropertyType","isLiteral","LITERAL_ATTR","ANIMATION","offsets","templateBindings","warnings","_createInterpolateRegExp","config","pattern","RegExp","ParseErrorLevel","Parser","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","ParserError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","tplKey","tplValue","parseInterpolation","splitInterpolation","expressionText","part","_findInterpolationErrorColumn","SplitInterpolation","wrapLiteralPrimitive","_commentStart","chars.$SLASH","char","nextChar","outerQuote","partInErrIdx","j","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","EOF","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","exprs","parsePipe","expr","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","$LBRACE","parseLiteralMap","literalValue","chars.$COMMA","terminator","quoted","isSafe","chars.$RPAREN","positionals","expectTemplateBindingKey","operatorFound","firstBinding","rawKey","isVar","toUpperCase","TemplateBinding","letStart","letName","TemplateBindingParseResult","locationText","skip","ParseLocation","file","line","moveBy","content","len","ch","priorLine","substr","lastIndexOf","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","ParseSourceFile","ParseSourceSpan","details","TokenType$1","ParseError","level","ERROR","contextualMessage","ctx","typeSourceSpan","kind","identifierModuleUrl","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","_ControlFlowError","_Tokenizer","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","srcTokens","lastDstToken","TEXT","isExpansionFormStart","_input","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_beginToken","_currentTokenStart","_currentTokenType","_endToken","Token$1","_createError","_advance","_length","_attemptCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","_requireCharCode","_attemptStr","chars","_savePosition","_restorePosition","initialPosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isNamedEntityEnd","isHex","numberStart","isDigitEntityEnd","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","COMMENT_START","textToken","COMMENT_END","CDATA_START","CDATA_END","DOC_TYPE","_consumePrefixAndName","chars.$SEMICOLON","nameStart","nameOrPrefixStart","isNameEnd","lowercaseTagName","_consumeTagOpenStart","isNotWhitespace","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","savedPos","contentTokenType","_consumeRawTextWithTagClose","chars.$LT","TAG_CLOSE","TAG_OPEN_START","ATTR_NAME","prefixAndName","ATTR_VALUE","quoteChar","valueStart","TAG_OPEN_END_VOID","TAG_OPEN_END","EXPANSION_FORM_START","_readUntil","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","_isTextEnd","nbTokens","chars.isWhitespace","chars.$a","isAsciiHexDigit","isInterpolationStart","TreeError","ParseTreeResult","getTagDefinition","lex.tokenize","parseExpansionForms","tokensAndErrors","tokenizeExpansionForms","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","lex.TokenType","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","html.Expansion","_parseExpansionCase","lex.Token","parsedExp","html.ExpansionCase","_collectExpansionExpTokens","expansionFormStack","lastOnStack","parent_1","_getParentElement","el","startTagToken","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","parent","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","_consumeAttr","attrName","mergeNsAndName","valueToken","localName","parentElement","digest","utf8","utf8Encode","words32","endian","wordAt","stringToWords32","Endian","Big","w","h0","h1","h2","h3","h4","rol32","fk","temp","add32","byteStringToHexString","words32ToByteString","sha1","meaning","decimalDigest","fingerprint","hi","lo","him","lom","ah","al","bh","bl","add32to64","carry","l","add64","count","rol64","decimal","toThePower","numberTimesBigInt","byteStringToDecString","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","_SerializerIgnoreIcuExpVisitor","hash32","mix","Little","sub32","high","byteAt","word","word32ToByteString","addBigInt","x","Math","max","tmpSum","num","product","bToThePower","placeholders","placeholderToMessage","description","startLine","startCol","endLine","endCol","sources","Text$1","Container","Icu","TagPlaceholder","tag","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","sort","_expParser","_I18nVisitor","_expressionParser","toI18nMessage","_isIcu","html.visitAll","_icuDepth","i18n.Message","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","Message","startPhName","closePhName","i18n.TagPlaceholder","attribute","_visitTextWithInterpolation","i18n.Icu","comment","i18nIcuCases","i18nIcu","phName","icuCase","sDelimiter","eDelimiter","i18n.Placeholder","lastStringIdx","I18nError","_I18N_ATTR","ID_SEPARATOR","i18nCommentsWarned","ExtractionResult","messages","_implicitAttrs","extract","_init","_VisitorMode","Extract","_messages","merge","translations","Merge","_translations","translatedNode","_inI18nBlock","_mode","_inIcu","_addMessage","wasInIcu","isOpening","startsWith","_isInTranslatableSection","isClosing","_isClosingComment","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","console","warn","_I18N_COMMENT_PREFIX_REGEXP","_openTranslatableSection","_mayBeAddBlockChildren","childNodes","translatedChildNodes","i18nAttr","find","i18nMeta","isImplicit","_implicitTags","wasInImplicitNode","isTopLevelImplicit","_inI18nNode","isTranslatable","visited","_visitAttributesOf","wasInI18nNode","_inImplicitNode","translatedAttrs","_translateAttributes","mode","_msgCountAtSectionStart","_createI18nMessage","createI18nMessageFactory","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","_parseMessageMeta","html.Attribute","html.Text","translatedAttributes","directChildren","startIndex","_Visitor","html.Comment","i18n","idIndex","descIndex","MEANING_SEPARATOR","meaningAndDesc","XmlTagDefinition","XmlParser","getXmlTagDefinition","Serializer","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toPublicName","internalName","toInternalName","publicName","visitPlaceholderName","nextId","_visitor","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","doctype","rootTag","dtd","serialize","Declaration","unescapedAttrs","escapeXml","Doctype","visitDoctype","Tag","Text$2","unescapedValue","CR","ws","_ESCAPED_CHARS","Xliff","write","locale","_WriteVisitor","contextTags","contextGroupTag","purpose","context-type","xml.CR","transUnit","datatype","xml.Text","priority","from","transUnits","source-language","xml.Declaration","xliff","version","xmlns","encoding","load","XliffParser","msgIdToHtml","i18nNodesByMsgId","converter","XmlToI18n","msgId","convert","i18nNodes","ctype","getCtypeForTag","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","ml.visitAll","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","Xliff2","xml.Tag","_WriteVisitor$1","notes","category","segment","_XMLNS","_DEFAULT_SOURCE_LANG","xml.serialize","units","_MARKER_TAG","srcLang","Xliff2Parser","XmlToI18n$1","getTypeForTag","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","_UNIT_TAG","_SOURCE_TAG","versionAttr","endAttr","_PLACEHOLDER_TAG","startAttr","startId","endId","Xmb","exampleVisitor","ExampleVisitor","_Visitor$2","sourceTags","rootNode","addDefaultExamples","digest$1","createNameMapper","startEx","startTagAsText","closeTagAsText","closeEx","interpolationAsText","exTag","icuExpression","icuCases","icuAsText","icuType","exText","Xtb","XmlToI18n$2","valueFn","createLazyProperty","XtbParser","xtb","_bundleDepth","langAttr","HtmlParser","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","I18NHtmlParser","translationsFormat","format","createSerializer","_translationBundle","parseResult","implicitTags","implicitAttrs","mergeTranslations","TypeModifier","Identifiers","ANALYZE_FOR_ENTRY_COMPONENTS","moduleName","CORE","ElementRef","NgModuleRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","Renderer2","CodegenComponentFactoryResolver","ComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","inject","INJECTOR","Injector","defineInjectable","InjectableDef","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","providerDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","nodeValue","ngContentDef","unwrapValue","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","createTokenForReference","BuiltinTypeName","modifiers","hasModifier","modifier","BinaryOperator","BuiltinType","visitType","visitBuiltinType","ExpressionType","typeParams","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","Type$1","DYNAMIC_TYPE","Dynamic","INFERRED_TYPE","Inferred","BOOL_TYPE","Bool","NUMBER_TYPE","NONE_TYPE","nullSafeIsEquivalent","other","isEquivalent","areAllEquivalent","BuiltinVar","Expression","ReadPropExpr","ReadKeyExpr","callMethod","params","InvokeMethodExpr","callFn","InvokeFunctionExpr","instantiate","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","Equals","notEquals","NotEquals","identical","Identical","notIdentical","NotIdentical","Minus","plus","Plus","Divide","multiply","Multiply","modulo","Modulo","And","bitwiseAnd","parens","BitwiseAnd","Or","lower","Lower","lowerEquals","LowerEquals","bigger","Bigger","BiggerEquals","isBlank","TYPED_NULL_EXPR","cast","CastExpr","toStmt","ExpressionStatement","BuiltinMethod","ReadVarExpr","builtin","isConstant","visitExpression","visitReadVarExpr","WriteVarExpr","TypeofExpr","visitTypeofExpr","WrappedNodeExpr","visitWrappedNodeExpr","visitWriteVarExpr","toDeclStmt","DeclareVarStmt","toConstDecl","StmtModifier","Final","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","method","visitInvokeMethodExpr","fn","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","LiteralExpr","visitLiteralExpr","ExternalExpr","runtime","visitExternalExpr","visitConditionalExpr","NotExpr","visitNotExpr","AssertNotNull","visitAssertNotNullExpr","visitCastExpr","FnParam","FunctionExpr","statements","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","LiteralArrayExpr","entries","every","visitLiteralArrayExpr","LiteralMapEntry","LiteralMapExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","NULL_EXPR","This","CatchError","CatchStack","Statement","stmt","visitStatement","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","ReturnStatement","visitReturnStmt","AbstractClassPart","ClassField","initializer","ClassMethod","ClassGetter","ClassStmt","fields","getters","constructorMethod","methods","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","multiline","visitCommentStmt","JSDocCommentStmt","tags","visitJSDocCommentStmt","out","tags_1","tagToString","serializeTags","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","visitAllStatements","entry","mapType","getter","ctorMethod","stmts","findReadVarNames","_ReadVarVisitor","varNames","RecursiveAstVisitor$1","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","transformer","_ApplySourceSpanTransformer","applySourceSpanToExpressionIfNeeded","_clone","clone","variable","importExpr","importType","typeModifiers","expressionType","literalArr","literalMap","ifStmt","thenClause","elseClause","literal","convertValueToOutputAst","_ValueOutputAstTransformer","o.LiteralMapEntry","quotedSet","mapEntry","InjectableCompiler","reflector","alwaysGenerateDef","tokenInjector","resolveExternalReference","depsArray","dep","tokenExpr","flags","o.importExpr","factoryFor","retValue","clazz","symbol","depArgs","parameters","o.NULL_EXPR","injectableDef","providedIn","def","o.ClassMethod","Static","STRIP_SRC_FILE_SUFFIXES","GENERATED_FILE","JIT_SUMMARY_FILE","JIT_SUMMARY_NAME","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","lastDot","srcFileSuffix","summaryFileName","fileName","summaryForJitFileName","summaryForJitName","symbolName","LifecycleHooks","LOWERED_SYMBOL","isLoweredSymbol","LIFECYCLE_HOOKS_VALUES","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","hasLifecycleHook","hook","getHookName","CompileMetadataResolver","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_shallowModuleCache","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","summary","resolveSummary","hostViewType","hostType","cpl.CompileTemplateMetadata","diDeps","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","templateMetadata","normalizedDirMeta","componentModuleUrl","createDirectiveMetadata","cacheEntry","nonNormalizedTemplateMetadata","entryComponentMetadata","_getProvidersMetadata","stringifyType","flattenAndDedupeArray","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","changeDetectionStrategy","getRendererType","getDirectiveMetadata","getDirectiveSummary","dirSummary","cpl.CompileSummaryKind","isPipe","isNgModule","getNgModuleSummary","moduleType","alreadyCollecting","moduleSummary","getNgModuleMetadata","loadNgModuleDirectiveAndPipeMetadata","promise","loading","_loadPipeMetadata","getShallowModuleMetadata","compileMeta","ngModuleMeta","shallowAnnotations","rawExports","rawImports","imports","rawProviders","exportedNonModuleIdentifiers","importedType","importedModuleType","isValidType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_getIdentifierMetadata","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","cpl.tokenReference","modSummary","tokenRef","prevModules","moduleRef","addedTokens","isInjectable","ann","getInjectableSummary","Injectable","getInjectableMetadata","dependencies","throwOnUnknownDeps","_getDependenciesMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","dependenciesMetadata","isAttribute","isSelf","paramEntry","isOptional","isSkipSelf","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","cpl.ProviderMeta","_validateProvider","ProviderMeta","soFar","seenProvider","seenProviderIdx","providersInfo","providerMeta","_getEntryComponentsFromProvider","getProviderMetadata","targetIdentifiers","components","collectedIdentifiers","_CompileValueConverter","_getInjectableTypeMetadata","compileDeps","compileFactoryMetadata","compileTypeMetadata","_getFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","varName","read","error$$1","otherType","tree","array","flattenArray","ProviderError","component","viewQueryId","_addQueryToTokenMap","queryId","_getViewQueries","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","isTemplate","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","attrAst","targetErrors","directivesMeta","directiveAst","_allProviders","_resolveProviders","Component","providersByToken","PublicService","PrivateService","_contentQueries","contentQueries","directiveIndex","contentQueryId","_getContentQueries","_addQueryReadsTo","templateRefId","createTokenForExternalReference","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","eagerProviders","lazyProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","queryValue","_getQueriesFor","currentEl","distance","requestingProviderType","resolvedProvider","Builtin","transformedProviderAst","transformedUseValue","existingDiDep","_getDependency","transformedUseExisting","transformedDeps","_transformProvider","_transformProviderAst","transformedProviders","_getLocalDependency","attrValue","isValue","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","targetProvidersByToken","isUseValue","providerAst","lifecycleHook","lifecycleHookToNodeFlag","providerIndex","depExprs","convertDeps","providerExpr","allParams","allDepDefs","o.variable","depIndex","paramName","depDef","multiProviderDef","singleProviderDef","depsExpr","o.literalArr","tokenMeta","nodeFlag","entryComponent","entryComponentFactories","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","NgModuleCompiler","compile","providerParser","componentFactoryResolverProviderDef","o.FnParam","providerDefs","ngModuleDefFactory","ngModuleDef","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","NgModuleResolver","SourceMapGenerator","lines","lastCol0","hasMappings","addSource","sourcesContent","addLine","addMapping","col0","sourceUrl","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","segments","toBase64VLQ","segAsStr","lastSourceLine0","lastSourceCol0","VERSION","sourceRoot","toJsComment","b64","i1","i2","i3","toBase64Digit","isNaN","toBase64String","JSON","digit","B64_DIGITS","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","indent","partsLength","srcSpans","EmitterVisitorContext","_indent","_classes","_preambleLineCount","_lines","_EmittedLine","createRoot","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","_INDENT_WITH","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","popClass","toSource","sourceLines","_createIndent","toSourceMapGenerator","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","column","emittedLine","partIndex","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","o.BuiltinVar","Super","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","escapeIdentifier","opStr","o.BinaryOperator","visitAllObjects","separator","incrementedIndent","escapeDollar","alwaysQuote","debugOutputAstAsTypeScript","_TsEmitterVisitor","o.Expression","TypeScriptEmitter","emitStatementsAndContext","preamble","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexportsCode","reexports","reexport","as","exportedModuleName","importsWithPrefixes","importedModuleName","sm","sourceText","emitStatements","typeExpression","defaultType","_visitIdentifier","o.StmtModifier","o.ExternalExpr","Exported","_printColonType","field","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","Private","_visitParams","CATCH_ERROR_VAR","typeStr","o.BuiltinTypeName","Int","ConcatArray","o.BuiltinMethod","SubscribeObservable","Bind","size","o.INFERRED_TYPE","PipeResolver","metas","registerContext","HTML","URL","RESOURCE_URL","_SECURITY_SCHEMA","specs","SCHEMA$1","_ATTR_TO_PROP","class","for","formaction","readonly","DomElementSchemaRegistry","_schema","encodedType","strType","properties","typeNames","superName","superType","property","BOOLEAN$1","NUMBER$1","OBJECT$1","STRING$1","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","SECURITY_SCHEMA","NONE","validateProperty","validateAttribute","allKnownElementNames","normalizeAnimationStyleProperty","DASH_CASE_REGEXP","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","valAndSuffixMatch","strVal","shimCssText","cssText","hostSelector","commentsWithHash","_commentWithHashRe","_commentRe","stripComments","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_cssContentNextSelectorRe","_insertPolyfillRulesInCssText","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","suffix","_polyfillHost","_colonHostPartReplacer","_shadowDOMSelectorsRe","_scopeSelectors","ruleCallback","rule","_scopeSelector","strictStyling","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","CLOSE_CURLY","currentBlockParts","BLOCK_PLACEHOLDER","OPEN_CURLY","bracketCount","escapeBlocks","inputWithEscapedBlocks","escapedString","_ruleRe","contentPrefix","blocks","nextBlockIndex","strict","_shadowDeepSelectors","deepParts","otherParts","shallowPart","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","applyScope","_makeScopeMatcher","_selectorReSuffix","ShadowCss","_applySimpleSelectorScope","_polyfillHostNoCombinatorRe","hnc","colon","replaceBy_1","_scopeSelectorPart","scopedP","_polyfillHostRe","safeContent","SafeSelector","shouldScope","sep","part_1","scopedSelector","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","_cssColonHostRe","StringWithEscapedBlocks","setValue","outputCtx","stylesVar","isShimmed","StyleCompiler","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","shim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","StylesCompileDependency","getStylesVarName","exprIndex","Const","CompiledStylesheet","CONTENT_ATTR","HOST_ATTR","PRESERVE_WS_ATTR_NAME","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","replaceNgsp","WS_REPLACE_REGEXP","WhitespaceVisitor","expandNodes","expander","_Expander","ExpansionResult","isExpanded","expanded","ExpansionError","PLURAL_CASES","html.Element","expansionResult","switchAttr","_expandDefaultForm","BindingParser","_exprParser","pipesByName","_usedPipes","pipesByName_1","pipe","getUsedPipes","createBoundHostProperties","parsePropertyBinding","boundProps_1","createDirectiveHostPropertyAsts","elementSelector","boundProps","createBoundElementProperty","createDirectiveHostEventAsts","parseEvent","targetEvents_1","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","ParsedVariable","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","WARNING","_parseAnimation","ParsedProperty","isAnimationProp","isAnimationLabel","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","BoundElementProperty","bindingType","boundPropertyName","_validatePropertyOrAttributeName","calcPossibleSecurityContexts","nsSeparatorIdx","securityContexts","targetEvents","_parseAnimationEvent","_parseRegularEvent","_parseAction","ParsedEvent","errors_1","PipeCollector","collector","pipeName","isAttr","report","registry","ctxs","elementNames","notElementNames","_TEXT_CSS_SELECTOR","TEXT_CSS_SELECTOR","TemplateParseError","templateAst","usedPipes","TemplateParser","transforms","tryParse","htmlParseResult","getInterpolationConfig","removeWhitespaces","tryParseHtml","expandHtml","htmlAstWithErrors","uniqDirectives","removeSummaryDuplicates","ProviderViewContext","bindingParser","uniqPipes","parseVisitor","TemplateParseVisitor","providerViewContext","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","TemplateParseResult","transform","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","_targetErrors","selectorMatcher","directivesIndex","ngContentCount","t.BoundTextAst","findNgContentIndex","valueNoNgsp","t.AttrAst","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateValue","templateKey","hasBinding","_parseAttr","TEMPLATE_ATTR_PREFIX","normalizedName","_normalizeAttributeName","hasTemplateBinding","parsedVariables_1","elementCssSelector","createElementCssSelector$1","elName","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","isViewRoot","providerContext","queryStartIndex","NON_BINDABLE_VISITOR","ElementContext","projectionSelector","t.NgContentAst","_isEmptyTextNode","parsedElement","_assertNoComponentsNorElementBindingsOnTemplate","elementProps","transformedDirectiveAsts","_assertElementExists","ngContentIndex_1","createElementCssSelector","templateQueryStartIndex","templateSelector","templateBoundDirectivePropNames","templateDirectiveAsts","t.EmbeddedTemplateAst","templateElementProps","_createElementPropertyAsts","templateProviderContext","targetRefs","srcSpan","boundEvents","BIND_NAME_REGEXP","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","t.BoundEventAst","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","directiveProperties","_checkPropertiesInSchema","t.ReferenceAst","elOrDirRef","isReferenceToDirective","matchedReferences","parsedEvents","refToken","_createDirectivePropertyAsts","targetBoundDirectiveProps","prevValue","boundPropsByName_1","dirProp","elProp","isEmptyExpression","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","_assertOnlyOneComponent","componentTypeNames","_assertAllEventsPublishedByDirectives","allDirectiveEvents","NonBindableVisitor","attrNameAndValues","t.TextAst","splitClasses","classAttrValue","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","attributes","elNameNoNs","attrNameNoNs","CLASS_ATTR","items","EventHandlerVars","ConvertActionBindingResult","render3Stmts","statement","allowDefault","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","o.literalMap","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","arg","_Mode","temporaryCount","unshift","temporaryDeclaration","returnExpr","convertStmtIntoExpression","preventDefaultVar","createPreventDefaultVar","converterFactory","_BuiltinAstConverter","convertBuiltins","ConvertPropertyBindingResult","currValExpr","convertPropertyBinding","expressionWithoutBuiltins","form","createCurrValueExpr","outputExpr","BindingForm","TrySimple","temporaryName","temporaryNumber","ensureExpressionMode","convertToStatementIfNeeded","_converterFactory","BuiltinFunctionCall","createLiteralArrayConverter","cdAst.AstTransformer","createLiteralMapConverter","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","ensureStatementMode","convertedArgs","o.literal","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","o.DYNAMIC_TYPE","varExpr","o.ReadPropExpr","localExpr","guardedExpression","needsTemporary","temporary","allocateTemporary","cdAst.SafeMethodCall","access","visitSome","tempNumber","releaseTemporary","cdAst.FunctionCall","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","options","TypeCheckCompiler","TypeCheckLocalResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","useIf","guard","astNodes","targetStatements","viewStmts","bindingCount","o.ExpressionStatement","preprocessUpdateExpression","o.applySourceSpanToStatementIfNeeded","defaultResolver","General","guardExpression","guardClause","o.IfStmt","viewName","viewFactory","fullTemplateTypeCheck","childVisitor","visitElementOrTemplate","inputAst","outputVarType","outputAst","dirAst","hostEventAst","currBuilder","varAst","pipeOutputVar","argCount","visitDirectiveProperty","ViewCompileResult","viewClassVar","rendererTypeVar","ViewCompiler","staticQueryIds","findStaticQueryIds","childData","dynamicQueryIds","template_1","customRenderData","o.LiteralMapExpr","renderComponentVar","o.importType","ViewBuilder$1","renderComponentVarName","LOG_VAR$1","CHECK_VAR","nodeStaticQueryIds","purePipeNodeIndices","_createPipe","queryIds_1","queryIndex","calcStaticDynamicQueryFlags","nodeFlags","nodeDef","needsAdditionalRootNode","lastAstNode","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","o.DeclareFunctionStmt","OnPush","viewFlags","updateStmts","o.fn","preStmts","COMP_VAR","VIEW_VAR","updateFn","nodeIndex","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","childCount","queryMatchesExpr","_createElementHandleEventFn","_visitElementOrTemplate","usedEvents","dirHostBindings","hostBindings","inputDefs","unexpected","inputType","elementBindingDef","outputDefs","compAst","compRendererType","compView","elementAst","mapResult","attrValue2","CLASS_ATTR$1","STYLE_ATTR","elementEventNameAndTarget","elementEventFullName","localDirAst","dirIndex","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","refNodeIndices","eventAst","elementNodeIndex","queryIds","_visitProviderOrDirective","mapValue","dirContextExpr","updateDirectives","updateDirectiveExpressions","_addProviderNode","_visitComponentFactoryResolverProvider","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","callCheckStmt","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","callUnwrapValue","nodeValueExpr_1","diDep","pipeDef","_createLiteralMapConverter","self","updateBindingCount","createUpdateStatements","allowEmptyExprs","o.applySourceSpanToExpressionIfNeeded","handlers","handleEventStmts","handleEventBindingCount","trueStmts","ALLOW_DEFAULT_VAR","fullEventName","EVENT_NAME_VAR","handleEventFn","bindingIdx","isFirst","FixupExpression","resolved","KEY_CONTEXT","fixup","ConstantPool","literals","literalFactories","injectorDefinitions","directiveDefinitions","o.LiteralExpr","getConstLiteral","literal$$1","forceShared","keyOf","newValue","shared","freshName","getTranslation","o.JSDocCommentStmt","docStmt","variable$$1","freshTranslationName","fnCall","msgStmt","getDefinition","definitions","definitionsOf","propertyNameOf","getLiteralFactory","argumentsForKey","_getLiteralFactory","expressionForKey","resultMap","literalFactory","literalFactoryArguments","pureFunctionDeclaration","resultExpressions","isVariable","nextNameIndex","componentDefinitions","pipeDefinitions","KeyVisitor","invalid","mapKey","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","extractMessages","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","CORE$1","Identifiers$1","NEW_METHOD","TRANSFORM_METHOD","PATCH_DEPS","namespaceHTML","namespaceMathML","namespaceSVG","elementStart","elementEnd","elementProperty","elementAttribute","elementClassProp","elementContainerStart","elementContainerEnd","elementStyling","elementStylingMap","elementStyleProp","elementStylingApply","containerCreate","nextContext","templateCreate","textBinding","bind","getCurrentView","restoreView","interpolation1","interpolation2","interpolation3","interpolation4","interpolation5","interpolation6","interpolation7","interpolation8","interpolationV","pureFunction0","pureFunction1","pureFunction2","pureFunction3","pureFunction4","pureFunction5","pureFunction6","pureFunction7","pureFunction8","pureFunctionV","pipeBind1","pipeBind2","pipeBind3","pipeBind4","pipeBindV","loadDirective","loadQueryList","projection","projectionDef","injectAttribute","injectElementRef","injectTemplateRef","injectViewContainerRef","injectChangeDetectorRef","injectRenderer2","directiveInject","templateRefExtractor","defineBase","BaseDef","defineComponent","ComponentDef","defineDirective","DirectiveDef","InjectorDef","defineInjector","NgModuleDef","defineNgModule","PipeDef","definePipe","queryRefresh","registerContentQuery","NgOnChangesFeature","InheritDefinitionFeature","PublicFeature","listener","getFactoryOf","getInheritedFactory","sanitizeHtml","sanitizeStyle","defaultStyleSanitizer","TEMPORARY_NAME","unsupported","feature","o.constructor.name","invalid$1","asLiteral","conditionallyCreateMapObjectLiteral","getOwnPropertyNames","mapToExpression","trimTrailingNulls","R3FactoryDelegateType","R3ResolvedDependencyType","DefinitionMap","typeForCtor","isDelegatedMetadata","ctorExpr","injectDependencies","injectFn","baseFactory","baseFactoryStmt","ctorExprFinal","retExpr","makeConditionalFactory","nonCtorExpr","R3","delegateType","Factory","delegateFactory","delegateFactoryStmt","delegateArgs","delegateDeps","Class","isExpressionFactoryMetadata","skipSelf","optional","injectArgs","compileInjectDependency","dependenciesFromGlobalMetadata","templateRef","viewContainerRef","injectorRef","renderer2","dependency","elementRef","convertMetaToOutput","numParams","compileNgModuleFromRender2","injectableCompiler","injectorDefArg","injectorDef","o.expressionType","compilePipeFromMetadata","definitionMapValues","templateFactory","compileFactoryFunction","o.ExpressionType","Text$3","BoundText","TextAttribute","visitTextAttribute","BoundAttribute","fromBoundElementProperty","visitBoundAttribute","BoundEvent","visitBoundEvent","Template","visitTemplate","Content","selectorIndex","visitContent","Variable","Reference","nodes_1","newNode","nodes_2","htmlAstToRender3Ast","htmlNodes","HtmlAstToIvyAst","ivyNodes","allErrors","hasNgContent","parsedProperties","templateParsedProperties","templateVariables","normalizeAttributeName","elementHasInlineTemplate","reportError","isTemplateBinding","parsedVariables","parseAttribute","NON_BINDABLE_VISITOR$1","isEmptyTextNode","t.Content","t.Template","attributes_1","extractAttributes","bound","t.TextAttribute","t.BoundText","t.Text","bep","matchableAttributes","KW_BIND_IDX","BIND_NAME_REGEXP$1","parseVariable","parseReference","KW_BINDON_IDX","addEvents","parseAssignmentEvent","IDENT_BANANA_BOX_IDX","IDENT_EVENT_IDX","qS","tempValue","renderFlagCheckIfStmt","RENDER_FLAGS","TemplateDefinitionBuilder","constantPool","parentBindingScope","contextName","directiveMatcher","pipeTypeByName","_namespace","relativeContextFilePath","_unsupported","_inI18nSection","_pureFunctionSlots","_bindingSlots","_dataIndex","_bindingScope","nestedScope","fileBasedI18nSuffix","_valueConverter","ValueConverter","allocateDataSlot","numSlots","allocatePureFunctionSlots","slot","creationInstruction","registerContextVariables","scopedName","freshReferenceName","retrievalLevel","scope","relativeLevel","bindingLevel","CONTEXT_NAME","sharedCtxVar","generateNextContextExpr","buildTemplateFunction","r3Selectors","parseSelectorToR3Selector","parsed","updatePipeSlotOffsets","creationStatements","_creationCodeFns","fn$$1","updateStatements","_updateCodeFns","creationVariables","viewSnapshotStatements","updateVariables","variableDeclarations","_tempVariables","creationBlock","updateBlock","_phToNodeIdxes","phToNodeIdx","_prefixCode","o.NUMBER_TYPE","ngContent","attributeAsList","getNamespaceInstruction","namespaceKey","addNamespaceInstruction","nsInstruction","elementIndex","checkIsNgContainer","isNgContainer$$1","_i18nSectionIndex","I18N_ATTR","I18N_ATTR_PREFIX","attrI18nMetas","matchDirectives","initialStyleDeclarations","initialClassDeclarations","styleInputs","isClassBinding","classInputs","allOtherInputs","currStyleIndex","currClassIndex","staticStylesMap","staticClassesMap","outputAttrs","parenDepth","propStart","valueHasQuotes","currentProp","hyphenate","styleVal","stripUnnecessaryQuotes","parseStyle","stylesIndexMap","classesIndexMap","parseI18nMeta","hasMapBasedStyling","useDefaultStyleSanitizer","isStyleSanitizable","prepareSelectOnlyAttrs","prepareRefsParameter","wasInNamespace","currentNamespace","implicit","hasStylingInstructions","paramsList","prepareListenerParameter","indexLiteral_1","firstStyle","mapBasedStyleInput","firstClass","mapBasedClassInput","value_1","params_1","updateInstruction","stylingInput","sanitizationRef","resolveSanitizationFn","this_1","styleIndex","_loop_1","this_2","classIndex","_loop_2","lastInputCommand","o.ifStmt","mapBindingToInstruction","params_2","allocateBindingSlots","value_2","instruction","t.visitAll","visitSingleI18nTextChild","visitAll$1","createSelfClosingInstruction","wasInI18nSection","templateIndex","Element$1","o.TYPED_NULL_EXPR","attrsExprs","toAttrsParam","templateVisitor","_nestedTemplateFns","templateFunctionExpr","getVarCount","bindingContext","_bindingContext","instructionFn","fns","paramsOrFn","originalSlots","skipBindFn","convertedPropertyBinding","interpolationFn","valExpr","elOrTpl","getAttrsForDirectiveMatching","staticType","attributesMap","attrExprs","refsParam","variableName","nextContextStmt","refExpr","evName","functionName","listenerScope","bindingExpr","restoreViewStatement","allocateSlot","slotPseudoLocal","pureFunctionSlot","pipeBindingIdentifiers","pipeBindingCallInfo","isVarLength","pipeBindExpr","bindingSlots","_pipeBindExprs","pureFunctionIdentifiers","relativeLevelDiff","allocateSlots","startSlot","pureFunctionCallInfo","referenceNameIndex","BindingScope","_ROOT_SCOPE","declareLocalCallback","maybeGenerateSharedContextVar","maybeRestoreView","declare","newScope","generateSharedContextVar","getSharedContextName","sharedCtxObj","getComponentProperty","componentValue","SHARED_CONTEXT_KEY","isListenerScope","restoreViewVariable","getCurrentViewInstruction","currentContextLevel","levelDiff","currStmts","ID_SEPARATOR$1","MEANING_SEPARATOR$1","makeBindingParser","core.SecurityContext","sanitizeScript","sanitizeUrl","sanitizeResourceUrl","baseDirectiveFields","definitionMap","queryDefinition","createQueryDefinition","typeName","createContentQueriesFunction","statements_1","temporary_1","temporaryAllocator","directiveInstanceVar_1","idx","loadQLArg","getQueryList","assignToTemporary","callQueryRefresh","refreshQueryAndUpdateDirective","updateDirective","createContentQueriesRefreshFunction","hostVars","hostBindingSourceSpan","directiveSummary","listeners","metadataAsSummary","bindings_1","valueConverter","eventBindings_1","eventBindings","bindingName","createHostBindingsFunction","slots","features","usesInheritance","lifecycle","usesOnChanges","compileDirectiveFromMetadata","toLiteralMap","selectorForType","firstSelector","selectorAttributes","matcher_1","tempAllocator","createStatements","refresh","viewQueryFnName","createViewQueriesFunction","templateTypeName","pipesUsed","templateBuilder","ROOT_SCOPE","directivesUsed","templateFunctionExpression","getConstCount","directivesExpr","directiveMetadataFromGlobalMetadata","typeArgumentCount","queriesFromGlobalMetadata","selectorStrings","getQueryPredicate","typeMapToExpressionMap","HOST_REG_EXP$1","GeneratedFile","srcFileUrl","genFileUrl","sourceOrStmts","ROUTES","loadChildren_1","_collectLoadChildren","route","allLazyRoutes","parseLazyRoute","routes","routes_1","loadChildren","routePath","routeName","referencedModule","ResolvedStaticSymbol","StaticSymbolResolver","staticSymbolCache","summaryResolver","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","staticSymbol","resultFromSummary","_resolveSymbolFromSummary","getImportAs","useSummaries","baseSymbol","getStaticSymbol","baseImportAs","summarizedFileName","summarizedName","getTypeArity","resolvedSymbol","unwrapResolvedMetadata","resolveSymbol","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","invalidateFile","symbols_1","symbols","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","__symbolic","statics","hasDecorators","getModuleMetadata","summarySymbols","_createSymbolsOf","metadataSymbols","moduleExport","export","exportSymbol","symName","unescapeIdentifier","resolvedModule","resolveModule","getSymbolsOf","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","symbolMeta","isTsFile","TS","isLibraryFile","transformedMeta_1","_originalFileMemo","getOutputName","topLevelPath","transformedMeta","ReferenceTransformer","functionParams","symbolic","oldLen","getOriginalName","topLevelSymbolNames","unwrappedTransformedMeta","getMetadataFor","md","maxVersion_1","moduleMetadata","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","createSummaryForJitFunction","fnName","symbolResolver","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSymbolSummariesBySymbol","srcFileName","ToJsonSerializer","addSummary","unprocessedSummary","processedSummary","processValue","clone_1","metadata_1","isCall","isMethodCallOnVariable","declarationSymbol","ngModuleSummary","summary_1","json","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","ForJitSerializer","addSourceType","isLibrary","addLibType","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","FromJsonDeserializer","symbolCache","deserialize","libraryFileName","allImportAs","serializedSymbol","fromSummaryFileName","summaries","AotCompiler","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_injectableCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","_analyzedFilesForInjectables","analyzeModulesSync","rootFiles","analyzeResult","analyzeAndValidateNgModules","ngModules","analyzeModulesAsync","_analyzeFile","analyzedFile","analyzeFile","_analyzeFileForInjectables","analyzeFileForInjectables","allowEmptyCodegenFiles","injectables","exportsNonSourceFiles","genFileNames","enableSummariesForJit","dirSymbol","normalizedUrl","resourceNameToFileName","needsShim","_stylesModuleUrl","fileSuffix","emitBasicStub","genFileName","originalFileName","_createOutputContext","endsWith","originalFile","_createEmptyStub","createForJitStub","_codegenSourceModule","emitTypeCheckStub","_createNgFactoryStub","loadFilesAsync","fileNames","tsFiles","files","loadingPromises","analyzedInjectables","tsFile","analyzedModules","mergeAndValidateNgFiles","loadFilesSync","_externalIdentifierReferences","typeIndex","ngModuleIndex","dirId","_createTypeCheckBlock","getHostComponentMetadata","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","htmlParser","messageBundle","emitAllPartialModules","r3Files","ngModuleByPipeOrDirective","contextMap","_compilePartialModule","_compileShallowModules","shallowModules","compileR3Module","schemaRegistry","expressionParser","directiveMetadata","render3Ast","hostBindingParser","directiveTypeBySel_1","pipeTypeByName_1","compileR3Directive","definitionField","compileComponentFromRender2","o.ClassField","compileDirectiveFromRender2","pipeMetadata","compilePipeFromRender2","emitAllPartialModules2","_emitPartialModule2","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","forJitCtx","types","toJsonSerializer","forJitSerializer_1","serializeSummaries","normalizedLocale","i18nFormat","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","_resolveStyleStatements","importModule","_fileNameToModuleName","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","ExternalReference","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","listLazyRoutes","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","compileResult","stylesheetUrl","analyzeNgModules","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","visitFile","seenFiles","isSourceFile","modMeta","_analyzeFilesIncludingNonProgramFiles","validateAnalyzedModules","symbolsMissingModule","isNgSymbol","Visitor","isValueExportingNonSourceFile","analyzedFiles","af","allNgModules","allPipesAndDirectives","formatChain","chain","postfix","indentStr","half","floor","FORMATTED_MESSAGE","ANGULAR_CORE","HIDDEN_KEY","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","StaticReflector","knownMetadataClasses","knownMetadataFunctions","annotationCache","shallowAnnotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","declarationSymbol_1","refSymbol","recordModuleNameForFileName","findDeclaration","tryFindDeclaration","resolvedMetadata","tryAnnotations","originalRecorder","_annotations","simplify","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","requiredAnnotationTypes","requiredType","formatMetadataError","metadataError","parentPropMetadata_1","parentProp","members_1","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","injectionToken","opaqueToken","lazy","BindingScope$1","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyNested","nestedContext","isMetadataError","summaryMsg","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","errorSummary","advise","isPrimitive","spreadArray","spreadArray_1","spreadItem","result_2","shouldIgnore","declarationValue","operand","indexTarget","member","selectTarget","selectContext","localValue","missing","argExpressions","functionSymbol","targetFunction","targetExpression","defaults","calling","functionScope","define","oldScope","result_1","simplifyCall","simplifyLazily","reportingContext","METADATA_ERROR","PopulatedScope","formatMetadataMessageChain","LAMBDA_NOT_SUPPORTED","expandedMessage","AotSummaryResolver","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","deserializeSummaries","basePath","SummaryResolver","JitSummaryResolver","_summaries","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","vars","_ExecutionContext","instance","ReturnValue","StatementInterpreter","debugAst","initialValue","currCtx","CATCH_STACK_VAR","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","_classStmt","_ctx","instanceCtx","paramNames","ctorParamNames","superClass","propertyDescriptors","createDynamicClass","stack","_declareFn","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","createSourceMap","fnBody","fnArgNames","fnArgValues","emptyFn","headerLines","evalExpression","getArgs","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","_emitReferenceToExternal","AbstractJsEmitterVisitor","o.ReadVarExpr","currentClass","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainNgModule","mainModule","nestedNgModule","createOutputContext","allComponentFactories","moduleByJitDirective","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","templates","entryComponentType","_compileTemplate","compiledTemplate","assertComponent","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","_interpretOrJit","templateJitUrl","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","exportName","interpretStatements","_viewClass","ir.importExpr","createOfflineCompileUrlResolver","UrlResolver","resolvedUrl","_split","encodeURI","baseParts","_ComponentIndex","Scheme","_joinAndCanonicalizePath","Port","Path","_resolveUrl","resolvedParts","UrlResolverImpl","_splitRe","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","leadingSlash","trailingSlash","pos","up","ResourceLoader","Extractor","urlResolver","createAotUrlResolver","CompilerConfig","normalizer","loadResource","elementSchemaRegistry","staticReflector","R3JitReflector","o.DeclareVarStmt","preStatements","mapToMapExpression","tupleTypeOf","additionalStatements","inputs_1","vx","outputs_1","compilerHost","errorCollector","enableIvy","tmplParser","typeCheckCompiler","compiler","viewCompiler","factoryMeta","useClassOnSelf","userDeps","ctorDeps","DiagnosticKind","TypeDiagnostic","[object Object]","diagnostics","callable","normalize","Undefined","Null","Other","getType","nullable","getNonNullableType","leftType","leftKind","leftRawKind","rightRawKind","operKind","Any","errorAst","Boolean","getBuiltinType","rightType","getTypeUnion","compiler_1","selectSignature","language","public","definition","signatures","argument","undefinedType","targetType","indexed","keyType","anyType","getArrayType","resolveMethodCall","getPipes","expType","resolvePropertyRead","_anyType","_undefinedType","receiverType","isAny","receiverInfo","reportWarning","getExpressionDiagnostics","analyzer","expression_type","AstType","getDiagnostics","info","templateOffset","refinedVariableType","templateElement","ngForDirective","expression_type_1","ngForOfBinding","getElementType","getExpressionScope","includeEvent","processReferences","getTypeSymbol","getDefinitionOf","super","getReferences","getTemplateContext","getTypeKind","Unbound","getVarDeclarations","getEventDeclaration","referenceTable","createSymbolTable","variableTable","eventsTable","mergeSymbolTable","getTemplateExpressionDiagnostics","ExpressionDiagnosticsVisitor","diagnoseExpression","attributeValueLocation","hasTemplateReference","previousDirectiveSummary","findNode","tail","offsetSpan","amount","min","longestArray","comparisonResult","tsNumbers","toNumbers","compareNumbers","ts__default","ts","getCombinedModifierFlags","ModifierFlags","NodeFlags","isReferenceType","ObjectFlags","TypeFlags","objectFlags","program","getSourceFile","forEachChild","SyntaxKind","ClassDeclaration","classDeclaration","getSymbolQuery","checker","fetchPipes","TypeScriptSymbolQuery","getClassMembers","getClassFromStaticSymbol","getTypeAtLocation","declaration","TypeWrapper","getPipesTable","PipesTable","typeCache","StringLike","StringLiteral","NumberLike","Union","typeKindOf","unionType","subType","candidate","TypeParameter","getTsTypeOf","getBuiltinTypeFromTs","elementType","getTypeParameterOf","tsType","nonNullableType","pipesCache","findClassSymbolInContext","contextType","getTemplateRefContextType","SymbolWrapper","symbols$$2","MapSymbolTable","addAll","DeclaredSymbol","symbolTables","symbolTable","sourceFile","getPositionOfLineAndCharacter","findChild","LastToken","betterNode","getStart","getEnd","spanAt","getTypeOfSymbolAtLocation","constructorDeclaration","parameter","typeReference","typeArguments","getTypeWrapper","typeCallable","getCallSignatures","signaturesOf","SignatureWrapper","getSymbol","definitionFromTsSymbol","SymbolTableWrapper","getProperties","SymbolFlags","Alias","getAliasedSymbol","ClassMember","parentDeclarationOf","getContainerOf","valueDeclaration","isPrivate","_members","Interface","getDeclaredTypeOfSymbol","typeWrapper","_tsType","getParameters","getReturnType","SignatureResultOverride","resultType","tsVersion","isVersionBetween","toSymbolTable","toSymbolTableFactory","table","own","toSymbols","getFromSymbolTable","_values","previous","PipeSymbol","EmptyTable","parameterType","classSymbol","findClassSymbol","findTransformMethodType","classType","getProperty","INDEX_PATTERN","indexVersion","path__default","dirname","moduleSymbol","getExportsOfModule","setParents","AsExpression","TrueKeyword","AnyKeyword","NullKeyword","numeric","NumericLiteral","NoSubstitutionTemplateLiteral","VoidExpression","InterfaceDeclaration","SourceFile","isMetadataSymbolicReferenceExpression","METADATA_VERSION","isModuleMetadata","isClassMetadata","isMemberMetadata","isMethodMetadata","isConstructorMetadata","isMetadataSymbolicExpression","isMetadataSymbolicBinaryExpression","isMetadataSymbolicIndexExpression","isMetadataSymbolicCallExpression","isMetadataSymbolicPrefixExpression","isMetadataSymbolicIfExpression","isMetadataGlobalReferenceExpression","isMetadataModuleReferenceExpression","isMetadataImportedSymbolReferenceExpression","isMetadataImportDefaultReference","isMetadataSymbolicSelectExpression","SpreadElement","SpreadElementExpression","isMethodCallOf","callExpression","PropertyAccessExpression","isCallOf","ident","nodeMap","everyNodeChild","getSourceFileOfNode","getLineAndCharacterOfPosition","errorSymbol","isPropertyAssignment","PropertyAssignment","Evaluator","recordExport","evaluateNode","isFoldableWorker","folding","ObjectLiteralExpression","propertyAssignment","ArrayLiteralExpression","CallExpression","arrayNode","arrayValue","FalseKeyword","TemplateHead","TemplateMiddle","TemplateTail","ParenthesizedExpression","parenthesizedExpression","BinaryExpression","binaryExpression","operatorToken","PlusToken","MinusToken","AsteriskToken","SlashToken","PercentToken","AmpersandAmpersandToken","BarBarToken","propertyAccessExpression","ElementAccessExpression","elementAccessExpression","argumentExpression","TemplateExpression","preferReference","recordEntry","substituteExpression","newEntry","recordMapEntry","isFoldableError","resolveName","schema_1","ShorthandPropertyAssignment","assignment","nameOf","propertyValue","quotedNames","isMetadataSymbolicSpreadExpression","spreadValue","spreadElementSyntaxKind","firstArgument","ArrowFunction","arrowFunction","arrayOrEmpty","isFoldable","NewExpression","newExpression","newArgs","newTarget","TypeReference","QualifiedName","qualifiedName","typeNameNode","getReference","typeReferenceNode","UndefinedKeyword","StringKeyword","NumberKeyword","BooleanKeyword","arrayTypeNode","TypeAssertionExpression","typeAssertion","PrefixUnaryExpression","prefixUnaryExpression","TildeToken","ExclamationToken","operatorText","AmpersandToken","BarToken","CaretToken","EqualsEqualsToken","ExclamationEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsEqualsToken","LessThanToken","GreaterThanToken","LessThanEqualsToken","GreaterThanEqualsToken","LessThanLessThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","getText","ConditionalExpression","conditionalExpression","thenExpression","whenTrue","whenFalse","elseExpression","FunctionExpression","TaggedTemplateExpression","templateExpression","templateSpans","head","asExpression","ClassExpression","Symbols","_symbols","buildImports","ImportEqualsDeclaration","moduleReference","externalReference","stripQuotes","importEqualsDeclaration","ImportDeclaration","importDecl","moduleSpecifier","importClause","namedBindings","NamedImports","NamespaceImport","isStatic","MetadataCollector","locals","symbols$2","composedSubstituter","evaluator","evaluator_1","evaluator$$1","evaluatorOptions","errorSym","maybeGetSimpleFunction","functionDeclaration","functionBody","func","addNamesOf","bindingPattern","namesOf","returnStatement","classMetadataOf","getDecorators","decoratorNode","referenceFrom","heritageClauses","hc","extends","typeParameters","recordMember","recordStaticMember","Constructor","MethodDeclaration","maybeFunc","methodDecorators","parameterDecoratorData","parametersData","hasDecoratorData","hasParameterData","parameterData","isConstructor","SetAccessor","propertyDecorators","ExportDeclaration","exportClause","exportDeclaration","spec","exportedAs","exportMap","isExport","isDeclarationFile","isExported","isExportedIdentifier","exportedIdentifierName","exportedName","interfaceDeclaration","interfaceName","FunctionDeclaration","nameNode","propNode","TypeAliasDeclaration","typeDeclaration","EnumDeclaration","enumDeclaration","enumValueHolder","enumName","enumValue","nextDefaultValue","VariableStatement","declarationList","variableDeclaration","variableStatement","exported","defineReference","BindingElement","ObjectBindingPattern","ArrayBindingPattern","validateExpression","shouldReportNode","lineInfo","isFunctionMetadata","oldLocals","indexExpression","prefixExpression","selectExpression","spreadExpression","ifExpression","validateClass","classData","parameterDecorators","validateMember","staticMember","nodeStart","validateMetadata","MetadataBundler","root","privateSymbolPrefix","symbolMap","exportedSymbols","exportAll","rootModule","canonicalizeSymbols","getEntries","privates","referenced","privateName","origins","getReExports","importName","fullModuleName","getMetadata","exportedSymbol","reexportedAs","exportFrom","symbolOf","exportItem","canonicalizeSymbol","rootExport","getRootExport","getSymbolDeclaration","canonicalSymbol","convertSymbol","digits","PRIVATE_NAME_CHARS","exportedNames","newPrivateName","symbolsMap","declaredName","exportAlls","convertEntry","convertFunction","isInterfaceMetadata","convertValue","convertExpression","convertMembers","convertStatics","convertMember","convertError","object","convertReference","convertExpressionNode","createReference","canonicalSymbolOf","referencedName","symbolKey","normalPath","resolveModuleName","resolvedFileName","extension","ScriptTarget","Latest","INDEX_HEADER","compare","select","privateEntriesToIndex","compareEntries","compareModules","orderedExports","DTS","ngOptions","getMetadataCache","indexFile","messageText","DiagnosticCategory","getMetadataBundle","bundler","indexModule","flatModuleId","CompilerHostAdapter","flatModulePrivateSymbolPrefix","metadataBundle","flatModuleOutFile","JS_EXT","libraryIndex","basename","syntheticIndex","normalSyntheticIndexName","newHost","fileExists","readFile","languageVersion","onError","sf","createSourceFile","writeByteOrderMark","sourceFiles","writeFile","metadataName","indexMetadata","DEFAULT_ERROR_CODE","UNKNOWN_ERROR_CODE","SOURCE","isTsDiagnostic","diagnostic","isNgDiagnostic","EmitFlags","GENERATED_FILES","tsStructureIsReused","structureIsReused","userError","createMessageDiagnostic","api","isInRootDir","rootDir","pathStartsWithPrefix","rootDirs","rel","ng","upgradeMetadataWithDtsData","oldMetadata","dtsFilePath","newMetadata","getSourceFileMetadata","dtsMetadata","createMetadataReaderCache","readMetadata","metadataPath","util","metadataOrMetadatas","metadatas","maxMetadata","readMetadataFile","cacheMetadata","expression_diagnostics","typescript_symbols","language_services_15","language_services","isFunction_1","createCommonjsModule","_enable_super_gross_mode_that_will_cause_bad_things","log","Observer","err","useDeprecatedSynchronousErrorHandling","isObject_1","tryCatch_1","tryCatchTarget","errorObject_1","errorObject","UnsubscriptionError","setPrototypeOf","Subscription","unsubscribe","_parents","hasErrors","closed","_subscriptions","remove","isFunction","_unsubscribe","tryCatch","isArray_1","UnsubscriptionError_1","flattenUnsubscriptionErrors","isObject","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","Subscriber","destinationOrNext","complete","syncErrorValue","syncErrorThrown","Observer_1","syncErrorThrowable","isStopped","destination","isTrustedSubscriber","trustedSubscriber","rxSubscriber","SafeSubscriber","rxSubscriber_1","_complete","_next","_error","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","hostReportError_1","hostReportError","wrappedComplete","config_1","nextOrObserver","Subscriber_1","noop_1","pipe_1","pipeFromArray","noop","Observable","lift","sink","toSubscriber_1","toSubscriber","_subscribe","_trySubscribe","getPromiseCtor","promiseCtor","operations","toPromise","ObjectUnsubscribedError","subject","subscriber","SubjectSubscription","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","ObjectUnsubscribedError_1","Subscription_1","SubjectSubscription_1","observable","Observable_1","refCount","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","subjectFactory","_isComplete","ConnectableObservable","getSubject","_subject","ConnectableSubscriber","refCount_1","connectableProto","connectableObservableDescriptor","writable","groupBy","keySelector","durationSelector","subjectSelector","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","group","Subject_1","GroupedObservable","groupedObservable","duration","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","BehaviorSubject","_value","getValue","Action","schedule","state","delay","scheduler","work","pending","AsyncAction","recycleAsyncId","requestAsyncId","setInterval","flush","execute","_execute","errored","errorValue","QueueAction","Scheduler","SchedulerAction","AsyncScheduler","now","Scheduler_1","scheduled","active","QueueScheduler","emptyScheduled","isScheduler_1","subscribeToArray","scalar_1","isScheduler","empty_1","fromArray_1","scalar","dispatch","Notification","observe","observer","do","accept","toObservable","of_1","throwError_1","throwError","createNext","createComplete","completeNotification","observeOn","ObserveOnOperator","ObserveOnSubscriber","notification","scheduleMessage","ObserveOnMessage","Notification_1","createError","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextTimeWindow","nextInfiniteTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","observeOn_1","queue","eventsCount","spliceCount","time","hasNext","hasCompleted","AsyncSubject","Immediate","handle","nextHandle","tasksByHandle","runIfPresent","AsapAction","clearImmediate","AsapScheduler","AnimationFrameAction","cancelAnimationFrame","AnimationFrameScheduler","VirtualTimeScheduler","maxFrames","VirtualAction","frame","sortActions","identity_1","ArgumentOutOfRangeError","EmptyError","TimeoutError","project","MapOperator","MapSubscriber","callbackFunc","innerArgs","dispatchNext","bindCallback","resultSelector","map_1","dispatchError","bindNodeCallback","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber","subscribeToPromise","getSymbolIterator","subscribeToIterable","iterator_1","iterable","iterator$$1","subscribeToObservable","obs","isPromise_1","_isScalar","subscribeToArray_1","isArrayLike","observable_1","subscribeToResult_1","subscribeTo_1","combineLatest","observables","CombineLatestOperator","CombineLatestSubscriber","toRespond","subscribeToResult","unused","oldVal","_tryResultSelector","isObservable_1","isIterable_1","iterator$$2","observable$$2","subscribeTo","isObservable","isArrayLike_1","fromPromise_1","fromPromise","isIterable","fromIterable_1","fromIterable","mergeMap","concurrent","from_1","ii","MergeMapOperator","MergeMapSubscriber","_tryNext","_innerSub","ish","observableFactory","forkJoin","ForkJoinSubscriber","completed","haveValues","innerSubscription","_hasValue","fromEvent","setupSubscription","sourceObj","source_1","addEventListener","removeEventListener","isJQueryStyleEventEmitter","source_2","on","off","addListener","removeListener","isNodeStyleEventEmitter","source_3","fromEventPattern","addHandler","removeHandler","needIterate","iterate","conditionResult","generate","initialStateOrOptions","resultSelectorOrObservable","initialState","identity","trueResult","falseResult","interval","period","async_1","async","isNumeric_1","isNumeric","counter","NEVER","onErrorResumeNext","remainder","subNext","pairs","race","RaceOperator","hasFirst","RaceSubscriber","range","timer","dueTime","periodOrScheduler","due","resourceFactory","resource","zip","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","hasValue","shouldComplete","_tryresultSelector","nextResult","isComplete","index$2","groupBy_1","ReplaySubject_1","AsyncSubject_1","queueScheduler","animationFrameScheduler","animationFrame","VirtualTimeScheduler_1","TimeoutError_1","using","using_1","zip_1","empty_2","audit","AuditOperator","AuditSubscriber","throttled","clearThrottle","closingNotifier","BufferOperator","BufferSubscriber","bufferCount","startBufferEvery","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","bufferTime","bufferTimeSpan","bufferCreationInterval","maxBufferSize","BufferTimeOperator","BufferTimeSubscriber","Context","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","creationState","dispatchBufferClose","closeState","dispatchBufferCreation","filledBufferContext","context_1","onBufferFull","context_2","closeContext","prevContext","bufferToggle","openings","closingSelector","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","bufferWhen","BufferWhenOperator","subscribing","BufferWhenSubscriber","closingSubscription","catchError","CatchOperator","caught","CatchSubscriber","err2","combineAll_1","CountOperator","CountSubscriber","_tryPredicate","debounce","DebounceOperator","durationSubscription","DebounceSubscriber","emitValue","debounceTime","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","defaultIfEmpty","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","isEmpty","isDate_1","delayFor","isDate","abs","DelayOperator","DelaySubscriber","delay_1","_schedule","scheduleNotification","DelayMessage","delayWhen","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","sourceSubscribed","SubscriptionDelaySubscriber","subscribeToSource","dematerialize","DeMaterializeOperator","DeMaterializeSubscriber","distinct","flushes","DistinctOperator","DistinctSubscriber","_useKeySelector","_finalizeNext","distinctUntilChanged","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","FilterOperator","FilterSubscriber","tap","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","throwIfEmpty","errorFactory","defaultErrorFactory","TakeOperator","total","ArgumentOutOfRangeError_1","TakeSubscriber","throwIfEmpty_1","hasDefaultValue","EveryOperator","EverySubscriber","everyValueMatch","exhaust","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","exhaustMap","ExhauseMapOperator","ExhaustMapSubscriber","tryNext","expand","ExpandOperator","ExpandSubscriber","subscribeToProjection","FinallyOperator","FinallySubscriber","FindValueOperator","yieldIndex","FindValueSubscriber","ignoreElements","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","TakeLastOperator","ring","TakeLastSubscriber","mapTo","MapToOperator","MapToSubscriber","materialize","MaterializeOperator","MaterializeSubscriber","scan","hasSeed","ScanOperator","accumulator","seed","ScanSubscriber","_seed","scan_1","takeLast_1","takeLast","defaultIfEmpty_1","acc","comparer","innerObservable","mergeMap_1","mergeScan","MergeScanOperator","MergeScanSubscriber","multicast","subjectOrSubjectFactory","MulticastOperator","ConnectableObservable_1","nextSources","OnErrorResumeNextOperator","onErrorResumeNextStatic","OnErrorResumeNextSubscriber","subscribeToNextSource","pairwise","PairwiseOperator","PairwiseSubscriber","hasPrev","pred","notPred","plucker","publishLast_1","selectorOrScheduler","repeat","RepeatOperator","RepeatSubscriber","repeatWhen","notifier","RepeatWhenOperator","sourceIsBeingSubscribedTo","RepeatWhenSubscriber","retries","subscribeToRetries","retriesSubscription","notifications","retry","RetryOperator","RetrySubscriber","retryWhen","RetryWhenOperator","RetryWhenSubscriber","sample","SampleOperator","sampleSubscriber","SampleSubscriber","sampleTime","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","sequenceEqual","compareTo","comparor","SequenceEqualOperator","SequenceEqualSubscriber","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","areEqual","nextB","shareReplay","shareReplayOperator","single","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","SkipSubscriber","SkipLastOperator","_skipCount","_count","_ring","SkipLastSubscriber","skipCount","currentIndex","oldValue","skipUntil","SkipUntilOperator","SkipUntilSubscriber","skipWhile","SkipWhileOperator","skipping","SkipWhileSubscriber","tryCallPredicate","concat_1","SubscribeOnObservable","delayTime","asap","subscribeOn","SubscribeOnOperator","switchMap","SwitchMapOperator","SwitchMapSubscriber","switchAll_1","takeUntil","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","takeWhile","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","throttle","defaultThrottleConfig","ThrottleOperator","leading","trailing","ThrottleSubscriber","_leading","_trailing","_throttled","send","_sendValue","tryDurationSelector","throttlingDone","throttleTime","throttle_1","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","timeInterval","defer_1","defer","TimeInterval","timeoutWith","withObservable","absoluteTimeout","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","timestamp","Timestamp","toArray_1","toArrayReducer","window","windowBoundaries","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","windowCount","windowSize","startWindowEvery","WindowCountOperator","WindowCountSubscriber","windows","window_1","windowTimeSpan","windowCreationInterval","maxWindowSize","WindowTimeOperator","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","windowToggle","WindowToggleOperator","WindowToggleSubscriber","openSubscription","context_3","context_4","inner","windowWhen","unsubscribeClosingNotification","closingNotification","withLatestFrom","WithLatestFromOperator","WithLatestFromSubscriber","found","_tryProject","zipAll_1","merge_2$1","mergeMap_2","InjectionToken","metaCtor","makeMetadataCtor","DecoratorFactory","annotationInstance","cls","typeFn","ANNOTATIONS","additionalProcessing","parentClass","ParamDecoratorFactory","PARAMETERS","__window","__self","WorkerGlobalScope","_symbolIterator","Symbol_1","scheduleMicroTask","Zone","stringify$1","resolveForwardRef$1","__forward_ref__","forwardRef","NullInjector","notFoundValue","_THROW_IF_NOT_FOUND","StaticInjector","THROW_IF_NOT_FOUND","NULL","objWithPropertyToExtract","GET_PROPERTY_NAME$1","NULL_INJECTOR","records","providerDeps","Optional","SkipSelf","Self","Inject","USE_VALUE$1","useNew","resolveProvider","multiProviderMixError","MULTI_PROVIDER_FN","record","tryResolveToken","_records","tokenPath","NG_TEMP_TOKEN_PATH","formatError","NO_NEW_LINE","depRecords","depRecord","childRecord","resolveToken","CIRCULAR","charAt","_currentInjector","setCurrentInjector","injector","queueInitHooks","onInit","doCheck","tView","ngDevMode","assertEqual","firstTemplatePass","initHooks","queueContentHooks","afterContentInit","contentHooks","queueViewHooks","afterViewInit","viewHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","checkHooks","__global$1","global","tNode","rendererCreateTextNode","rendererSetText","rendererCreateElement","rendererAddEventListener","rendererSetAttribute","rendererRemoveAttribute","rendererSetProperty","rendererSetClassName","rendererAddClass","rendererRemoveClass","rendererSetStyle","rendererRemoveStyle","rendererDestroy","rendererDestroyNode","RendererStyleFlags3","assertNodeOfPossibleTypes","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrap","isWrapped","SimpleChange","isFirstChange","stringify$1$1","getNextLNode","getChildLNode","getParentLNode","containerHostIndex","CONTAINER_INDEX","view","dynamicLContainerNode","walkLNodeTree","startingNode","renderer","renderParentNode","beforeNode","projectionNodeIndex","nextNode","native","nodeType","lContainerNode","childContainerData","VIEWS","projectionNodeStack","componentHost","findComponentHost","projectionNodeStack$1","PARENT","lViewData","viewRootLNode","HOST_NODE","assertDefined","executeNodeAction","insertBefore","isProceduralRenderer","removeChild","assertNodeType","parentNode","RENDER_PARENT","views","lView","viewNode","NEXT","QUERIES","insertView","detachView","removeIndex","detached","removedLView","removeView","getLViewChild","viewData","TVIEW","childIndex","destroyLView","destroyNode","rootView","viewOrContainer","HEADER_OFFSET","cleanUpView","getParentState","cleanup","readElementValue","cleanupFn","CLEANUP","RENDERER","canInsertNativeChildOfElement","grandParentContainer","canInsertNativeNode","grandParent","canInsertNativeChildOfView","nativeInsertBefore","renderParent","getRenderParent","appendChild","NG_HOST_SYMBOL","rendererFactory","bindingRootIndex","enterView","newView","oldView","DIRECTIVES","FLAGS","bindingStartIndex","previousOrParentNode","isParent","creationOnly","checkNoChangesMode","viewCheckHooks","refreshDescendantViews","ACTIVE_INDEX","container_1","lViewNode","dynamicViewData","directiveDefIdx","refreshContentQueries","setHostBindings","BINDING_INDEX","hostBindingStartIndex","defs","createLViewData","sanitizer","blueprint","CONTEXT","createLNodeObject","nodeInjector","createLNode","tParent","isState","adjustedIndex","tData","assertLessThan","createTNode","previousTNode","dynamicContainerNode","_isParent","_previousOrParentNode","rf","leaveView","componentOrContext","templateFn","begin","componentRefresh","getRenderFlags","_currentNamespace","resolveDirective","valueIndex","CIRCULAR$1","directiveCreate","queueHostBindingForCheck","createTView","viewIndex","consts","viewQuery","initialViewLength","createViewBlueprint","HEADER_FILLER","contentCheckHooks","destroyHooks","pipeDestroyHooks","assertDataInRange","createRenderer","rNode","elementOrSelector","defaultRenderer","selectRootElement","querySelector","hostElement","getOrCreateTView","directiveDefs","pipeDefs","onPush","diPublic","tViews","localNames","initialInputs","baseDirectiveCreate","componentView","addToViewTree","getCurrentSanitizer","addComponentLogic","initialInputData","minifiedInputName","inputsToStore","generateInitialInputs","setInputsFromAttrs","assertDataNext","isProc","NG_PROJECT_AS_ATTR_NAME","namespaceURI","attrVal","setAttributeNS","attrName_1","setAttribute","adjustedElementIndex","adjustedHostIndex","TAIL","markViewDirty","rootContext","clean","_CLEAN_PROMISE","res_1","tickRootContext","rootComponent","getRootView","_getComponentHostLElementNode","detectChanges","hostTView","updateViewQuery","lElementNode","createRootContext","LifecycleHooksFeature","elementNode","getClosureSafeProperty$1","ElementRef$1","RendererFactory2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver$1","ComponentFactoryBoundToModule","_appRef","_viewContainerRef","ViewRef","destroy","viewAttached","_view","getRendererFactory","checkNoChanges","attachToAppRef","RootViewRef","detectChangesInRootView","ComponentFactoryResolver$$1","nonMinified","minified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","componentDef","toRefArray","projectableNodes","rootSelectorOrNode","isInternalRootView","WRAP_RENDERER_FACTORY2","domRendererFactory3","overriddenRenderer","rendererToUse","createElement","locateHostElement","requestAnimationFrame","hostNode","componentTag","initChangeDetectorIfExisting","projection$$1","nodeList","lNode","firstTNode","renderEmbeddedTemplate","componentRef","ComponentRef$$1","viewEngine_ComponentFactory","destroyCbs","changeDetectorRef","_lViewNode","onDestroy","viewEngine_ComponentRef","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","getOrCreateChangeDetectorRef","di","currentNode","getClosestComponentAncestor","hostInjector","existingRef","bloomHash","bloomHashBit","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","formerInjector","INJECTOR$1","currentMatches","b6","bloomBit","b5","startInjector","b7","mask","ReadFromInjectorFn","ElementRef$$1","getOrCreateContainerRef","getOrCreateElementRef","directiveIdx","getOrCreateTemplateRef","vcRefHost","lContainer","parentLNode","isForViewContainerRef","createLContainer","hostParent","createComment","hostTNode","ViewContainerRef$$1","viewEngine_TemplateRef","TemplateRef$1","_lInjector","ViewContainerRef$1","getOrCreateRenderer2","_hostNode","_lContainerNode","getOrCreateNodeInjectorForNode","NodeInjector","parentLInjector","_viewRefs","adjustedIdx","_adjustIndex","viewRef","ngModuleRef","contextInjector","insert","move","newIndex","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","containerNode","declarationView","DECLARATION_VIEW","createView","NULL_INJECTOR$2","getNullInjector","destroyed","deepForEach","additionalProviders","processProvider","makeRecord","assertNotDestroyed","service","ngOnDestroy","injectableDefInScope","injectableDefRecord","hydrate","EMPTY_ARRAY$2","ngInjectorDef","parents","defType","imported","processInjectorType","R3Injector","isTypeProvider","NOT_YET","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","CIRCULAR$2","isRootInjector","_bootstrapComponents","viewEngine_NgModuleRef","COMPONENT_FACTORY_RESOLVER","NgModuleRef$$1","NgModuleFactory$$1","NgModuleRef$1","EventEmitter","isAsync","schedulerFn","completeFn","generatorOrNext","__isAsync","setTimeout","errorFn","index_16","index_5","changes","QueryList_","dirty","tagSet","sets","sets_1","OPTIONAL_END_TAG_INLINE_ELEMENTS","SecurityContext$1","merge$1","OPTIONAL_END_TAG_BLOCK_ELEMENTS","Type$1$1","DELEGATE_CTOR","_reflect","reflect","_global","ReflectionCapabilities","paramTypes","paramAnnotations","_ownParameters","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","parentCtor","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","convertTsickleDecoratorIntoMetadata","_zipTypesAndAnnotations","paramAnnotations_1","getParentCtor","_ownAnnotations","_ownPropMetadata","propDecorators","propDecorators_1","propMetadata_1","ownPropMetadata","setter","resolveEnum","decoratorInvocations","annotationCls","decoratorInvocation","parentProto","ɵ0","GET_PROPERTY_NAME","injectableType","convertInjectableProviderToFactory","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","patch","defaultErrorLogger","ErrorHandler","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","getOriginalError","constructResolvingPath","findFirstClosedCycle","constructResolvingMessage","wrappedError","addKey","noAnnotationError","ReflectiveKey","_globalKeyRegistry","numberOfKeys","_allKeys","newKey","KeyRegistry","caps","Reflector","importUri","fromKey","ReflectiveDependency","resolvedFactories","ResolvedReflectiveFactory","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","normalizedProvidersMap","ResolvedReflectiveProvider_","_normalizeProviders","_extractToken","_createDependency","paramMetadata","visibility","ReflectiveInjector_","_providers","_constructionCounter","keyIds","objs","resolveAndInstantiate","instantiateResolved","getProviderAtIndex","_new","_instantiateProvider","_instantiate","ResolvedReflectiveFactory$$1","originalException","_getByReflectiveDependency","injectionError","INJECTOR_KEY","_getByKeySelf","_getObjByKeyId","keyId","UNDEFINED","inj","inj_","_mapProviders","displayName","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","runInitializers","asyncInitPromises","initResult","isPromise$1","catch","PLATFORM_INITIALIZER","APP_BOOTSTRAP_LISTENER","Compiler","getModuleId","trace","wtf","hasPendingMicrotasks","onStable","assertZonePatched","zone","_nesting","_outer","_inner","fork","isAngularZone","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","invoke","hasTaskState","hasTask","change","microTask","checkStable","hasPendingMacrotasks","macroTask","onHandleError","handleError","scheduleEventTask","EMPTY_PAYLOAD","noop$1","runTask","isStable","onMicrotaskEmpty","runOutsideAngular","NoopNgZone","_ngZone","run","taskTrackingZone","_watchAngularEvents","onUnstable","_didWork","_isZoneStable","NgZone","assertNotInAngularZone","_runCallbacksIfReady","Testability","increasePendingRequestCount","decreasePendingRequestCount","_pendingCount","_callbacks","clearTimeout","timeoutId","doneCb","getPendingTasks","updateCb","pending_1","macroTasks","timeout","getPendingRequestCount","exactMatch","TestabilityRegistry","unregisterApplication","getTestability","elem","findInAncestors","createCompiler","PlatformRef","_injector","moduleFactory","ngZone","ngZoneOption","getNgZone","ngZoneInjector","exceptionHandler","_modules","errorHandler","initStatus","donePromise","_moduleDoBootstrap","compilerOptions","appRef","ApplicationRef","ngDoBootstrap","_destroyed","optionsReducer","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_stable","componentTypes","isDevMode","tick","index_1","assertInAngularZone","unstableSub","ComponentFactory$1","componentOrFactory","selectorOrNode","compRef","_unloadComponent","testability","registerApplication","nativeElement","_loadComponent","_runningTick","_tickScope","_views","attachView","wtfCreateScope","Console","_results","flatten$2$1","flatItem","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","providerTokens","addChild","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","triggerEventHandler","eventObj","DefaultIterableDifferFactory","DefaultIterableDiffer","trackByFn","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","nextRemove","addRemoveOffset","adjPreviousIndex","getPreviousIndex","moveOffsets","_nextRemoved","previousIndex","localCurrentIndex","localMovePreviousIndex","diff","collection","index_1$$1","_trackByFn","looseIdentical","trackById","itemTrackBy","mayBeDirty","_verifyReinsertion","_addIdentityChange","isDirty","nextRecord","_nextPrevious","_nextAdded","_removalsTail","previousRecord","_prev","_moveAfter","_reinsertAfter","reinsertRecord","_addToRemovals","_unlink","_nextMoved","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","_remove","toIndex","_identityChangesTail","_identityChangesHead","_nextIdentityChange","_head","_tail","_nextDup","_DuplicateItemRecordList","atOrAfterIndex","_prevDup","duplicates","moveOffset","isJsObject","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","_reset","_forEach","_getOrCreateRecordForKey","_insertBeforeOrAppend","previousValue","currentValue","record_1","_maybeAddToChanges","KeyValueChangeRecord_","_nextChanged","_addToAdditions","_addToChanges","IterableDiffers","factories","supports","KeyValueDiffers","kv","parentPlatformFactory","shiftInitState","priorInitState","newInitState","initState","shouldCallLifecycleInitHook","initIndex","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","currValue","isFirstCheck","_tokenKeyCache","tokenKey","checkBinding","oldValues","checkAndUpdateBinding","checkBindingNoChanges","currView","markParentViewsForCheckProjectedViews","endView","dispatchEvent","markParentViewsForCheck","asElementData","handleEvent","declaredViewContainer","viewParentEl","splitDepsDsl","sourceName","renderHost","componentRendererType","ViewEncapsulation$1","Native","renderElement","resolveDefinition","DEFINITION_CACHE","NOOP","visitRootRenderNodes","nextSibling","endIndex","visitRenderNode","visitProjectedRenderNodes","hostElDef","projectedNodes","renderNode","bindingFlags","execRenderNodeAction","rn","embeddedViews","_embeddedViews","NS_PREFIX_RE","splitNamespace","elDef","getParentRenderElement","preserveContent","ShadowDom","ns","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","checkAndUpdateElementValue","elData","renderNode$$1","renderValue","sanitize","setElementAttribute","addClass","setElementClass","setStyle","NgModuleRefTokenKey","resolveNgModuleDep","former","InjectorRefTokenKey","tokenKey_1","INJECTORRefTokenKey$1","_def","providersByKey","_createProviderInstance","providerInstance","UNDEFINED_VALUE","_createProviderInstance$1","depValues","_createClass","_callFactory","attachEmbeddedView","parentView","elementData","viewContainerParent","addToArray","vcElementData","projectedViews","dvcElementData","_projectedViews","parentNodeDef","attachProjectedView","detachEmbeddedView","removeFromArray","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","componentNodeIndex","asProviderData","VERSION$2","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","attachToViewContainerRef","viewRef_","oldViewIndex","newViewIndex","dirtyParentQueries","renderDetachView","createChangeDetectorRef","fs","fs$$1","disposables","detachFromAppRef","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","allowPrivateServices","createRendererV1","RendererAdapter","namespaceAndName","createText","projectNodes","attachViewAfter","viewRootNodes","attributeValue","isAdd","styleName","styleValue","setText","animate","NgModuleRef_","_moduleType","provDef","injectFlags","lifecycles","createPipeInstance","createDirectiveInstance","outputObservable","eventHandlerClosure","outputIndex","createClass","callFactory","tokenKey$$1","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","searchView","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","createInjector","INJECTORRefTokenKey","allProviders","publicProviders","providerData","providerDef_1","isComponentView","unwrap","callLifecycleHooksChildrenFirst","callProviderLifecycles","childFlags","directChildFlags","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","isEmbeddedView","tplDef","filterId","asQueryList","setDirty","checkAndUpdateQuery","queryList","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","matchedQueries","embeddedView","dvc","projectedView","childMatchedQueries","queryValueType","appendNgContent","anchorDef$$1","compRenderer","outputCount","createViewNodes","compViewDef","nodeData","createProviderInstance","initView","execEmbeddedViewsAction","ViewAction","CheckNoChanges","markProjectedViewsForCheck","CheckAndUpdate","execQueriesAction","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementInline","_addInterpolationPart","checkAndUpdateTextInline","updateProp","ngOnChanges","ngOnInit","checkAndUpdateDirectiveInline","asPureExpressionData","checkAndUpdateNodeInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","i_1","checkNoChangesNode","checkNoChangesQuery","Destroy","asTextData","renderText","destroyViewNodes","CreateViewNodes","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","execComponentViewsAction","viewState","execProjectedViewsAction","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","services","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","createProdRootView","prodCheckAndUpdateNode","Sanitizer","viewDef$$1","viewDefOverrides","hasOverrides","providerOverrides","hasDeprecatedOverrides","override","deprecatedBehavior","compFactory","applyProviderOverridesToView","elIndicesWithOverwrittenProviders","lastElementDef","elementIndicesWithOverwrittenProviders","elIndex","prodCheckNoChangesNode","callWithDebugContext","DebugAction","debugUpdateDirectives","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","debugUpdateRenderer","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","removeAttribute","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","elView","elOrCompView","childDef","collectReferences","findHostElement","logError","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","oldAction","_currentAction","oldNodeIndex","_currentNodeIndex","_currentView","getCurrentDebugContext","DebugRendererFactory2","DebugRenderer2","renderData","whenRenderingDone","namespace","debugCtx","debugContext","debugEl","getDebugNode","debugChildEl","debugRefEl","oldChild","removeClass","NgModuleFactory_","_ngModuleDefFactory","initServicesIfNeeded","isRoot","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","inSpan","exclusive","getSelectors","removeSuffix","elements_1","diagnosticInfoFromTemplateInfo","findTemplateAstAt","allowWidening","spanA","spanB","findAstAt","excludeEmpty","getExpressionCompletions","query$$1","language_services_7","language_services_4","getExpressionSymbol","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmousemove","onmouseout","onkeypress","onkeydown","onkeyup","onload","onunload","href","alt","tabindex","media","nohref","usemap","onfocus","onblur","charset","classid","codebase","codetype","archive","standby","cite","datetime","shape","coords","enctype","onsubmit","onreset","accept-charset","valuetype","longdesc","width","disabled","onselect","accesskey","multiple","onchange","selected","checked","maxlength","rows","cols","height","border","rules","cellspacing","cellpadding","datapagesize","align","charoff","valign","abbr","axis","headers","rowspan","colspan","profile","http-equiv","scheme","hreflang","rev","ismap","TT","BIG","STRONG","DFN","CODE","SAMP","KBD","VAR","CITE","ABBR","ACRONYM","SPAN","BDO","BODY","ADDRESS","DIV","MAP","AREA","IMG","OBJECT","PARAM","PRE","BLOCKQUOTE","INS","DEL","DL","DT","DD","UL","FORM","LABEL","INPUT","SELECT","OPTGROUP","OPTION","TEXTAREA","FIELDSET","LEGEND","BUTTON","TABLE","CAPTION","COLGROUP","COL","TR","HEAD","TITLE","BASE","META","NOSCRIPT","defaultAttributes","indexes","indexes_1","SCHEMA","EVENT","BOOLEAN","SchemaInformation","typeParts","NUMBER","STRING","allKnownElements","eventsOf","propertiesOf","typeOf","_instance","hiddenHtmlElements","noscript","getTemplateCompletions","templateInfo","template$$1","templatePosition_1","mostSpecific","path_1","elementCompletions","startTagSpan","tagLen","ExpressionVisitor","language_services_2","dinfo","widerPath_1","widerVisitor","attributeValueCompletions","attributeCompletions","re","entityCompletions","getSourceText","astPosition_1","templatePath","interpolationCompletions","voidElementAttributeCompletions","attributeCompletionsForElement","htmlAttributes","attributeNames","fromHtml","htmlProperties","propertyNames","htmlEvents","eventNames","selectorMap","applicableSelectors","selectorAndAttributeNames","selectorAndAttr","attrs_1","duplicate","inputOutput","cloneAttr","expandedAttr","getAttributeInfosForElement","nameOfAttr","htmlNames","uniqueByName","getExpressionScope$$1","key_1","selectorInfo","selector_1","templateBindingResult","valueRelativePosition_1","lowerName","keyCompletions","equalLocation","contextTable","symbolsToCompletions","expressionPosition","completions","attributeValuePosition","templateAttr","templatePosition","symbol_1","inEvent","findAttribute","expressionOffset","span_1","OverrideKindSymbol","attributeValueSymbol_1","invertMap","invertedOutputs","fieldName","findOutputBinding","invertedInput","findInputBinding","sym","kindOverride","createLanguageService","LanguageServiceImpl","getTemplateReferences","getTemplates","astProvider","getTemplateAst","expressionDiagnostics","language_services_3","templates_1","getTemplateDiagnostics","getDeclarations","getAnalyzedModules","declarationSpan","declarations_1","getDeclarationDiagnostics","uniqueBySpan","getPipesAt","getTemplateAstAtPosition","getCompletionsAt","getDefinitionAt","getHoverAt","locateSymbol","container$$1","hoverTextOf","getTemplateAt","contextFile","rawHtmlParser","parser","module_1","moduleSize","resultSize","findSuitableDefaultModule","resolvedDirectives","htmlResult","getSpanAt","getProgram","metadataCollector","language_services_13","verboseInvalidExpression","directoryExists","directoryName","getScriptSnapshot","snapshot","getLength","ReflectorModuleModuleResolutionHost","ts.createModuleResolutionCache","metadataReaderCache","language_services_14","hostAdapter","serviceHost","moduleResolutionCache","createModuleResolutionCache","getCurrentDirectory","modulePath","path.join","ts.resolveModuleName","DummyHtmlParser","DummyResourceLoader","TypeScriptServiceHost","tsService","_typeCache","setSite","validate","_resolver","moduleResolver","directiveResolver","resourceLoader","directiveNormalizer","pipeResolver","collectError","ensureTemplateMap","templateReferences","fileToComponent","getSourceFromType","getScriptVersion","updateAnalyzedModules","ensureAnalyzedModules","getScriptFileNames","getSourceFiles","version_1","ts.forEachChild","getSourceFromNode","templateSource","visit_1","getDeclarationFromNode","visit_2","modulesOutOfDate","_checker","getTypeChecker","lastProgram","_staticSymbolResolver","clearCaches","seen_1","version$$1","fileVersions","collectedErrors","templateReference","getSourceFromDeclaration","language_services_10","queryCache","pipes_1","language_services_12","language_services_11","ts.SyntaxKind","getTemplateClassDeclFromNode","stringOf","shrink","spanOf$1","getTemplateClassFromStaticSymbol","_reflectorHost","scriptFileNames","path.dirname","tsConfigPath","existsSync","parentDir","findTsConfig","genDir","getCompilationSettings","paths","ReflectorHost","errorMap","sourceFilePath","reflectorHost","ssr","currentToken","missingTemplate","callTarget","Decorator","getCollectedErrors","defaultSpan","position_1","isFormattedError","convertChain","errorToDiagnosticWithChain","WeakMap","projectHostMap","oldLS","languageService","tryCall","tryFilenameCall","ls","tryFilenameOneCall","tryFilenameTwoCall","p1","p2","tryFilenameThreeCall","p3","tryFilenameFiveCall","p4","p5","cleanupSemanticCache","getSyntacticDiagnostics","getSemanticDiagnostics","getCompilerOptionsDiagnostics","getSyntacticClassifications","getSemanticClassifications","getEncodedSyntacticClassifications","getEncodedSemanticClassifications","getCompletionsAtPosition","getCompletionEntryDetails","getCompletionEntrySymbol","getJsxClosingTagAtPosition","getQuickInfoAtPosition","getNameOrDottedNameSpan","getBreakpointStatementAtPosition","getSignatureHelpItems","getRenameInfo","findRenameLocations","getDefinitionAtPosition","getImplementationAtPosition","getReferencesAtPosition","findReferences","getDocumentHighlights","getOccurrencesAtPosition","getNavigateToItems","searchValue","maxResultCount","excludeDtsFiles","getNavigationBarItems","getNavigationTree","getOutliningSpans","getTodoComments","getBraceMatchingAtPosition","getIndentationAtPosition","getFormattingEditsForRange","getFormattingEditsForDocument","getFormattingEditsAfterKeystroke","getDocCommentTemplateAtPosition","isValidBraceCompletionAtPosition","getSpanOfEnclosingComment","getCodeFixesAtPosition","applyCodeActionCommand","getEmitOutput","dispose","getApplicableRefactors","getDefinitionAndBoundSpan","getCombinedCodeFix","fixId","formatOptions","preferences","getSuggestionDiagnostics","organizeImports","getEditsForFileRename","oldFilePath","newFilePath","typescriptOnly","proxy","diagnosticMessageToDiagnosticMessageText","diagnosticChainToDiagnosticChain","tryOperation","attempting","projectService","logger","languageServiceHost","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","results_1","sortText","kindModifiers","displayParts","ours","documentation","textSpan","file_1","diagnosticToDiagnostic","ours_1","loc","containerName","containerKind"],"mappings":"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SAAAmpD,MAAA5jE,WAAA2B,UACjB,GAAAmqD,WACH,OAAAA,WAGL,GAAOtxC,gBACP,MAAA,IAAA50B,MAAA,8BAAAif,UAAAK,iCArB4B,4ECOxB2+D,gBAAgBlkE,gBAAgBmkE,sBAEhC,cACI,gCAEWnkE,gBAAc2W,OAAW,4BAErC3W,gBAAAokE,KACH,eAAgB,YAAgB,YAAc,YAAA,SAC1C,SAAA,kBAAa,kBAAA,WAAA,cACb,UAAA,aAAiB,YAAA,WAAA,SACjB,aAAW,gBAAA,YAAA,eAAA,8BAEApkE,gBAAAqkE,cACX,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACD,YACN,YACM,kBACV,cACQ,gBAGDC,0BAEPJ,gBAAA/zC,IAAAo0C;;;;;;;yICgBGC,UACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBA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5I,OACM,IAAM,IAAC9I,UAAA6iJ,MACjBA,MAAAt+J,eAAAyb,UACejY,OAAe2W,QAASuH,OAAA48I,MAAA7iJ,4FAgBpC88M,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACF,wEAQE,gFACA,yBACA,8BACA,sBAEAC,MAAA,QACAC,QAAS,iBACD,gBACC,gBACL,2BAC4B,oBACxBC,wBACA1hN,MAAI9W,UACJulF,iBACAvuE,QAAW,SAAG0tE,aACd,IAAA72D,MAAS62D,YAAWr/D,MAAQ,KACxBu/D,WAAY/2D,MAAA,GAAUxI,MAAG,KACzBozM,WAAY5qM,MAAA,GAA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","file":"/Users/ced-pro/Code/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.min.js.map","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var TagContentType;\n(function (TagContentType) {\n    TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n    TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n    TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n})(TagContentType || (TagContentType = {}));\nexport function splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n// `<ng-container>` tags work the same regardless the namespace\nexport function isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n// `<ng-content>` tags work the same regardless the namespace\nexport function isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n// `<ng-template>` tags work the same regardless the namespace\nexport function isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\nexport function getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\nexport function mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nexport var NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nexport var NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n//# sourceMappingURL=tags.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var lcParent = currentParent.toLowerCase();\n        var isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\nexport { HtmlTagDefinition };\nvar _DEFAULT_TAG_DEFINITION;\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS;\nexport function getHtmlTagDefinition(tagName) {\n    if (!TAG_DEFINITIONS) {\n        _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n        TAG_DEFINITIONS = {\n            'base': new HtmlTagDefinition({ isVoid: true }),\n            'meta': new HtmlTagDefinition({ isVoid: true }),\n            'area': new HtmlTagDefinition({ isVoid: true }),\n            'embed': new HtmlTagDefinition({ isVoid: true }),\n            'link': new HtmlTagDefinition({ isVoid: true }),\n            'img': new HtmlTagDefinition({ isVoid: true }),\n            'input': new HtmlTagDefinition({ isVoid: true }),\n            'param': new HtmlTagDefinition({ isVoid: true }),\n            'hr': new HtmlTagDefinition({ isVoid: true }),\n            'br': new HtmlTagDefinition({ isVoid: true }),\n            'source': new HtmlTagDefinition({ isVoid: true }),\n            'track': new HtmlTagDefinition({ isVoid: true }),\n            'wbr': new HtmlTagDefinition({ isVoid: true }),\n            'p': new HtmlTagDefinition({\n                closedByChildren: [\n                    'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset',\n                    'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5',\n                    'h6', 'header', 'hgroup', 'hr', 'main', 'nav', 'ol',\n                    'p', 'pre', 'section', 'table', 'ul'\n                ],\n                closedByParent: true\n            }),\n            'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n            'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n            'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n            'tr': new HtmlTagDefinition({\n                closedByChildren: ['tr'],\n                requiredParents: ['tbody', 'tfoot', 'thead'],\n                closedByParent: true\n            }),\n            'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n            'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n            'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n            'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n            'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n            'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n            'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n            'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n            'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n            'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n            'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n        };\n    }\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n//# sourceMappingURL=html_tags.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\nimport { CssSelector } from './selector';\nexport var createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nexport var createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc, ngInjectableDef: undefined }); });\nexport var createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\nexport var createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nexport var createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nexport var createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nexport var createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\nexport var createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\nexport var ViewEncapsulation;\n(function (ViewEncapsulation) {\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation || (ViewEncapsulation = {}));\nexport var ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\nexport var createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (tslib_1.__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\nexport var createPipe = makeMetadataFactory('Pipe', function (p) { return (tslib_1.__assign({ pure: true }, p)); });\nexport var createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\nexport var createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\nexport var createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\nexport var createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\nexport var createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\nexport var createInjectable = makeMetadataFactory('Injectable', function (injectable) {\n    if (injectable === void 0) { injectable = {}; }\n    return injectable;\n});\nexport var CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nexport var NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nexport var createOptional = makeMetadataFactory('Optional');\nexport var createSelf = makeMetadataFactory('Self');\nexport var createSkipSelf = makeMetadataFactory('SkipSelf');\nexport var createHost = makeMetadataFactory('Host');\nexport var Type = Function;\nexport var SecurityContext;\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(SecurityContext || (SecurityContext = {}));\nexport var MissingTranslationStrategy;\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\nfunction makeMetadataFactory(name, props) {\n    var factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var values = props ? props.apply(void 0, args) : {};\n        return tslib_1.__assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\nfunction parserSelectorToSimpleSelector(selector) {\n    var classes = selector.classNames && selector.classNames.length ? [8 /* CLASS */].concat(selector.classNames) :\n        [];\n    var elementName = selector.element && selector.element !== '*' ? selector.element : '';\n    return [elementName].concat(selector.attrs, classes);\n}\nfunction parserSelectorToNegativeSelector(selector) {\n    var classes = selector.classNames && selector.classNames.length ? [8 /* CLASS */].concat(selector.classNames) :\n        [];\n    if (selector.element) {\n        return [\n            1 /* NOT */ | 4 /* ELEMENT */, selector.element\n        ].concat(selector.attrs, classes);\n    }\n    else if (selector.attrs.length) {\n        return [1 /* NOT */ | 2 /* ATTRIBUTE */].concat(selector.attrs, classes);\n    }\n    else {\n        return selector.classNames && selector.classNames.length ? [1 /* NOT */ | 8 /* CLASS */].concat(selector.classNames) :\n            [];\n    }\n}\nfunction parserSelectorToR3Selector(selector) {\n    var positive = parserSelectorToSimpleSelector(selector);\n    var negative = selector.notSelectors && selector.notSelectors.length ?\n        selector.notSelectors.map(function (notSelector) { return parserSelectorToNegativeSelector(notSelector); }) :\n        [];\n    return positive.concat.apply(positive, negative);\n}\nexport function parseSelectorToR3Selector(selector) {\n    var selectors = CssSelector.parse(selector);\n    return selectors.map(parserSelectorToR3Selector);\n}\n//# sourceMappingURL=core.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getHtmlTagDefinition } from './ml_parser/html_tags';\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        /**\n         * The selectors are encoded in pairs where:\n         * - even locations are attribute names\n         * - odd locations are attribute values.\n         *\n         * Example:\n         * Selector: `[key1=value1][key2]` would parse to:\n         * ```\n         * ['key1', 'value1', 'key2', '']\n         * ```\n         */\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    CssSelector.parse = function (selector) {\n        var results = [];\n        var _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var cssSelector = new CssSelector();\n        var match;\n        var current = cssSelector;\n        var inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var tagName = this.element || 'div';\n        var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var attrs = '';\n        for (var i = 0; i < this.attrs.length; i += 2) {\n            var attrName = this.attrs[i];\n            var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    CssSelector.prototype.getAttrs = function () {\n        var result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    CssSelector.prototype.toString = function () {\n        var res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var i = 0; i < this.attrs.length; i += 2) {\n                var name_1 = this.attrs[i];\n                var value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\nexport { CssSelector };\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var listContext = null;\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param cssSelector A css selector\n     * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var matcher = this;\n        var element = cssSelector.element;\n        var classNames = cssSelector.classNames;\n        var attrs = cssSelector.attrs;\n        var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var i = 0; i < classNames.length; i++) {\n                var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i += 2) {\n                var isTerminal = i === attrs.length - 2;\n                var name_2 = attrs[i];\n                var value = attrs[i + 1];\n                if (isTerminal) {\n                    var terminalMap = matcher._attrValueMap;\n                    var terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var partialMap = matcher._attrValuePartialMap;\n                    var partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var result = false;\n        var element = cssSelector.element;\n        var classNames = cssSelector.classNames;\n        var attrs = cssSelector.attrs;\n        for (var i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var i = 0; i < classNames.length; i++) {\n                var className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i += 2) {\n                var name_3 = attrs[i];\n                var value = attrs[i + 1];\n                var terminalValuesMap = this._attrValueMap.get(name_3);\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var partialValuesMap = this._attrValuePartialMap.get(name_3);\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var selectables = map.get(name) || [];\n        var starSelectables = map.get('*');\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var selectable;\n        var result = false;\n        for (var i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nexport { SelectorMatcher };\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nexport { SelectorListContext };\n// Store context to pass back selector and context when a selector is matched\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\nexport { SelectorContext };\n//# sourceMappingURL=selector.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nexport function dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\nexport function splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\nexport function splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\nfunction _splitAt(input, character, defaultValues) {\n    var characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\nexport function visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(value, context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(value, context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\nexport function isDefined(val) {\n    return val !== null && val !== undefined;\n}\nexport function noUndefined(val) {\n    return val === undefined ? null : val;\n}\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nexport { ValueTransformer };\nexport var SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : syncAsyncValues;\n    }\n};\nexport function error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\nexport function syntaxError(msg, parseErrors) {\n    var error = Error(msg);\n    error[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        error[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\nexport function isSyntaxError(error) {\n    return error[ERROR_SYNTAX_ERROR];\n}\nexport function getParseErrors(error) {\n    return error[ERROR_PARSE_ERRORS] || [];\n}\n// Escape characters that have a special meaning in Regular Expressions\nexport function escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\nexport function utf8Encode(str) {\n    var encoded = '';\n    for (var index = 0; index < str.length; index++) {\n        var codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    // WARNING: do not try to `JSON.stringify(token)` here\n    // see https://github.com/angular/angular/issues/23440\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n */\nexport function resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\nexport { Version };\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar _a;\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\nexport { TextAst };\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\nexport { BoundTextAst };\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\nexport { AttrAst };\nvar BoundPropertyMapping = (_a = {},\n    _a[4 /* Animation */] = 4 /* Animation */,\n    _a[1 /* Attribute */] = 1 /* Attribute */,\n    _a[2 /* Class */] = 2 /* Class */,\n    _a[0 /* Property */] = 0 /* Property */,\n    _a[3 /* Style */] = 3 /* Style */,\n    _a);\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === 4 /* Animation */;\n    }\n    BoundElementPropertyAst.fromBoundProperty = function (prop) {\n        var type = BoundPropertyMapping[prop.type];\n        return new BoundElementPropertyAst(prop.name, type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n    };\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\nexport { BoundElementPropertyAst };\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        return name;\n    };\n    BoundEventAst.fromParsedEvent = function (event) {\n        var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEventAst(event.name, target, phase, event.handler, event.sourceSpan);\n    };\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\nexport { BoundEventAst };\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\nexport { ReferenceAst };\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    VariableAst.fromParsedVariable = function (v) {\n        return new VariableAst(v.name, v.value, v.sourceSpan);\n    };\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\nexport { VariableAst };\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\nexport { ElementAst };\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\nexport { EmbeddedTemplateAst };\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\nexport { BoundDirectivePropertyAst };\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\nexport { DirectiveAst };\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n        this.isModule = isModule;\n    }\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nexport { ProviderAst };\nexport var ProviderAstType;\n(function (ProviderAstType) {\n    ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n    ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n    ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n    ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n    ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n})(ProviderAstType || (ProviderAstType = {}));\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nexport { NgContentAst };\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\nexport { NullTemplateVisitor };\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var results = [];\n        var t = this;\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\nexport { RecursiveTemplateAstVisitor };\n/**\n * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n */\nexport function templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var result = [];\n    var visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n//# sourceMappingURL=template_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation } from './core';\nimport { noUndefined } from './util';\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\nexport { CompilerConfig };\nexport function preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = false; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n//# sourceMappingURL=config.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\nexport { StaticSymbol };\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nexport { StaticSymbolCache };\n//# sourceMappingURL=static_symbol.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from './aot/static_symbol';\nimport { splitAtColon, stringify } from './util';\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nexport function sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\nexport function identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\nexport function identifierModuleUrl(compileIdentifier) {\n    var ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\nexport function viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\nexport function rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\nexport function hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\nexport function componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nexport var CompileSummaryKind;\n(function (CompileSummaryKind) {\n    CompileSummaryKind[CompileSummaryKind[\"Pipe\"] = 0] = \"Pipe\";\n    CompileSummaryKind[CompileSummaryKind[\"Directive\"] = 1] = \"Directive\";\n    CompileSummaryKind[CompileSummaryKind[\"NgModule\"] = 2] = \"NgModule\";\n    CompileSummaryKind[CompileSummaryKind[\"Injectable\"] = 3] = \"Injectable\";\n})(CompileSummaryKind || (CompileSummaryKind = {}));\nexport function tokenName(token) {\n    return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\nexport function tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\nexport { CompileStylesheetMetadata };\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n            styles: this.styles\n        };\n    };\n    return CompileTemplateMetadata;\n}());\nexport { CompileTemplateMetadata };\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var hostListeners = {};\n        var hostProperties = {};\n        var hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var value = host[key];\n                var matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\nexport { CompileDirectiveMetadata };\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\nexport { CompilePipeMetadata };\nvar CompileShallowModuleMetadata = /** @class */ (function () {\n    function CompileShallowModuleMetadata() {\n    }\n    return CompileShallowModuleMetadata;\n}());\nexport { CompileShallowModuleMetadata };\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var module = this.transitiveModule;\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nexport { CompileNgModuleMetadata };\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\nexport { TransitiveCompileNgModuleMetadata };\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\nexport { ProviderMeta };\nexport function flatten(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\nexport function templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = templateMeta.templateUrl;\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\nexport function sharedStylesheetJitUrl(meta, id) {\n    var pathParts = meta.moduleUrl.split(/\\/\\\\/g);\n    var baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\nexport function ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\nexport function templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n//# sourceMappingURL=compile_metadata.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expression `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    AstPath.prototype.first = function (ctor) {\n        for (var i = this.path.length - 1; i >= 0; i--) {\n            var item = this.path[i];\n            if (item instanceof ctor)\n                return item;\n        }\n    };\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    AstPath.prototype.pop = function () { return this.path.pop(); };\n    return AstPath;\n}());\nexport { AstPath };\n//# sourceMappingURL=ast_path.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AstPath } from '../ast_path';\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nexport { Text };\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nexport { Expansion };\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nexport { ExpansionCase };\nvar Attribute = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nexport { Attribute };\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nexport { Element };\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\nexport { Comment };\nexport function visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var result = [];\n    var visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var results = [];\n        var t = this;\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\nexport { RecursiveVisitor };\nfunction spanOf(ast) {\n    var start = ast.sourceSpan.start.offset;\n    var end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\nexport function findNode(nodes, position) {\n    var path = [];\n    var visitor = new /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n//# sourceMappingURL=ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport function assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\nexport function assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var start_1 = value[0];\n        var end_1 = value[1];\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n//# sourceMappingURL=assertions.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertInterpolationSymbols } from '../assertions';\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nexport { InterpolationConfig };\nexport var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n//# sourceMappingURL=interpolation_config.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\nexport { StyleWithImports };\nexport function isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the @import urls that\n * are either relative or don't have a `package:` scheme\n */\nexport function extractStyleUrls(resolver, baseUrl, cssText) {\n    var foundUrls = [];\n    var modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n//# sourceMappingURL=style_url_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isNgContent } from '../ml_parser/tags';\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\nexport function preparseElement(ast) {\n    var selectAttr = null;\n    var hrefAttr = null;\n    var relAttr = null;\n    var nonBindable = false;\n    var projectAs = '';\n    ast.attrs.forEach(function (attr) {\n        var lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var nodeName = ast.name.toLowerCase();\n    var type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nexport var PreparsedElementType;\n(function (PreparsedElementType) {\n    PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n    PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n    PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n    PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n})(PreparsedElementType || (PreparsedElementType = {}));\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\nexport { PreparsedElement };\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n//# sourceMappingURL=template_preparser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileStylesheetMetadata, CompileTemplateMetadata, templateSourceUrl } from './compile_metadata';\nimport { preserveWhitespacesDefault } from './config';\nimport { ViewEncapsulation } from './core';\nimport * as html from './ml_parser/ast';\nimport { InterpolationConfig } from './ml_parser/interpolation_config';\nimport { extractStyleUrls, isStyleUrlResolvable } from './style_url_resolver';\nimport { PreparsedElementType, preparseElement } from './template_parser/template_preparser';\nimport { SyncAsync, isDefined, stringify, syntaxError } from './util';\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var template = normalizedDirective.template;\n        this._resourceLoaderCache.delete(template.templateUrl);\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n    };\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    DirectiveNormalizer.prototype._preParseTemplate = function (prenomData) {\n        var _this = this;\n        var template;\n        var templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var isInline = !!prenormData.template;\n        var interpolationConfig = InterpolationConfig.fromArray(prenormData.interpolation);\n        var rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var visitor = new TemplatePreparseVisitor();\n        html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) { return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets); });\n    };\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = function (prenormData, preparsedTemplate, stylesheets) {\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets with all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resource loading may be async)\n        var _this = this;\n        var styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var styleUrls = preparsedTemplate.styleUrls;\n        var externalStylesheets = styleUrls.map(function (styleUrl) {\n            var stylesheet = stylesheets.get(styleUrl);\n            var styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    DirectiveNormalizer.prototype._inlineStyles = function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var stylesheet = stylesheets.get(styleUrl);\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return loadedStylesheets; });\n    };\n    DirectiveNormalizer.prototype._normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var moduleUrl = stylesheet.moduleUrl;\n        var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var allStyles = stylesheet.styles.map(function (style) {\n            var styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nexport { DirectiveNormalizer };\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof html.Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        html.visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { html.visitAll(this, ast.cases); };\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        html.visitAll(this, ast.expression);\n    };\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n//# sourceMappingURL=directive_normalizer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { createComponent, createContentChild, createContentChildren, createDirective, createHostBinding, createHostListener, createInput, createOutput, createViewChild, createViewChildren } from './core';\nimport { resolveForwardRef, splitAtColon, stringify } from './util';\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\n/*\n * Resolve a `Type` for {@link Directive}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var propertyMetadata = this._reflector.propMetadata(type);\n                var guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, guards, directiveType) {\n        var inputs = [];\n        var outputs = [];\n        var host = {};\n        var queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var names = new Set();\n        var publicNames = new Set();\n        var reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var i = bindings.length - 1; i >= 0; i--) {\n            var binding = bindings[i];\n            var name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var mergedHost = directive.host ? tslib_1.__assign({}, directive.host, host) : host;\n        var mergedQueries = directive.queries ? tslib_1.__assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var comp = directive;\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nexport { DirectiveResolver };\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\nexport function findLast(arr, condition) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=directive_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var $EOF = 0;\nexport var $TAB = 9;\nexport var $LF = 10;\nexport var $VTAB = 11;\nexport var $FF = 12;\nexport var $CR = 13;\nexport var $SPACE = 32;\nexport var $BANG = 33;\nexport var $DQ = 34;\nexport var $HASH = 35;\nexport var $$ = 36;\nexport var $PERCENT = 37;\nexport var $AMPERSAND = 38;\nexport var $SQ = 39;\nexport var $LPAREN = 40;\nexport var $RPAREN = 41;\nexport var $STAR = 42;\nexport var $PLUS = 43;\nexport var $COMMA = 44;\nexport var $MINUS = 45;\nexport var $PERIOD = 46;\nexport var $SLASH = 47;\nexport var $COLON = 58;\nexport var $SEMICOLON = 59;\nexport var $LT = 60;\nexport var $EQ = 61;\nexport var $GT = 62;\nexport var $QUESTION = 63;\nexport var $0 = 48;\nexport var $9 = 57;\nexport var $A = 65;\nexport var $E = 69;\nexport var $F = 70;\nexport var $X = 88;\nexport var $Z = 90;\nexport var $LBRACKET = 91;\nexport var $BACKSLASH = 92;\nexport var $RBRACKET = 93;\nexport var $CARET = 94;\nexport var $_ = 95;\nexport var $a = 97;\nexport var $e = 101;\nexport var $f = 102;\nexport var $n = 110;\nexport var $r = 114;\nexport var $t = 116;\nexport var $u = 117;\nexport var $v = 118;\nexport var $x = 120;\nexport var $z = 122;\nexport var $LBRACE = 123;\nexport var $BAR = 124;\nexport var $RBRACE = 125;\nexport var $NBSP = 160;\nexport var $PIPE = 124;\nexport var $TILDA = 126;\nexport var $AT = 64;\nexport var $BT = 96;\nexport function isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\nexport function isDigit(code) {\n    return $0 <= code && code <= $9;\n}\nexport function isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\nexport function isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n//# sourceMappingURL=chars.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nexport var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n    TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n    TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n    TokenType[TokenType[\"String\"] = 3] = \"String\";\n    TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n    TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n    TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n})(TokenType || (TokenType = {}));\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    Lexer.prototype.tokenize = function (text) {\n        var scanner = new _Scanner(text);\n        var tokens = [];\n        var token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nexport { Lexer };\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\nexport { Token };\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nexport var EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? chars.$EOF : this.input.charCodeAt(this.index);\n    };\n    _Scanner.prototype.scanToken = function () {\n        var input = this.input, length = this.length;\n        var peek = this.peek, index = this.index;\n        // Skip whitespace.\n        while (peek <= chars.$SPACE) {\n            if (++index >= length) {\n                peek = chars.$EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (chars.isDigit(peek))\n            return this.scanNumber(index);\n        var start = index;\n        switch (peek) {\n            case chars.$PERIOD:\n                this.advance();\n                return chars.isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, chars.$PERIOD);\n            case chars.$LPAREN:\n            case chars.$RPAREN:\n            case chars.$LBRACE:\n            case chars.$RBRACE:\n            case chars.$LBRACKET:\n            case chars.$RBRACKET:\n            case chars.$COMMA:\n            case chars.$COLON:\n            case chars.$SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case chars.$SQ:\n            case chars.$DQ:\n                return this.scanString();\n            case chars.$HASH:\n            case chars.$PLUS:\n            case chars.$MINUS:\n            case chars.$STAR:\n            case chars.$SLASH:\n            case chars.$PERCENT:\n            case chars.$CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case chars.$QUESTION:\n                return this.scanComplexOperator(start, '?', chars.$PERIOD, '.');\n            case chars.$LT:\n            case chars.$GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=');\n            case chars.$BANG:\n            case chars.$EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=', chars.$EQ, '=');\n            case chars.$AMPERSAND:\n                return this.scanComplexOperator(start, '&', chars.$AMPERSAND, '&');\n            case chars.$BAR:\n                return this.scanComplexOperator(start, '|', chars.$BAR, '|');\n            case chars.$NBSP:\n                while (chars.isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    _Scanner.prototype.scanIdentifier = function () {\n        var start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    _Scanner.prototype.scanNumber = function (start) {\n        var simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (chars.isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == chars.$PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!chars.isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var str = this.input.substring(start, this.index);\n        var value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    _Scanner.prototype.scanString = function () {\n        var start = this.index;\n        var quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var buffer = '';\n        var marker = this.index;\n        var input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == chars.$BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == chars.$u) {\n                    // 4 character hex code for unicode character.\n                    var hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == chars.$EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    _Scanner.prototype.error = function (message, offset) {\n        var position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\nfunction isIdentifierStart(code) {\n    return (chars.$a <= code && code <= chars.$z) || (chars.$A <= code && code <= chars.$Z) ||\n        (code == chars.$_) || (code == chars.$$);\n}\nexport function isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== chars.$EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\nfunction isIdentifierPart(code) {\n    return chars.isAsciiLetter(code) || chars.isDigit(code) || (code == chars.$_) ||\n        (code == chars.$$);\n}\nfunction isExponentStart(code) {\n    return code == chars.$e || code == chars.$E;\n}\nfunction isExponentSign(code) {\n    return code == chars.$MINUS || code == chars.$PLUS;\n}\nexport function isQuote(code) {\n    return code === chars.$SQ || code === chars.$DQ || code === chars.$BT;\n}\nfunction unescape(code) {\n    switch (code) {\n        case chars.$n:\n            return chars.$LF;\n        case chars.$f:\n            return chars.$FF;\n        case chars.$r:\n            return chars.$CR;\n        case chars.$t:\n            return chars.$TAB;\n        case chars.$v:\n            return chars.$VTAB;\n        default:\n            return code;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n//# sourceMappingURL=lexer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nexport { ParserError };\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nexport { ParseSpan };\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\nexport { AST };\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    tslib_1.__extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nexport { Quote };\nvar EmptyExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nexport { EmptyExpr };\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    tslib_1.__extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\nexport { ImplicitReceiver };\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    tslib_1.__extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nexport { Chain };\nvar Conditional = /** @class */ (function (_super) {\n    tslib_1.__extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nexport { Conditional };\nvar PropertyRead = /** @class */ (function (_super) {\n    tslib_1.__extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nexport { PropertyRead };\nvar PropertyWrite = /** @class */ (function (_super) {\n    tslib_1.__extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nexport { PropertyWrite };\nvar SafePropertyRead = /** @class */ (function (_super) {\n    tslib_1.__extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nexport { SafePropertyRead };\nvar KeyedRead = /** @class */ (function (_super) {\n    tslib_1.__extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nexport { KeyedRead };\nvar KeyedWrite = /** @class */ (function (_super) {\n    tslib_1.__extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nexport { KeyedWrite };\nvar BindingPipe = /** @class */ (function (_super) {\n    tslib_1.__extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nexport { BindingPipe };\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nexport { LiteralPrimitive };\nvar LiteralArray = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nexport { LiteralArray };\nvar LiteralMap = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nexport { LiteralMap };\nvar Interpolation = /** @class */ (function (_super) {\n    tslib_1.__extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nexport { Interpolation };\nvar Binary = /** @class */ (function (_super) {\n    tslib_1.__extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nexport { Binary };\nvar PrefixNot = /** @class */ (function (_super) {\n    tslib_1.__extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nexport { PrefixNot };\nvar NonNullAssert = /** @class */ (function (_super) {\n    tslib_1.__extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nexport { NonNullAssert };\nvar MethodCall = /** @class */ (function (_super) {\n    tslib_1.__extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nexport { MethodCall };\nvar SafeMethodCall = /** @class */ (function (_super) {\n    tslib_1.__extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nexport { SafeMethodCall };\nvar FunctionCall = /** @class */ (function (_super) {\n    tslib_1.__extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nexport { FunctionCall };\nvar ASTWithSource = /** @class */ (function (_super) {\n    tslib_1.__extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nexport { ASTWithSource };\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nexport { TemplateBinding };\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nexport { NullAstVisitor };\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ast.target.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nexport { RecursiveAstVisitor };\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, ast.target.visit(this), this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    AstTransformer.prototype.visitAll = function (asts) {\n        var res = new Array(asts.length);\n        for (var i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\nexport { AstTransformer };\n// A transformer that only creates new nodes if the transformer makes a change or\n// a change is made a child node.\nvar AstMemoryEfficientTransformer = /** @class */ (function () {\n    function AstMemoryEfficientTransformer() {\n    }\n    AstMemoryEfficientTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    AstMemoryEfficientTransformer.prototype.visitInterpolation = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions)\n            return new Interpolation(ast.span, ast.strings, expressions);\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive = function (ast, context) { return ast; };\n    AstMemoryEfficientTransformer.prototype.visitPropertyRead = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new PropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        var value = ast.value.visit(this);\n        if (receiver !== ast.receiver || value !== ast.value) {\n            return new PropertyWrite(ast.span, receiver, ast.name, value);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new SafePropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitMethodCall = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new MethodCall(ast.span, receiver, ast.name, this.visitAll(ast.args));\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        var args = this.visitAll(ast.args);\n        if (receiver !== ast.receiver || args !== ast.args) {\n            return new SafeMethodCall(ast.span, receiver, ast.name, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitFunctionCall = function (ast, context) {\n        var target = ast.target && ast.target.visit(this);\n        var args = this.visitAll(ast.args);\n        if (target !== ast.target || args !== ast.args) {\n            return new FunctionCall(ast.span, target, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralArray = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new LiteralArray(ast.span, expressions);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralMap = function (ast, context) {\n        var values = this.visitAll(ast.values);\n        if (values !== ast.values) {\n            return new LiteralMap(ast.span, ast.keys, values);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitBinary = function (ast, context) {\n        var left = ast.left.visit(this);\n        var right = ast.right.visit(this);\n        if (left !== ast.left || right !== ast.right) {\n            return new Binary(ast.span, ast.operation, left, right);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPrefixNot = function (ast, context) {\n        var expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new PrefixNot(ast.span, expression);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        var expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new NonNullAssert(ast.span, expression);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitConditional = function (ast, context) {\n        var condition = ast.condition.visit(this);\n        var trueExp = ast.trueExp.visit(this);\n        var falseExp = ast.falseExp.visit(this);\n        if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== falseExp) {\n            return new Conditional(ast.span, condition, trueExp, falseExp);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPipe = function (ast, context) {\n        var exp = ast.exp.visit(this);\n        var args = this.visitAll(ast.args);\n        if (exp !== ast.exp || args !== ast.args) {\n            return new BindingPipe(ast.span, exp, ast.name, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitKeyedRead = function (ast, context) {\n        var obj = ast.obj.visit(this);\n        var key = ast.key.visit(this);\n        if (obj !== ast.obj || key !== ast.key) {\n            return new KeyedRead(ast.span, obj, key);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        var obj = ast.obj.visit(this);\n        var key = ast.key.visit(this);\n        var value = ast.value.visit(this);\n        if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n            return new KeyedWrite(ast.span, obj, key, value);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitAll = function (asts) {\n        var res = new Array(asts.length);\n        var modified = false;\n        for (var i = 0; i < asts.length; ++i) {\n            var original = asts[i];\n            var value = original.visit(this);\n            res[i] = value;\n            modified = modified || value !== original;\n        }\n        return modified ? res : asts;\n    };\n    AstMemoryEfficientTransformer.prototype.visitChain = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new Chain(ast.span, expressions);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitQuote = function (ast, context) { return ast; };\n    return AstMemoryEfficientTransformer;\n}());\nexport { AstMemoryEfficientTransformer };\nexport function visitAstChildren(ast, visitor, context) {\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n// Bindings\nvar ParsedProperty = /** @class */ (function () {\n    function ParsedProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === ParsedPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === ParsedPropertyType.ANIMATION;\n    }\n    return ParsedProperty;\n}());\nexport { ParsedProperty };\nexport var ParsedPropertyType;\n(function (ParsedPropertyType) {\n    ParsedPropertyType[ParsedPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ParsedPropertyType[ParsedPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n    ParsedPropertyType[ParsedPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n})(ParsedPropertyType || (ParsedPropertyType = {}));\nvar ParsedEvent = /** @class */ (function () {\n    // Regular events have a target\n    // Animation events have a phase\n    function ParsedEvent(name, targetOrPhase, type, handler, sourceSpan) {\n        this.name = name;\n        this.targetOrPhase = targetOrPhase;\n        this.type = type;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    return ParsedEvent;\n}());\nexport { ParsedEvent };\nvar ParsedVariable = /** @class */ (function () {\n    function ParsedVariable(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ParsedVariable;\n}());\nexport { ParsedVariable };\nvar BoundElementProperty = /** @class */ (function () {\n    function BoundElementProperty(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    return BoundElementProperty;\n}());\nexport { BoundElementProperty };\n//# sourceMappingURL=ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { escapeRegExp } from '../util';\nimport { ASTWithSource, Binary, BindingPipe, Chain, Conditional, EmptyExpr, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralPrimitive, MethodCall, NonNullAssert, ParseSpan, ParserError, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, TemplateBinding } from './ast';\nimport { EOF, TokenType, isIdentifier, isQuote } from './lexer';\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nexport { SplitInterpolation };\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\nexport { TemplateBindingParseResult };\nfunction _createInterpolateRegExp(config) {\n    var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var sourceToLex = this._stripComments(input);\n        var tokens = this._lexer.tokenize(this._stripComments(input));\n        var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var ast = this._parseBindingAst(input, location, interpolationConfig);\n        var errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var sourceToLex = this._stripComments(input);\n        var tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    Parser.prototype.parseTemplateBindings = function (tplKey, tplValue, location) {\n        var tokens = this._lexer.tokenize(tplValue);\n        return new _ParseAST(tplValue, location, tokens, tplValue.length, false, this.errors, 0)\n            .parseTemplateBindings(tplKey);\n    };\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var expressions = [];\n        for (var i = 0; i < split.expressions.length; ++i) {\n            var expressionText = split.expressions[i];\n            var sourceToLex = this._stripComments(expressionText);\n            var tokens = this._lexer.tokenize(sourceToLex);\n            var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var regexp = _createInterpolateRegExp(interpolationConfig);\n        var parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var strings = [];\n        var expressions = [];\n        var offsets = [];\n        var offset = 0;\n        for (var i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    Parser.prototype._stripComments = function (input) {\n        var i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    Parser.prototype._commentStart = function (input) {\n        var outerQuote = null;\n        for (var i = 0; i < input.length - 1; i++) {\n            var char = input.charCodeAt(i);\n            var nextChar = input.charCodeAt(i + 1);\n            if (char === chars.$SLASH && nextChar == chars.$SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var regexp = _createInterpolateRegExp(interpolationConfig);\n        var parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var errLocation = '';\n        for (var j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nexport { Parser };\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    _ParseAST.prototype.peek = function (offset) {\n        var i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    _ParseAST.prototype.advance = function () { this.index++; };\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    _ParseAST.prototype.parseChain = function () {\n        var exprs = [];\n        var start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter(chars.$SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter(chars.$SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    _ParseAST.prototype.parsePipe = function () {\n        var result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var name_1 = this.expectIdentifierOrKeyword();\n                var args = [];\n                while (this.optionalCharacter(chars.$COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    _ParseAST.prototype.parseConditional = function () {\n        var start = this.inputIndex;\n        var result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var yes = this.parsePipe();\n            var no = void 0;\n            if (!this.optionalCharacter(chars.$COLON)) {\n                var end = this.inputIndex;\n                var expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var start = this.inputIndex;\n            var operator = this.next.strValue;\n            var result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    _ParseAST.prototype.parseCallChain = function () {\n        var result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter(chars.$PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter(chars.$LBRACKET)) {\n                this.rbracketsExpected++;\n                var key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter(chars.$RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter(chars.$LPAREN)) {\n                this.rparensExpected++;\n                var args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter(chars.$RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    _ParseAST.prototype.parsePrimary = function () {\n        var start = this.inputIndex;\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            var result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter(chars.$RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter(chars.$LBRACKET)) {\n            this.rbracketsExpected++;\n            var elements = this.parseExpressionList(chars.$RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter(chars.$RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter(chars.$LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var keys = [];\n        var values = [];\n        var start = this.inputIndex;\n        this.expectCharacter(chars.$LBRACE);\n        if (!this.optionalCharacter(chars.$RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var quoted = this.next.isString();\n                var key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter(chars.$COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter(chars.$RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var start = receiver.span.start;\n        var id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            var args = this.parseCallArguments();\n            this.expectCharacter(chars.$RPAREN);\n            this.rparensExpected--;\n            var span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter(chars.$RPAREN))\n            return [];\n        var positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter(chars.$COMMA));\n        return positionals;\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` in between.\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var result = '';\n        var operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    // Parses the AST for `<some-tag *tplKey=AST>`\n    _ParseAST.prototype.parseTemplateBindings = function (tplKey) {\n        var firstBinding = true;\n        var bindings = [];\n        var warnings = [];\n        do {\n            var start = this.inputIndex;\n            var rawKey = void 0;\n            var key = void 0;\n            var isVar = false;\n            if (firstBinding) {\n                rawKey = key = tplKey;\n                firstBinding = false;\n            }\n            else {\n                isVar = this.peekKeywordLet();\n                if (isVar)\n                    this.advance();\n                rawKey = this.expectTemplateBindingKey();\n                key = isVar ? rawKey : tplKey + rawKey[0].toUpperCase() + rawKey.substring(1);\n                this.optionalCharacter(chars.$COLON);\n            }\n            var name_2 = null;\n            var expression = null;\n            if (isVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                isVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var start_1 = this.inputIndex;\n                var ast = this.parsePipe();\n                var source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, isVar, name_2, expression));\n            if (this.peekKeywordAs() && !isVar) {\n                var letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, null));\n            }\n            if (!this.optionalCharacter(chars.$SEMICOLON)) {\n                this.optionalCharacter(chars.$COMMA);\n            }\n        } while (this.index < this.tokens.length);\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n    // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n    // '}' and ']' as conditional recovery points if one of calling productions is expecting\n    // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n    // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n    // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n    // must be conditional as they must be skipped if none of the calling productions are not\n    // expecting the closing token else we will never make progress in the case of an\n    // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n    // parseChain() is always the root production and it expects a ';'.\n    // If a production expects one of these token it increments the corresponding nesting count,\n    // and then decrements it just prior to checking if the token is in the input.\n    _ParseAST.prototype.skip = function () {\n        var n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter(chars.$SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter(chars.$RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter(chars.$RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter(chars.$RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nexport { _ParseAST };\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    SimpleExpressionChecker.check = function (ast) {\n        var s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n//# sourceMappingURL=parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from './chars';\nimport { identifierModuleUrl, identifierName } from './compile_metadata';\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    ParseLocation.prototype.moveBy = function (delta) {\n        var source = this.file.content;\n        var len = source.length;\n        var offset = this.offset;\n        var line = this.line;\n        var col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var ch = source.charCodeAt(offset);\n            if (ch == chars.$LF) {\n                line--;\n                var priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode(chars.$LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == chars.$LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var content = this.file.content;\n        var startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var endOffset = startOffset;\n            var ctxChars = 0;\n            var ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nexport { ParseLocation };\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nexport { ParseSourceFile };\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nexport { ParseSourceSpan };\nexport var ParseErrorLevel;\n(function (ParseErrorLevel) {\n    ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n    ParseErrorLevel[ParseErrorLevel[\"ERROR\"] = 1] = \"ERROR\";\n})(ParseErrorLevel || (ParseErrorLevel = {}));\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    ParseError.prototype.contextualMessage = function () {\n        var ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    ParseError.prototype.toString = function () {\n        var details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\nexport { ParseError };\nexport function typeSourceSpan(kind, type) {\n    var moduleUrl = identifierModuleUrl(type);\n    var sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n//# sourceMappingURL=parse_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as chars from '../chars';\nimport { ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan } from '../parse_util';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { NAMED_ENTITIES, TagContentType } from './tags';\nexport var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n    TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n    TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n    TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n    TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n    TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n    TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n    TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n    TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n    TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n    TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n    TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n    TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n    TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n    TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n    TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n    TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n    TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n    TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n    TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n})(TokenType || (TokenType = {}));\nvar Token = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nexport { Token };\nvar TokenError = /** @class */ (function (_super) {\n    tslib_1.__extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nexport { TokenError };\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\nexport { TokenizeResult };\nexport function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\n// See http://www.w3.org/TR/html51/syntax.html#writing\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        // Note: this is always lowercase!\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== chars.$EOF) {\n            var start = this._getLocation();\n            try {\n                if (this._attemptCharCode(chars.$LT)) {\n                    if (this._attemptCharCode(chars.$BANG)) {\n                        if (this._attemptCharCode(chars.$LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode(chars.$MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode(chars.$SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * @returns whether an ICU token has been created\n     * @internal\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === chars.$RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var token = new Token(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return token;\n    };\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return new _ControlFlowError(error);\n    };\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg(chars.$EOF), this._getSpan());\n        }\n        if (this._peek === chars.$LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== chars.$LF && this._peek !== chars.$CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? chars.$EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? chars.$EOF : this._input.charCodeAt(this._index + 1);\n    };\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var initialPosition = this._savePosition();\n        for (var i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === chars.$AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    _Tokenizer.prototype._decodeEntity = function () {\n        var start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode(chars.$HASH)) {\n            var isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n            var numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var tagCloseStart;\n        var textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n        var parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType.COMMENT_START, start);\n        this._requireCharCode(chars.$MINUS);\n        this._endToken([]);\n        var textToken = this._consumeRawText(false, chars.$MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var textToken = this._consumeRawText(false, chars.$RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType.DOC_TYPE, start);\n        this._attemptUntilChar(chars.$GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var nameOrPrefixStart = this._index;\n        var prefix = null;\n        while (this._peek !== chars.$COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var nameStart;\n        if (this._peek === chars.$COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var savedPos = this._savePosition();\n        var tagName;\n        var lowercaseTagName;\n        try {\n            if (!chars.isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== chars.$SLASH && this._peek !== chars.$GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode(chars.$EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var textToken = this._consumeRawText(decodeEntities, chars.$LT, function () {\n            if (!_this._attemptCharCode(chars.$SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode(chars.$GT);\n        });\n        this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([null, lowercaseTagName]);\n    };\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType.TAG_OPEN_START, start);\n        var parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType.ATTR_NAME);\n        var prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType.ATTR_VALUE);\n        var value;\n        if (this._peek === chars.$SQ || this._peek === chars.$DQ) {\n            var quoteChar = this._peek;\n            this._advance();\n            var parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var tokenType = this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode(chars.$GT);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode(chars.$GT);\n        this._endToken(prefixAndName);\n    };\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        var condition = this._readUntil(chars.$COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        var type = this._readUntil(chars.$COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n        var value = this._readUntil(chars.$LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n    };\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    _Tokenizer.prototype._consumeText = function () {\n        var start = this._getLocation();\n        this._beginToken(TokenType.TEXT, start);\n        var parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === chars.$LT || this._peek === chars.$EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === chars.$RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    _Tokenizer.prototype._readUntil = function (char) {\n        var start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_CASE_EXP_START;\n    };\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\nfunction isNotWhitespace(code) {\n    return !chars.isWhitespace(code) || code === chars.$EOF;\n}\nfunction isNameEnd(code) {\n    return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n        code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\nfunction isPrefixEnd(code) {\n    return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n        (code < chars.$0 || code > chars.$9);\n}\nfunction isDigitEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\nfunction isNamedEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == chars.$LBRACE && !isInterpolationStart;\n}\nfunction isExpansionCaseStart(peek) {\n    return peek === chars.$EQ || chars.isAsciiLetter(peek) || chars.isDigit(peek);\n}\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\nfunction toUpperCaseCharCode(code) {\n    return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\nfunction mergeTextTokens(srcTokens) {\n    var dstTokens = [];\n    var lastDstToken = undefined;\n    for (var i = 0; i < srcTokens.length; i++) {\n        var token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n//# sourceMappingURL=lexer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ParseError, ParseSourceSpan } from '../parse_util';\nimport * as html from './ast';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport * as lex from './lexer';\nimport { getNsPrefix, isNgContainer, mergeNsAndName } from './tags';\nvar TreeError = /** @class */ (function (_super) {\n    tslib_1.__extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nexport { TreeError };\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nexport { ParseTreeResult };\nvar Parser = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var tokensAndErrors = lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nexport { Parser };\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== lex.TokenType.EOF) {\n            if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n                this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    _TreeBuilder.prototype._advance = function () {\n        var prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(lex.TokenType.CDATA_END);\n    };\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var text = this._advanceIf(lex.TokenType.RAW_TEXT);\n        this._advanceIf(lex.TokenType.COMMENT_END);\n        var value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new html.Comment(value, token.sourceSpan));\n    };\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var switchValue = this._advance();\n        var type = this._advance();\n        var cases = [];\n        // read =\n        while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n            var expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new html.Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var value = this._advance();\n        // read {\n        if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var start = this._advance();\n        var exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var end = this._advance();\n        exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(parsedExp.errors);\n            return null;\n        }\n        var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new html.ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var exp = [];\n        var expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n                this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new html.Text(text, token.sourceSpan));\n        }\n    };\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        var el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var prefix = startTagToken.parts[0];\n        var name = startTagToken.parts[1];\n        var attrs = [];\n        while (this._peek.type === lex.TokenType.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var end = this._peek.sourceSpan.start;\n        var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var el = new html.Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    _TreeBuilder.prototype._pushElement = function (el) {\n        var parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var newParent = new html.Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var end = attrName.sourceSpan.end;\n        var value = '';\n        var valueSpan = undefined;\n        if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n            var valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new html.Attribute(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var container = null;\n        for (var i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * @internal\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n//# sourceMappingURL=parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { utf8Encode } from '../util';\nexport function digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\nexport function decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var visitor = new _SerializerIgnoreIcuExpVisitor();\n    var parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\nexport function serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nexport function sha1(str) {\n    var _a, _b;\n    var utf8 = utf8Encode(str);\n    var words32 = stringToWords32(utf8, Endian.Big);\n    var len = utf8.length * 8;\n    var w = new Array(80);\n    var _c = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _c[0], b = _c[1], c = _c[2], d = _c[3], e = _c[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var i = 0; i < words32.length; i += 16) {\n        var _d = [a, b, c, d, e], h0 = _d[0], h1 = _d[1], h2 = _d[2], h3 = _d[3], h4 = _d[4];\n        for (var j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _e = fk(j, b, c, d), f = _e[0], k = _e[1];\n            var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _a = [d, c, rol32(b, 30), a, temp], e = _a[0], d = _a[1], c = _a[2], b = _a[3], a = _a[4];\n        }\n        _b = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _b[0], b = _b[1], c = _b[2], d = _b[3], e = _b[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nexport function fingerprint(str) {\n    var utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\nexport function computeMsgId(msg, meaning) {\n    var _a;\n    var _b = fingerprint(msg), hi = _b[0], lo = _b[1];\n    if (meaning) {\n        var _c = fingerprint(meaning), him = _c[0], lom = _c[1];\n        _a = add64(rol64([hi, lo], 1), [him, lom]), hi = _a[0], lo = _a[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\nfunction hash32(str, c) {\n    var _a;\n    var _b = [0x9e3779b9, 0x9e3779b9], a = _b[0], b = _b[1];\n    var i;\n    var len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _a = mix([a, b, c]), a = _a[0], b = _a[1], c = _a[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n}\n// clang-format off\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// clang-format on\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    var low = (a & 0xffff) + (b & 0xffff);\n    var high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\nfunction sub32(a, b) {\n    var low = (a & 0xffff) - (b & 0xffff);\n    var high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n// Rotate a 64b number left `count` position\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var h = (hi << count) | (lo >>> (32 - count));\n    var l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\nfunction stringToWords32(str, endian) {\n    var words32 = Array((str.length + 3) >>> 2);\n    for (var i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\nfunction wordAt(str, index, endian) {\n    var word = 0;\n    if (endian === Endian.Big) {\n        for (var i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\nfunction word32ToByteString(word) {\n    var str = '';\n    for (var i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\nfunction byteStringToHexString(str) {\n    var hex = '';\n    for (var i = 0; i < str.length; i++) {\n        var b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)\nfunction byteStringToDecString(str) {\n    var decimal = '';\n    var toThePower = '1';\n    for (var i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n// x and y decimal, lowest significant digit first\nfunction addBigInt(x, y) {\n    var sum = '';\n    var len = Math.max(x.length, y.length);\n    for (var i = 0, carry = 0; i < len || carry; i++) {\n        var tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\nfunction numberTimesBigInt(num, b) {\n    var product = '';\n    var bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n//# sourceMappingURL=digest.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nexport { Message };\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nexport { Text };\n// TODO(vicb): do we really need this node (vs an array) ?\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nexport { Container };\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nexport { Icu };\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nexport { TagPlaceholder };\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nexport { Placeholder };\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nexport { IcuPlaceholder };\n// Clone the AST\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nexport { CloneVisitor };\n// Visit all the nodes recursively\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    return RecurseVisitor;\n}());\nexport { RecurseVisitor };\n//# sourceMappingURL=i18n_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        // Count the occurrence of the base name top generate a unique name\n        this._placeHolderNameCounts = {};\n        // Maps signature to placeholder names\n        this._signatureToName = {};\n    }\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var upperTag = tag.toUpperCase();\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var upperTag = tag.toUpperCase();\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var upperName = name.toUpperCase();\n        var signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    // Generate a hash for a tag - does not take attribute order into account\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var start = \"<\" + tag;\n        var strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\nexport { PlaceholderRegistry };\n//# sourceMappingURL=placeholder.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Lexer as ExpressionLexer } from '../expression_parser/lexer';\nimport { Parser as ExpressionParser } from '../expression_parser/parser';\nimport * as html from '../ml_parser/ast';\nimport { getHtmlTagDefinition } from '../ml_parser/html_tags';\nimport * as i18n from './i18n_ast';\nimport { PlaceholderRegistry } from './serializers/placeholder';\nvar _expParser = new ExpressionParser(new ExpressionLexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n */\nexport function createI18nMessageFactory(interpolationConfig) {\n    var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof html.Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var i18nodes = html.visitAll(this, nodes, {});\n        return new i18n.Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var children = html.visitAll(this, el.children);\n        var attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n        var closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new i18n.TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var i18nIcuCases = {};\n        var i18nIcu = new i18n.Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new i18n.Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new i18n.IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new i18n.Text(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var nodes = [];\n        var container = new i18n.Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var expression = splitInterpolation.expressions[i];\n            var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new i18n.Text(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new i18n.Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new i18n.Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n//# sourceMappingURL=i18n_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ParseError } from '../parse_util';\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    tslib_1.__extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\nexport { I18nError };\n//# sourceMappingURL=parse_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport * as i18n from './i18n_ast';\nimport { createI18nMessageFactory } from './i18n_parser';\nimport { I18nError } from './parse_util';\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n */\nexport function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\nexport function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nexport { ExtractionResult };\nvar _VisitorMode;\n(function (_VisitorMode) {\n    _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n    _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n})(_VisitorMode || (_VisitorMode = {}));\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * @internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var wrapper = new html.Element('wrapper', [], nodes, undefined, undefined, undefined);\n        var translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var expression = html.visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new html.ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var cases = html.visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new html.Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && console && console.warn) {\n                        i18nCommentsWarned = true;\n                        var details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc =\n                        comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                        // merge attributes in sections\n                        var nodes = this._translateMessage(comment, message);\n                        return html.visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var wasInI18nNode = this._inI18nNode;\n        var wasInImplicitNode = this._inImplicitNode;\n        var childNodes = [];\n        var translatedChildNodes = undefined;\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var i18nAttr = _getI18nAttr(el);\n        var i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var message = this._addMessage(el.children, i18nMeta);\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                html.visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                html.visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var translatedAttrs = this._translateAttributes(el);\n            return new html.Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    // looks for translatable attributes\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var explicitAttrNameToValue = {};\n        var implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    // add a translatable message\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof html.Attribute && !ast[0].value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    // Translates the given message given the `TranslationBundle`\n    // This is used for translating elements / blocks - see `_translateAttributes` for attributes\n    // no-op when called in extraction mode (returns [])\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    // translate the attributes of an element and remove i18n specific attributes\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var attributes = el.attrs;\n        var i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var message = _this._createI18nMessage([attr], meaning, description, id);\n                var nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new html.Attribute(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof html.Text) {\n                        var value = nodes[0].value;\n                        translatedAttributes.push(new html.Attribute(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var startIndex = this._msgCountAtSectionStart;\n        var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof html.Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var i = this._messages.length - 1; i >= startIndex; i--) {\n                var ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof i18n.Text)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(node.sourceSpan, msg));\n    };\n    return _Visitor;\n}());\nfunction _isOpeningComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value.startsWith('i18n'));\n}\nfunction _isClosingComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value === '/i18n');\n}\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var idIndex = i18n.indexOf(ID_SEPARATOR);\n    var descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n//# sourceMappingURL=extractor_merger.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nexport { XmlTagDefinition };\nvar _TAG_DEFINITION = new XmlTagDefinition();\nexport function getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n//# sourceMappingURL=xml_tags.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Parser } from './parser';\nimport { getXmlTagDefinition } from './xml_tags';\nexport { ParseTreeResult, TreeError } from './parser';\nvar XmlParser = /** @class */ (function (_super) {\n    tslib_1.__extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser));\nexport { XmlParser };\n//# sourceMappingURL=xml_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as i18n from '../i18n_ast';\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\nexport { Serializer };\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    tslib_1.__extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    // XMB placeholders could only contains A-Z, 0-9 and _\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(i18n.RecurseVisitor));\nexport { SimplePlaceholderMapper };\n//# sourceMappingURL=serializer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar _Visitor = /** @class */ (function () {\n    function _Visitor() {\n    }\n    _Visitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        var strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    _Visitor.prototype.visitText = function (text) { return text.value; };\n    _Visitor.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    _Visitor.prototype._serializeAttributes = function (attrs) {\n        var strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    _Visitor.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor();\nexport function serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nexport { Declaration };\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nexport { Doctype };\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nexport { Tag };\nvar Text = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = escapeXml(unescapedValue);\n    }\n    Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nexport { Text };\nvar CR = /** @class */ (function (_super) {\n    tslib_1.__extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text));\nexport { CR };\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n// Escape `_ESCAPED_CHARS` characters in the given text with encoded entities\nexport function escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n//# sourceMappingURL=xml_helper.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { digest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\n// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\nvar Xliff = /** @class */ (function (_super) {\n    tslib_1.__extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xliff.prototype.write = function (messages, locale) {\n        var visitor = new _WriteVisitor();\n        var transUnits = [];\n        messages.forEach(function (message) {\n            var _a;\n            var contextTags = [];\n            message.sources.forEach(function (source) {\n                var contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new xml.Text(source.filePath)]), new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new xml.Text(\"\" + source.startLine)]), new xml.CR(8));\n                contextTags.push(new xml.CR(8), contextGroupTag);\n            });\n            var transUnit = new xml.Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'description' }, [new xml.Text(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'meaning' }, [new xml.Text(message.meaning)]));\n            }\n            transUnit.children.push(new xml.CR(6));\n            transUnits.push(new xml.CR(6), transUnit);\n        });\n        var body = new xml.Tag('body', {}, transUnits.concat([new xml.CR(4)]));\n        var file = new xml.Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new xml.CR(4), body, new xml.CR(2)]);\n        var xliff = new xml.Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    };\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nexport { Xliff };\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new xml.Text(text.value)]; };\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new xml.Text(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new xml.Text(c + \" {\")].concat(icu.cases[c].visit(_this), [new xml.Text(\"} \")]));\n        });\n        nodes.push(new xml.Text(\"}\"));\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\n// TODO(vicb): add error management (structure)\n// Extract messages as xml nodes from the xliff file\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = null;\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var innerTextStart = element.startSourceSpan.end.offset;\n                var innerTextEnd = element.endSourceSpan.start.offset;\n                var content = element.startSourceSpan.start.file.content;\n                var innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                ml.visitAll(this, element.children, null);\n        }\n    };\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    XliffParser.prototype.visitText = function (text, context) { };\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XliffParser;\n}());\n// Convert ml nodes (xliff syntax) to i18n nodes\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], ml.visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new i18n.Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], ml.visitAll(this, el.children));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n//# sourceMappingURL=xliff.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { decimalDigest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\nvar _VERSION = '2.0';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'unit';\n// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\nvar Xliff2 = /** @class */ (function (_super) {\n    tslib_1.__extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xliff2.prototype.write = function (messages, locale) {\n        var visitor = new _WriteVisitor();\n        var units = [];\n        messages.forEach(function (message) {\n            var unit = new xml.Tag(_UNIT_TAG, { id: message.id });\n            var notes = new xml.Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'description' }, [new xml.Text(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'meaning' }, [new xml.Text(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'location' }, [\n                    new xml.Text(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new xml.CR(6));\n            unit.children.push(new xml.CR(6), notes);\n            var segment = new xml.Tag('segment');\n            segment.children.push(new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new xml.CR(6));\n            unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n            units.push(new xml.CR(4), unit);\n        });\n        var file = new xml.Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new xml.CR(2)]));\n        var xliff = new xml.Tag(_XLIFF_TAG, { version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    };\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nexport { Xliff2 };\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new xml.Text(text.value)]; };\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new xml.Text(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new xml.Text(c + \" {\")].concat(icu.cases[c].visit(_this), [new xml.Text(\"} \")]));\n        });\n        nodes.push(new xml.Text(\"}\"));\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new xml.Text(''));\n        }\n        return [tagPc];\n    };\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\n// Extract messages as xml nodes from the xliff file\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = null;\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var innerTextStart = element.startSourceSpan.end.offset;\n                var innerTextEnd = element.endSourceSpan.start.offset;\n                var content = element.startSourceSpan.start.file.content;\n                var innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                ml.visitAll(this, element.children, null);\n        }\n    };\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\n// Convert ml nodes (xliff syntax) to i18n nodes\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], ml.visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new i18n.Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG:\n                var nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var startId = startAttr.value;\n                    var endId = endAttr.value;\n                    var nodes = [];\n                    return nodes.concat.apply(nodes, [new i18n.Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new i18n.Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG:\n                return [].concat.apply([], ml.visitAll(this, el.children));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], ml.visitAll(this, icuCase.expression)),\n        };\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n//# sourceMappingURL=xliff2.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { decimalDigest } from '../digest';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport * as xml from './xml_helper';\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG = 'ph';\nvar _EXAMPLE_TAG = 'ex';\nvar _SOURCE_TAG = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    tslib_1.__extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xmb.prototype.write = function (messages, locale) {\n        var exampleVisitor = new ExampleVisitor();\n        var visitor = new _Visitor();\n        var rootNode = new xml.Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new xml.Tag(_SOURCE_TAG, {}, [\n                    new xml.Text(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new xml.CR(2), new xml.Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new xml.CR());\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new xml.CR(),\n            new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new xml.CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new xml.CR(),\n        ]);\n    };\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    Xmb.prototype.digest = function (message) { return digest(message); };\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nexport { Xmb };\nvar _Visitor = /** @class */ (function () {\n    function _Visitor() {\n    }\n    _Visitor.prototype.visitText = function (text, context) { return [new xml.Text(text.value)]; };\n    _Visitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    _Visitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new xml.Text(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new xml.Text(c + \" {\")].concat(icu.cases[c].visit(_this), [new xml.Text(\"} \")]));\n        });\n        nodes.push(new xml.Text(\"}\"));\n        return nodes;\n    };\n    _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var startTagAsText = new xml.Text(\"<\" + ph.tag + \">\");\n        var startEx = new xml.Tag(_EXAMPLE_TAG, {}, [startTagAsText]);\n        // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n        var startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.startName }, [startEx, startTagAsText]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var closeTagAsText = new xml.Text(\"</\" + ph.tag + \">\");\n        var closeEx = new xml.Tag(_EXAMPLE_TAG, {}, [closeTagAsText]);\n        // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n        var closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.closeName }, [closeEx, closeTagAsText]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    _Visitor.prototype.visitPlaceholder = function (ph, context) {\n        var interpolationAsText = new xml.Text(\"{{\" + ph.value + \"}}\");\n        // Example tag needs to be not-empty for TC.\n        var exTag = new xml.Tag(_EXAMPLE_TAG, {}, [interpolationAsText]);\n        return [\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, interpolationAsText])\n        ];\n    };\n    _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var icuExpression = ph.value.expression;\n        var icuType = ph.value.type;\n        var icuCases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var icuAsText = new xml.Text(\"{\" + icuExpression + \", \" + icuType + \", \" + icuCases + \"}\");\n        var exTag = new xml.Tag(_EXAMPLE_TAG, {}, [icuAsText]);\n        return [\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, icuAsText])\n        ];\n    };\n    _Visitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\nexport function digest(message) {\n    return decimalDigest(message);\n}\n// TC requires at least one non-empty example on placeholders\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG) {\n            if (!tag.children || tag.children.length == 0) {\n                var exText = new xml.Text(tag.attrs['name'] || '...');\n                tag.children = [new xml.Tag(_EXAMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    ExampleVisitor.prototype.visitText = function (text) { };\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n// XMB/XTB placeholders can only contain A-Z, 0-9 and _\nexport function toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n//# sourceMappingURL=xmb.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport { digest, toPublicName } from './xmb';\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    tslib_1.__extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xtb.prototype.digest = function (message) { return digest(message); };\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\nexport { Xtb };\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\n// Extract messages as xml nodes from the xtb file\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var innerTextStart = element.startSourceSpan.end.offset;\n                        var innerTextEnd = element.endSourceSpan.start.offset;\n                        var content = element.startSourceSpan.start.file.content;\n                        var innerText = content.slice(innerTextStart, innerTextEnd);\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    XtbParser.prototype.visitText = function (text, context) { };\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XtbParser;\n}());\n// Convert ml nodes (xtb syntax) to i18n nodes\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            ml.visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new i18n.Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n//# sourceMappingURL=xtb.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { getHtmlTagDefinition } from './html_tags';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { Parser } from './parser';\nexport { ParseTreeResult, TreeError } from './parser';\nvar HtmlParser = /** @class */ (function (_super) {\n    tslib_1.__extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser));\nexport { HtmlParser };\n//# sourceMappingURL=html_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '../core';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { I18nError } from './parse_util';\nimport { escapeXml } from './serializers/xml_helper';\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var digestFn = function (m) { return serializer.digest(m); };\n        var mapperFactory = function (m) { return serializer.createNameMapper(m); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nexport { TranslationBundle };\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var text = this._convertToText(srcMsg);\n        // text to html\n        var url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) {\n        // `convert()` uses an `HtmlParser` to return `html.Node`s\n        // we should then make sure that any special characters are escaped\n        return escapeXml(text.value);\n    };\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var tag = \"\" + ph.tag;\n        var attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var id = this._digest(srcMsg);\n        var mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? mapper.toInternalName(name) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var context = this._contextStack.pop();\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n//# sourceMappingURL=translation_bundle.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '../core';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport { digest } from './digest';\nimport { mergeTranslations } from './extractor_merger';\nimport { Xliff } from './serializers/xliff';\nimport { Xliff2 } from './serializers/xliff2';\nimport { Xmb } from './serializers/xmb';\nimport { Xtb } from './serializers/xtb';\nimport { TranslationBundle } from './translation_bundle';\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\nexport { I18NHtmlParser };\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n//# sourceMappingURL=i18n_html_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\n//// Types\nexport var TypeModifier;\n(function (TypeModifier) {\n    TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n})(TypeModifier || (TypeModifier = {}));\nvar Type = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Type;\n}());\nexport { Type };\nexport var BuiltinTypeName;\n(function (BuiltinTypeName) {\n    BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n    BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n    BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n    BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n    BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n    BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n    BuiltinTypeName[BuiltinTypeName[\"Inferred\"] = 6] = \"Inferred\";\n    BuiltinTypeName[BuiltinTypeName[\"None\"] = 7] = \"None\";\n})(BuiltinTypeName || (BuiltinTypeName = {}));\nvar BuiltinType = /** @class */ (function (_super) {\n    tslib_1.__extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type));\nexport { BuiltinType };\nvar ExpressionType = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers, typeParams) {\n        if (modifiers === void 0) { modifiers = null; }\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type));\nexport { ExpressionType };\nvar ArrayType = /** @class */ (function (_super) {\n    tslib_1.__extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type));\nexport { ArrayType };\nvar MapType = /** @class */ (function (_super) {\n    tslib_1.__extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type));\nexport { MapType };\nexport var DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nexport var INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nexport var BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nexport var INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nexport var NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nexport var STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nexport var FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nexport var NONE_TYPE = new BuiltinType(BuiltinTypeName.None);\n///// Expressions\nexport var BinaryOperator;\n(function (BinaryOperator) {\n    BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n    BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n    BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n    BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n    BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n    BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n    BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n    BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n    BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n    BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n    BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n    BinaryOperator[BinaryOperator[\"BitwiseAnd\"] = 11] = \"BitwiseAnd\";\n    BinaryOperator[BinaryOperator[\"Lower\"] = 12] = \"Lower\";\n    BinaryOperator[BinaryOperator[\"LowerEquals\"] = 13] = \"LowerEquals\";\n    BinaryOperator[BinaryOperator[\"Bigger\"] = 14] = \"Bigger\";\n    BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 15] = \"BiggerEquals\";\n})(BinaryOperator || (BinaryOperator = {}));\nexport function nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\nexport function areAllEquivalent(base, other) {\n    var len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.bitwiseAnd = function (rhs, sourceSpan, parens) {\n        if (parens === void 0) { parens = true; }\n        return new BinaryOperatorExpr(BinaryOperator.BitwiseAnd, this, rhs, null, sourceSpan, parens);\n    };\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nexport { Expression };\nexport var BuiltinVar;\n(function (BuiltinVar) {\n    BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n    BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n    BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n    BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n})(BuiltinVar || (BuiltinVar = {}));\nvar ReadVarExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    ReadVarExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    ReadVarExpr.prototype.isConstant = function () { return false; };\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nexport { ReadVarExpr };\nvar TypeofExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(TypeofExpr, _super);\n    function TypeofExpr(expr, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    TypeofExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitTypeofExpr(this, context);\n    };\n    TypeofExpr.prototype.isEquivalent = function (e) {\n        return e instanceof TypeofExpr && e.expr.isEquivalent(this.expr);\n    };\n    TypeofExpr.prototype.isConstant = function () { return this.expr.isConstant(); };\n    return TypeofExpr;\n}(Expression));\nexport { TypeofExpr };\nvar WrappedNodeExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WrappedNodeExpr, _super);\n    function WrappedNodeExpr(node, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.node = node;\n        return _this;\n    }\n    WrappedNodeExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WrappedNodeExpr && this.node === e.node;\n    };\n    WrappedNodeExpr.prototype.isConstant = function () { return false; };\n    WrappedNodeExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWrappedNodeExpr(this, context);\n    };\n    return WrappedNodeExpr;\n}(Expression));\nexport { WrappedNodeExpr };\nvar WriteVarExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    WriteVarExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    WriteVarExpr.prototype.isConstant = function () { return false; };\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    WriteVarExpr.prototype.toConstDecl = function () { return this.toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]); };\n    return WriteVarExpr;\n}(Expression));\nexport { WriteVarExpr };\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    WriteKeyExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    WriteKeyExpr.prototype.isConstant = function () { return false; };\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nexport { WriteKeyExpr };\nvar WritePropExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    WritePropExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    WritePropExpr.prototype.isConstant = function () { return false; };\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nexport { WritePropExpr };\nexport var BuiltinMethod;\n(function (BuiltinMethod) {\n    BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n    BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n    BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n})(BuiltinMethod || (BuiltinMethod = {}));\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    InvokeMethodExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    InvokeMethodExpr.prototype.isConstant = function () { return false; };\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nexport { InvokeMethodExpr };\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    InvokeFunctionExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    InvokeFunctionExpr.prototype.isConstant = function () { return false; };\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nexport { InvokeFunctionExpr };\nvar InstantiateExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    InstantiateExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    InstantiateExpr.prototype.isConstant = function () { return false; };\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nexport { InstantiateExpr };\nvar LiteralExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    LiteralExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    LiteralExpr.prototype.isConstant = function () { return true; };\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nexport { LiteralExpr };\nvar ExternalExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    ExternalExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    ExternalExpr.prototype.isConstant = function () { return false; };\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nexport { ExternalExpr };\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nexport { ExternalReference };\nvar ConditionalExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    ConditionalExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    ConditionalExpr.prototype.isConstant = function () { return false; };\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nexport { ConditionalExpr };\nvar NotExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    NotExpr.prototype.isEquivalent = function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    NotExpr.prototype.isConstant = function () { return false; };\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nexport { NotExpr };\nvar AssertNotNull = /** @class */ (function (_super) {\n    tslib_1.__extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    AssertNotNull.prototype.isEquivalent = function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    AssertNotNull.prototype.isConstant = function () { return false; };\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nexport { AssertNotNull };\nvar CastExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    CastExpr.prototype.isEquivalent = function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    CastExpr.prototype.isConstant = function () { return false; };\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nexport { CastExpr };\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    FnParam.prototype.isEquivalent = function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nexport { FnParam };\nvar FunctionExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    FunctionExpr.prototype.isEquivalent = function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    FunctionExpr.prototype.isConstant = function () { return false; };\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nexport { FunctionExpr };\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan, parens) {\n        if (parens === void 0) { parens = true; }\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.parens = parens;\n        _this.lhs = lhs;\n        return _this;\n    }\n    BinaryOperatorExpr.prototype.isEquivalent = function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    BinaryOperatorExpr.prototype.isConstant = function () { return false; };\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nexport { BinaryOperatorExpr };\nvar ReadPropExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    ReadPropExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    ReadPropExpr.prototype.isConstant = function () { return false; };\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nexport { ReadPropExpr };\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    ReadKeyExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    ReadKeyExpr.prototype.isConstant = function () { return false; };\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nexport { ReadKeyExpr };\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    LiteralArrayExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.isConstant(); }); };\n    LiteralArrayExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nexport { LiteralArrayExpr };\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    LiteralMapEntry.prototype.isEquivalent = function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nexport { LiteralMapEntry };\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    LiteralMapExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    LiteralMapExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.value.isConstant(); }); };\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nexport { LiteralMapExpr };\nvar CommaExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    CommaExpr.prototype.isEquivalent = function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    CommaExpr.prototype.isConstant = function () { return false; };\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nexport { CommaExpr };\nexport var THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nexport var SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nexport var CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nexport var CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nexport var NULL_EXPR = new LiteralExpr(null, null, null);\nexport var TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n//// Statements\nexport var StmtModifier;\n(function (StmtModifier) {\n    StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n    StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n    StmtModifier[StmtModifier[\"Exported\"] = 2] = \"Exported\";\n    StmtModifier[StmtModifier[\"Static\"] = 3] = \"Static\";\n})(StmtModifier || (StmtModifier = {}));\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Statement;\n}());\nexport { Statement };\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || (value && value.type) || null;\n        return _this;\n    }\n    DeclareVarStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            (this.value ? !!stmt.value && this.value.isEquivalent(stmt.value) : !stmt.value);\n    };\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nexport { DeclareVarStmt };\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    DeclareFunctionStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nexport { DeclareFunctionStmt };\nvar ExpressionStatement = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    ExpressionStatement.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nexport { ExpressionStatement };\nvar ReturnStatement = /** @class */ (function (_super) {\n    tslib_1.__extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    ReturnStatement.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nexport { ReturnStatement };\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nexport { AbstractClassPart };\nvar ClassField = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    ClassField.prototype.isEquivalent = function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nexport { ClassField };\nvar ClassMethod = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    ClassMethod.prototype.isEquivalent = function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nexport { ClassMethod };\nvar ClassGetter = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    ClassGetter.prototype.isEquivalent = function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nexport { ClassGetter };\nvar ClassStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    ClassStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nexport { ClassStmt };\nvar IfStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    IfStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nexport { IfStmt };\nvar CommentStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(CommentStmt, _super);\n    function CommentStmt(comment, multiline, sourceSpan) {\n        if (multiline === void 0) { multiline = false; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        _this.multiline = multiline;\n        return _this;\n    }\n    CommentStmt.prototype.isEquivalent = function (stmt) { return stmt instanceof CommentStmt; };\n    CommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nexport { CommentStmt };\nvar JSDocCommentStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(JSDocCommentStmt, _super);\n    function JSDocCommentStmt(tags, sourceSpan) {\n        if (tags === void 0) { tags = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.tags = tags;\n        return _this;\n    }\n    JSDocCommentStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof JSDocCommentStmt && this.toString() === stmt.toString();\n    };\n    JSDocCommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitJSDocCommentStmt(this, context);\n    };\n    JSDocCommentStmt.prototype.toString = function () { return serializeTags(this.tags); };\n    return JSDocCommentStmt;\n}(Statement));\nexport { JSDocCommentStmt };\nvar TryCatchStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    TryCatchStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nexport { TryCatchStmt };\nvar ThrowStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    ThrowStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nexport { ThrowStmt };\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    AstTransformer.prototype.transformExpr = function (expr, context) { return expr; };\n    AstTransformer.prototype.transformStmt = function (stmt, context) { return stmt; };\n    AstTransformer.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    AstTransformer.prototype.visitWrappedNodeExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    AstTransformer.prototype.visitTypeofExpr = function (expr, context) {\n        return this.transformExpr(new TypeofExpr(expr.expr.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    AstTransformer.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    AstTransformer.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    AstTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n        var value = stmt.value && stmt.value.visitExpression(this, context);\n        return this.transformStmt(new DeclareVarStmt(stmt.name, value, stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var parent = stmt.parent.visitExpression(this, context);\n        var getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    AstTransformer.prototype.visitJSDocCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    AstTransformer.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nexport { AstTransformer };\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    RecursiveAstVisitor.prototype.visitType = function (ast, context) { return ast; };\n    RecursiveAstVisitor.prototype.visitExpression = function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    RecursiveAstVisitor.prototype.visitBuiltinType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitExpressionType = function (type, context) {\n        var _this = this;\n        type.value.visitExpression(this, context);\n        if (type.typeParams !== null) {\n            type.typeParams.forEach(function (param) { return _this.visitType(param, context); });\n        }\n        return this.visitType(type, context);\n    };\n    RecursiveAstVisitor.prototype.visitArrayType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitMapType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitWrappedNodeExpr = function (ast, context) { return ast; };\n    RecursiveAstVisitor.prototype.visitTypeofExpr = function (ast, context) { return this.visitExpression(ast, context); };\n    RecursiveAstVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWritePropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralExpr = function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitExternalExpr = function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context);\n        ast.falseCase.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n        if (stmt.value) {\n            stmt.value.visitExpression(this, context);\n        }\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        stmt.parent.visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    RecursiveAstVisitor.prototype.visitJSDocCommentStmt = function (stmt, context) { return stmt; };\n    RecursiveAstVisitor.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\nexport { RecursiveAstVisitor };\nexport function findReadVarNames(stmts) {\n    var visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor));\nexport function collectExternalReferences(stmts) {\n    var visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor));\nexport function applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\nexport function applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    tslib_1.__extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var clone = Object.create(obj.constructor.prototype);\n        for (var prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer));\nexport function variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\nexport function importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\nexport function importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\nexport function expressionType(expr, typeModifiers, typeParams) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExpressionType(expr, typeModifiers, typeParams);\n}\nexport function typeofExpr(expr) {\n    return new TypeofExpr(expr);\n}\nexport function literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\nexport function literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\nexport function not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\nexport function assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\nexport function fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\nexport function ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\nexport function literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\nexport function isNull(exp) {\n    return exp instanceof LiteralExpr && exp.value === null;\n}\n/*\n * Serializes a `Tag` into a string.\n * Returns a string like \" @foo {bar} baz\" (note the leading whitespace before `@foo`).\n */\nfunction tagToString(tag) {\n    var out = '';\n    if (tag.tagName) {\n        out += \" @\" + tag.tagName;\n    }\n    if (tag.text) {\n        if (tag.text.match(/\\/\\*|\\*\\//)) {\n            throw new Error('JSDoc text cannot contain \"/*\" and \"*/\"');\n        }\n        out += ' ' + tag.text.replace(/@/g, '\\\\@');\n    }\n    return out;\n}\nfunction serializeTags(tags) {\n    if (tags.length === 0)\n        return '';\n    var out = '*\\n';\n    for (var _i = 0, tags_1 = tags; _i < tags_1.length; _i++) {\n        var tag = tags_1[_i];\n        out += ' *';\n        // If the tagToString is multi-line, insert \" * \" prefixes on subsequent lines.\n        out += tagToString(tag).replace(/\\n/g, '\\n * ');\n        out += '\\n';\n    }\n    out += ' ';\n    return out;\n}\n//# sourceMappingURL=output_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.Renderer2 = { name: 'Renderer2', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.INJECTOR = { name: 'INJECTOR', moduleName: CORE };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\n    Identifiers.InjectableDef = { name: 'ɵInjectableDef', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\nexport { Identifiers };\nexport function createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\nexport function createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n//# sourceMappingURL=identifiers.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { visitValue } from '../util';\nimport * as o from './output_ast';\nexport var QUOTED_KEYS = '$quoted$';\nexport function convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return o.literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var entries = [];\n        var quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new o.LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new o.LiteralMapExpr(entries, type);\n    };\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return o.literal(value, type); };\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof o.Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n//# sourceMappingURL=value_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from './compile_metadata';\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { convertValueToOutputAst } from './output/value_util';\nfunction mapEntry(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nvar InjectableCompiler = /** @class */ (function () {\n    function InjectableCompiler(reflector, alwaysGenerateDef) {\n        this.reflector = reflector;\n        this.alwaysGenerateDef = alwaysGenerateDef;\n        this.tokenInjector = reflector.resolveExternalReference(Identifiers.Injector);\n    }\n    InjectableCompiler.prototype.depsArray = function (deps, ctx) {\n        var _this = this;\n        return deps.map(function (dep) {\n            var token = dep;\n            var args = [token];\n            var flags = 0 /* Default */;\n            if (Array.isArray(dep)) {\n                for (var i = 0; i < dep.length; i++) {\n                    var v = dep[i];\n                    if (v) {\n                        if (v.ngMetadataName === 'Optional') {\n                            flags |= 8 /* Optional */;\n                        }\n                        else if (v.ngMetadataName === 'SkipSelf') {\n                            flags |= 4 /* SkipSelf */;\n                        }\n                        else if (v.ngMetadataName === 'Self') {\n                            flags |= 2 /* Self */;\n                        }\n                        else if (v.ngMetadataName === 'Inject') {\n                            token = v.token;\n                        }\n                        else {\n                            token = v;\n                        }\n                    }\n                }\n            }\n            var tokenExpr;\n            if (typeof token === 'string') {\n                tokenExpr = o.literal(token);\n            }\n            else if (token === _this.tokenInjector) {\n                tokenExpr = o.importExpr(Identifiers.INJECTOR);\n            }\n            else {\n                tokenExpr = ctx.importExpr(token);\n            }\n            if (flags !== 0 /* Default */) {\n                args = [tokenExpr, o.literal(flags)];\n            }\n            else {\n                args = [tokenExpr];\n            }\n            return o.importExpr(Identifiers.inject).callFn(args);\n        });\n    };\n    InjectableCompiler.prototype.factoryFor = function (injectable, ctx) {\n        var retValue;\n        if (injectable.useExisting) {\n            retValue = o.importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n        }\n        else if (injectable.useFactory) {\n            var deps = injectable.deps || [];\n            if (deps.length > 0) {\n                retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n            }\n            else {\n                return ctx.importExpr(injectable.useFactory);\n            }\n        }\n        else if (injectable.useValue) {\n            retValue = convertValueToOutputAst(ctx, injectable.useValue);\n        }\n        else {\n            var clazz = injectable.useClass || injectable.symbol;\n            var depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n            retValue = new o.InstantiateExpr(ctx.importExpr(clazz), depArgs);\n        }\n        return o.fn([], [new o.ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n    };\n    InjectableCompiler.prototype.injectableDef = function (injectable, ctx) {\n        var providedIn = o.NULL_EXPR;\n        if (injectable.providedIn !== undefined) {\n            if (injectable.providedIn === null) {\n                providedIn = o.NULL_EXPR;\n            }\n            else if (typeof injectable.providedIn === 'string') {\n                providedIn = o.literal(injectable.providedIn);\n            }\n            else {\n                providedIn = ctx.importExpr(injectable.providedIn);\n            }\n        }\n        var def = [\n            mapEntry('factory', this.factoryFor(injectable, ctx)),\n            mapEntry('token', ctx.importExpr(injectable.type.reference)),\n            mapEntry('providedIn', providedIn),\n        ];\n        return o.importExpr(Identifiers.defineInjectable).callFn([o.literalMap(def)]);\n    };\n    InjectableCompiler.prototype.compile = function (injectable, ctx) {\n        if (this.alwaysGenerateDef || injectable.providedIn !== undefined) {\n            var className = identifierName(injectable.type);\n            var clazz = new o.ClassStmt(className, null, [\n                new o.ClassField('ngInjectableDef', o.INFERRED_TYPE, [o.StmtModifier.Static], this.injectableDef(injectable, ctx)),\n            ], [], new o.ClassMethod(null, [], []), []);\n            ctx.statements.push(clazz);\n        }\n    };\n    return InjectableCompiler;\n}());\nexport { InjectableCompiler };\n//# sourceMappingURL=injectable_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\nexport function ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\nexport function stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\nexport function isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\nexport function splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\nexport function normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\nexport function summaryFileName(fileName) {\n    var fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\nexport function summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\nexport function stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\nexport function summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\nexport function stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\nexport function isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\nexport function createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var LifecycleHooks;\n(function (LifecycleHooks) {\n    LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n    LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n    LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n    LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n})(LifecycleHooks || (LifecycleHooks = {}));\nexport var LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\nexport function hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\nexport function getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = hook;\n            throw new Error(\"unexpected \" + unexpected);\n    }\n}\n//# sourceMappingURL=lifecycle_reflector.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { StaticSymbol } from './aot/static_symbol';\nimport { ngfactoryFilePath } from './aot/util';\nimport { assertArrayOfStrings, assertInterpolationSymbols } from './assertions';\nimport * as cpl from './compile_metadata';\nimport { ChangeDetectionStrategy, Type, ViewEncapsulation, createAttribute, createComponent, createHost, createInject, createInjectable, createInjectionToken, createNgModule, createOptional, createSelf, createSkipSelf } from './core';\nimport { findLast } from './directive_resolver';\nimport { Identifiers } from './identifiers';\nimport { getAllLifecycleHooks } from './lifecycle_reflector';\nimport { CssSelector } from './selector';\nimport { SyncAsync, ValueTransformer, isPromise, noUndefined, resolveForwardRef, stringify, syntaxError, visitValue } from './util';\nexport var ERROR_COMPONENT_TYPE = 'ngComponentType';\n// Design notes:\n// - don't lazily create metadata:\n//   For some metadata, we need to do async work sometimes,\n//   so the user has to kick off this loading.\n//   But we want to report errors even when the async work is\n//   not required to check that the user would have been able\n//   to wait correctly.\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n        this._shallowModuleCache = new Map();\n    }\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var delegate = null;\n        var proxyClass = function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        };\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            proxyClass.prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        proxyClass.overriddenName = name;\n        return proxyClass;\n    };\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n    };\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n    };\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var name = cpl.identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        return this._createProxyClass(dirType, name);\n    };\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return {};\n        }\n    };\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n        }\n        else {\n            var hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, hostView, inputs, outputs, []);\n        }\n    };\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        var _a;\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n    };\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    CompileMetadataResolver.prototype.getHostComponentMetadata = function (compMeta, hostViewType) {\n        var hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n        var templateUrl = '';\n        var htmlAst = this._htmlParser.parse(template, templateUrl);\n        return cpl.CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new cpl.CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: { id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} },\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = this.getNonNormalizedDirectiveMetadata(directiveType), annotation = _a.annotation, metadata = _a.metadata;\n        var createDirectiveMetadata = function (templateMetadata) {\n            var normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(metadata.componentFactory, templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var template = metadata.template;\n            var templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var nonNormalizedTemplateMetadata = undefined;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var compMeta = dirMeta;\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var changeDetectionStrategy = null;\n        var viewProviders = [];\n        var entryComponentMetadata = [];\n        var selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var compMeta = dirMeta;\n            changeDetectionStrategy = compMeta.changeDetection;\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return _this._getEntryComponentMetadata(type); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var queries = [];\n        var viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var metadata = cpl.CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var dirMeta = this._directiveCache.get(directiveType);\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var dirSummary = this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var moduleSummary = this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule);\n        if (!moduleSummary) {\n            var moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    CompileMetadataResolver.prototype.getShallowModuleMetadata = function (moduleType) {\n        var compileMeta = this._shallowModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var ngModuleMeta = findLast(this._reflector.shallowAnnotations(moduleType), createNgModule.isTypeOf);\n        compileMeta = {\n            type: this._getTypeMetadata(moduleType),\n            rawExports: ngModuleMeta.exports,\n            rawImports: ngModuleMeta.imports,\n            rawProviders: ngModuleMeta.providers,\n        };\n        this._shallowModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var declaredDirectives = [];\n        var exportedNonModuleIdentifiers = [];\n        var declaredPipes = [];\n        var importedModules = [];\n        var exportedModules = [];\n        var providers = [];\n        var entryComponents = [];\n        var bootstrapComponents = [];\n        var schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var importedModuleType = undefined;\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var exportedDirectives = [];\n        var exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return _this._getEntryComponentMetadata(type); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return _this._getEntryComponentMetadata(type.reference); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new cpl.CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, compileMeta.type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if (type.provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var result = new cpl.TransitiveCompileNgModuleMetadata();\n        var modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var tokenRef = cpl.tokenReference(entry.provider.token);\n                var prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var annotations = this._reflector.tryAnnotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: cpl.CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    CompileMetadataResolver.prototype.getInjectableMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n        var typeMetadata = typeSummary ?\n            typeSummary.type :\n            this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n        var annotations = this._reflector.annotations(type).filter(function (ann) { return createInjectable.isTypeOf(ann); });\n        if (annotations.length === 0) {\n            return null;\n        }\n        var meta = annotations[annotations.length - 1];\n        return {\n            symbol: type,\n            type: typeMetadata,\n            providedIn: meta.providedIn,\n            useValue: meta.useValue,\n            useClass: meta.useClass,\n            useExisting: meta.useExisting,\n            useFactory: meta.useFactory,\n            deps: meta.deps,\n        };\n    };\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var pipeSummary = this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe);\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var pipeAnnotation = this._pipeResolver.resolve(pipeType);\n        var pipeMeta = new cpl.CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var hasUnknownDeps = false;\n        var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var dependenciesMetadata = params.map(function (param) {\n            var isAttribute = false;\n            var isHost = false;\n            var isSelf = false;\n            var isSkipSelf = false;\n            var isOptional = false;\n            var token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return null;\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = resolveForwardRef(token);\n        var compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var providerMeta = undefined;\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new cpl.ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var components = [];\n        var collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: dirMeta.metadata.componentFactory };\n        }\n        var dirSummary = this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: dirSummary.componentFactory };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    CompileMetadataResolver.prototype._getInjectableTypeMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var compileDeps = undefined;\n        var compileTypeMetadata = null;\n        var compileFactoryMetadata = null;\n        var token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata =\n                this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : null\n        };\n    };\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nexport { CompileMetadataResolver };\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var i = 0; i < tree.length; i++) {\n            var item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    tslib_1.__extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n */\nfunction componentStillLoadingError(compType) {\n    var error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    error[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n//# sourceMappingURL=metadata_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { tokenName, tokenReference } from './compile_metadata';\nimport { Identifiers, createTokenForExternalReference } from './identifiers';\nimport { ParseError } from './parse_util';\nimport { ProviderAst, ProviderAstType } from './template_parser/template_ast';\nvar ProviderError = /** @class */ (function (_super) {\n    tslib_1.__extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nexport { ProviderError };\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nexport { ProviderViewContext };\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var lazyProviders = [];\n            var eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: function () {\n            var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: function () {\n            var allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var queryValue = query.meta.read || defaultValue;\n            var tokenRef = tokenReference(queryValue);\n            var queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var result = [];\n        var currentEl = this;\n        var distance = 0;\n        var queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var transformedUseValue = provider.useValue;\n            var transformedUseExisting = provider.useExisting;\n            var transformedDeps = undefined;\n            if (provider.useExisting != null) {\n                var existingDiDep = _this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            else if (provider.useClass) {\n                var deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var attrValue = this._attrs[dep.token.value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this.transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var currElement = this;\n        var currEager = eager;\n        var result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(dep.token) ||\n                    this.viewContext.viewProviders.get(tokenReference(dep.token)) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nexport { ProviderElementContext };\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders, /* isModule */ true);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, \n        /* isModule */ false);\n    }\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var lazyProviders = [];\n        var eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var transformedUseValue = provider.useValue;\n            var transformedUseExisting = provider.useExisting;\n            var transformedDeps = undefined;\n            if (provider.useExisting != null) {\n                var existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        return dep;\n    };\n    return NgModuleProviderAnalyzer;\n}());\nexport { NgModuleProviderAnalyzer };\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n    });\n    return providersByToken;\n}\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n    providers.forEach(function (provider) {\n        var resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var lifecycleHooks = provider.token.identifier &&\n                provider.token.identifier.lifecycleHooks ?\n                provider.token.identifier.lifecycleHooks :\n                [];\n            var isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var viewQueryId = 1;\n    var viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var contentQueryId = contentQueryStartId;\n    var contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n//# sourceMappingURL=provider_analyzer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ProviderAstType } from '../template_parser/template_ast';\nexport function providerDef(ctx, providerAst) {\n    var flags = 0 /* None */;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    if (providerAst.isModule) {\n        flags |= 1073741824 /* TypeModuleProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\nfunction multiProviderDef(ctx, flags, providers) {\n    var allDepDefs = [];\n    var allParams = [];\n    var exprs = providers.map(function (provider, providerIndex) {\n        var expr;\n        if (provider.useClass) {\n            var depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var providerExpr = o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))], o.INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: o.literalArr(allDepDefs)\n    };\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return o.variable(paramName);\n        });\n    }\n}\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var providerExpr;\n    var deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || providerMeta.useClass.diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = o.NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var depsExpr = o.literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        o.literal(tokenMeta.value);\n}\nexport function depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isHost\n    var expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, dep.token);\n    var flags = 0 /* None */;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isSelf) {\n        flags |= 4 /* Self */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : o.literalArr([o.literal(flags), expr]);\n}\nexport function lifecycleHookToNodeFlag(lifecycleHook) {\n    var nodeFlag = 0 /* None */;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\nexport function componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var classMeta = {\n        diDeps: [\n            { isValue: true, value: o.literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n//# sourceMappingURL=provider_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from './compile_metadata';\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { typeSourceSpan } from './parse_util';\nimport { NgModuleProviderAnalyzer } from './provider_analyzer';\nimport { componentFactoryResolverProviderDef, providerDef } from './view_compiler/provider_compiler';\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nexport { NgModuleCompileResult };\nvar LOG_VAR = o.variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return o.importExpr(Identifiers.moduleProviderDef).callFn([\n                o.literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var ngModuleDef = o.importExpr(Identifiers.moduleDef).callFn([o.literalArr(providerDefs)]);\n        var ngModuleDefFactory = o.fn([new o.FnParam(LOG_VAR.name)], [new o.ReturnStatement(ngModuleDef)], o.INFERRED_TYPE);\n        var ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, o.importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            o.literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var id = typeof ngModuleMeta.id === 'string' ? o.literal(ngModuleMeta.id) :\n                ctx.importExpr(ngModuleMeta.id);\n            var registerFactoryStmt = o.importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([id, o.variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, o.NULL_EXPR);\n    };\n    NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n        var ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var ngModuleFactoryStmt = o.variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(o.importType(Identifiers.NgModuleFactory, [o.expressionType(ctx.importExpr(reference))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\nexport { NgModuleCompiler };\n//# sourceMappingURL=ng_module_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createNgModule } from './core';\nimport { findLast } from './directive_resolver';\nimport { stringify } from './util';\n/**\n * Resolves types to {@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nexport { NgModuleResolver };\n//# sourceMappingURL=ng_module_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { utf8Encode } from '../util';\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var sourcesIndex = new Map();\n        var sources = [];\n        var sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var mappings = '';\n        var lastCol0 = 0;\n        var lastSourceIndex = 0;\n        var lastSourceLine0 = 0;\n        var lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(sourcesIndex.get(segment.sourceUrl) - lastSourceIndex);\n                    lastSourceIndex = sourcesIndex.get(segment.sourceUrl);\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(segment.sourceLine0 - lastSourceLine0);\n                    lastSourceLine0 = segment.sourceLine0;\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(segment.sourceCol0 - lastSourceCol0);\n                    lastSourceCol0 = segment.sourceCol0;\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\nexport { SourceMapGenerator };\nexport function toBase64String(value) {\n    var b64 = '';\n    value = utf8Encode(value);\n    for (var i = 0; i < value.length;) {\n        var i1 = value.charCodeAt(i++);\n        var i2 = value.charCodeAt(i++);\n        var i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var out = '';\n    do {\n        var digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n//# sourceMappingURL=source_map.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { SourceMapGenerator } from './source_map';\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nexport var CATCH_ERROR_VAR = o.variable('error', null, null);\nexport var CATCH_STACK_VAR = o.variable('stack', null, null);\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var map = new SourceMapGenerator(genFilePath);\n        var firstOffsetMapped = false;\n        var mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var spans = line.srcSpans;\n            var parts = line.parts;\n            var col0 = line.indent * _INDENT_WITH.length;\n            var spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var span = spans[spanIdx];\n                var source = span.start.file;\n                var sourceLine = span.start.line;\n                var sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n    EmitterVisitorContext.prototype.spanOf = function (line, column) {\n        var emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\nexport { EmitterVisitorContext };\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        if (stmt.multiline) {\n            ctx.println(stmt, \"/* \" + stmt.comment + \" */\");\n        }\n        else {\n            stmt.comment.split('\\n').forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitJSDocCommentStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"/*\" + stmt.toString() + \"*/\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');\n    };\n    AbstractEmitterVisitor.prototype.visitTypeofExpr = function (expr, ctx) {\n        ctx.print(expr, 'typeof ');\n        expr.expr.visitExpression(this, ctx);\n    };\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case o.BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case o.BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR.name;\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR.name;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': ');\n        ast.falseCase.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var opStr;\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case o.BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case o.BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case o.BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case o.BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case o.BinaryOperator.BitwiseAnd:\n                opStr = '&';\n                break;\n            case o.BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case o.BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case o.BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case o.BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case o.BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case o.BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case o.BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case o.BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case o.BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case o.BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        if (ast.parens)\n            ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        if (ast.parens)\n            ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var incrementedIndent = false;\n        for (var i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\nexport { AbstractEmitterVisitor };\nexport function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\nfunction _createIndent(count) {\n    var res = '';\n    for (var i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n//# sourceMappingURL=abstract_emitter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext } from './abstract_emitter';\nimport * as o from './output_ast';\nvar _debugFilePath = '/debug/lib';\nexport function debugOutputAstAsTypeScript(ast) {\n    var converter = new _TsEmitterVisitor();\n    var ctx = EmitterVisitorContext.createRoot();\n    var asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof o.Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof o.Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof o.Type) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    TypeScriptEmitter.prototype.emitStatementsAndContext = function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    TypeScriptEmitter.prototype.emitStatements = function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nexport { TypeScriptEmitter };\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var value = ast.value;\n        if (value == null && ast.type != o.INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: name_1, as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(o.StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        if (stmt.value) {\n            ctx.print(stmt, \" = \");\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');\n    };\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\");\n        ast.type.visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(o.StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(o.StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR.name + \") {\");\n        ctx.incIndent();\n        var catchStmts = [CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ])].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitBuiltinType = function (type, ctx) {\n        var typeStr;\n        switch (type.name) {\n            case o.BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case o.BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case o.BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case o.BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            case o.BuiltinTypeName.None:\n                typeStr = 'never';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        var _this = this;\n        ast.value.visitExpression(this, ctx);\n        if (ast.typeParams !== null) {\n            ctx.print(null, '<');\n            this.visitAllObjects(function (type) { return _this.visitType(type, ctx); }, ast.typeParams, ctx, ',');\n            ctx.print(null, '>');\n        }\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, name);\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== o.INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n//# sourceMappingURL=ts_emitter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createPipe } from './core';\nimport { findLast } from './directive_resolver';\nimport { resolveForwardRef, stringify } from './util';\n/**\n * Resolve a `Type` for {@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    PipeResolver.prototype.isPipe = function (type) {\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nexport { PipeResolver };\n//# sourceMappingURL=pipe_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SecurityContext } from '../core';\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\nvar _SECURITY_SCHEMA;\nexport function SECURITY_SCHEMA() {\n    if (!_SECURITY_SCHEMA) {\n        _SECURITY_SCHEMA = {};\n        // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n        registerContext(SecurityContext.HTML, [\n            'iframe|srcdoc',\n            '*|innerHTML',\n            '*|outerHTML',\n        ]);\n        registerContext(SecurityContext.STYLE, ['*|style']);\n        // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n        registerContext(SecurityContext.URL, [\n            '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n            'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n            'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n            'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n        ]);\n        registerContext(SecurityContext.RESOURCE_URL, [\n            'applet|code',\n            'applet|codebase',\n            'base|href',\n            'embed|src',\n            'frame|src',\n            'head|profile',\n            'html|manifest',\n            'iframe|src',\n            'link|href',\n            'media|src',\n            'object|codebase',\n            'object|data',\n            'script|src',\n        ]);\n    }\n    return _SECURITY_SCHEMA;\n}\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n//# sourceMappingURL=dom_security_schema.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, SecurityContext } from '../core';\nimport { isNgContainer, isNgContent } from '../ml_parser/tags';\nimport { dashCaseToCamelCase } from '../util';\nimport { SECURITY_SCHEMA } from './dom_security_schema';\nimport { ElementSchemaRegistry } from './element_schema_registry';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    tslib_1.__extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var ctx = SECURITY_SCHEMA()[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA()['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var unit = '';\n        var strVal = val.toString().trim();\n        var errorMsg = null;\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nexport { DomElementSchemaRegistry };\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n//# sourceMappingURL=dom_element_schema_registry.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        var scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return [scopedCssText].concat(commentsWithHash).join('\\n');\n    };\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /*\n     * Process styles to convert native ShadowDOM rules that will trip\n     * up the css parser; we rely on decorating the stylesheet with inert rules.\n     *\n     * For example, we convert this rule:\n     *\n     * polyfill-next-selector { content: ':host menu-item'; }\n     * ::content menu-item {\n     *\n     * to this:\n     *\n     * scopeName menu-item {\n     *\n    **/\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /*\n     * Process styles to add rules which will only apply under the polyfill\n     *\n     * For example, we convert this rule:\n     *\n     * polyfill-rule {\n     *   content: ':host menu-item';\n     * ...\n     * }\n     *\n     * to this:\n     *\n     * scopeName menu-item {...}\n     *\n    **/\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n     *\n     *  .foo {... }\n     *\n     *  and converts this to\n     *\n     *  scopeName .foo { ... }\n    */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /*\n     * Process styles to add rules which will only apply under the polyfill\n     * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n     * occasions, e.g. -webkit-calc on Safari.)\n     * For example, we convert this rule:\n     *\n     * @polyfill-unscoped-rule {\n     *   content: 'menu-item';\n     * ... }\n     *\n     * to this:\n     *\n     * menu-item {...}\n     *\n    **/\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var r = '';\n        var m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /*\n     * convert a rule like :host(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar\n    */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /*\n     * convert a rule like :host-context(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n     *\n     * and\n     *\n     * :host-context(.foo:host) .bar { ... }\n     *\n     * to\n     *\n     * .foo<scopeName> .bar { ... }\n    */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var parts = m[2].split(',');\n                var r = [];\n                for (var i = 0; i < parts.length; i++) {\n                    var p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /*\n     * Convert combinators like ::shadow and pseudo-elements like ::content\n     * by replacing with space.\n    */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    // change a selector like 'div' to 'name div'\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var selector = rule.selector;\n            var content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var lre = /\\[/g;\n        var rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    // scope via name and [is=name]\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    // return a selector with [name] suffix on each simple selector\n    // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var attrName = '[' + scopeSelector + ']';\n        var _scopeSelectorPart = function (p) {\n            var scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var scopedSelector = '';\n        var startIndex = 0;\n        var res;\n        var sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var separator = res[1];\n            var part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nexport { ShadowCss };\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\nexport { CssRule };\nexport function processRules(input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\nfunction escapeBlocks(input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n//# sourceMappingURL=shadow_css.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileStylesheetMetadata, identifierModuleUrl, identifierName } from './compile_metadata';\nimport { ViewEncapsulation } from './core';\nimport * as o from './output/output_ast';\nimport { ShadowCss } from './shadow_css';\nvar COMPONENT_VARIABLE = '%COMP%';\nexport var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nexport var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nexport { StylesCompileDependency };\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nexport { CompiledStylesheet };\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var template = comp.template;\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return comp.template.encapsulation === ViewEncapsulation.Emulated;\n    };\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var styleExpressions = stylesheet.styles.map(function (plainStyle) { return o.literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(null);\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var stmt = o.variable(stylesVar)\n            .set(o.literalArr(styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n            o.StmtModifier.Final, o.StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\nexport { StyleCompiler };\nfunction getStylesVarName(component) {\n    var result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n//# sourceMappingURL=style_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from './ast';\nimport { ParseTreeResult } from './parser';\nimport { NGSP_UNICODE } from './tags';\nexport var PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n */\nexport function replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    WhitespaceVisitor.prototype.visitElement = function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new html.Element(element.name, html.visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    WhitespaceVisitor.prototype.visitAttribute = function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    WhitespaceVisitor.prototype.visitText = function (text, context) {\n        var isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new html.Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    WhitespaceVisitor.prototype.visitComment = function (comment, context) { return comment; };\n    WhitespaceVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    WhitespaceVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\nexport { WhitespaceVisitor };\nexport function removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(html.visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n//# sourceMappingURL=html_whitespaces.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ParseError } from '../parse_util';\nimport * as html from './ast';\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n */\nexport function expandNodes(nodes) {\n    var expander = new _Expander();\n    return new ExpansionResult(html.visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nexport { ExpansionResult };\nvar ExpansionError = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\nexport { ExpansionError };\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * @internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    _Expander.prototype.visitElement = function (element, context) {\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n// Plural forms are expanded to `NgPlural` and `NgPluralCase`s\nfunction _expandPluralForm(ast, errors) {\n    var children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new html.Element(\"ng-template\", [new html.Attribute('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var switchAttr = new html.Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n// ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s\nfunction _expandDefaultForm(ast, errors) {\n    var children = ast.cases.map(function (c) {\n        var expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new html.Element(\"ng-template\", [new html.Attribute('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new html.Element(\"ng-template\", [new html.Attribute('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var switchAttr = new html.Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n//# sourceMappingURL=icu_ast_expander.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { SecurityContext } from '../core';\nimport { BoundElementProperty, EmptyExpr, ParsedEvent, ParsedProperty, ParsedPropertyType, ParsedVariable, RecursiveAstVisitor } from '../expression_parser/ast';\nimport { mergeNsAndName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { CssSelector } from '../selector';\nimport { splitAtColon, splitAtPeriod } from '../util';\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, errors) {\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this.errors = errors;\n        this.pipesByName = null;\n        this._usedPipes = new Map();\n        // When the `pipes` parameter is `null`, do not check for used pipes\n        // This is used in IVY when we might not know the available pipes at compile time\n        if (pipes) {\n            var pipesByName_1 = new Map();\n            pipes.forEach(function (pipe) { return pipesByName_1.set(pipe.name, pipe); });\n            this.pipesByName = pipesByName_1;\n        }\n    }\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    BindingParser.prototype.createBoundHostProperties = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1;\n        }\n        return null;\n    };\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        var boundProps = this.createBoundHostProperties(dirMeta, sourceSpan);\n        return boundProps &&\n            boundProps.map(function (prop) { return _this.createBoundElementProperty(elementSelector, prop); });\n    };\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var targetEvents_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEvents_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEvents_1;\n        }\n        return null;\n    };\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var sourceInfo = sourceSpan.start.toString();\n        try {\n            var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    // Parse an inline template binding. ie `<tag *tplKey=\"<tplValue>\">`\n    BindingParser.prototype.parseInlineTemplateBinding = function (tplKey, tplValue, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var bindings = this._parseTemplateBindings(tplKey, tplValue, sourceSpan);\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new ParsedVariable(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    BindingParser.prototype._parseTemplateBindings = function (tplKey, tplValue, sourceSpan) {\n        var _this = this;\n        var sourceInfo = sourceSpan.start.toString();\n        try {\n            var bindingsResult = this._exprParser.parseTemplateBindings(tplKey, tplValue, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new ParsedProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), ParsedPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.DEFAULT, sourceSpan));\n    };\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.ANIMATION, sourceSpan));\n    };\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown)').toString();\n        try {\n            var ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    BindingParser.prototype.createBoundElementProperty = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementProperty(boundProp.name, 4 /* Animation */, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var unit = null;\n        var bindingType = undefined;\n        var boundPropertyName = null;\n        var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var securityContexts = undefined;\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = 1 /* Attribute */;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = 2 /* Class */;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = 3 /* Style */;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = 0 /* Property */;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementProperty(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseRegularEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var matches = splitAtPeriod(name, [name, '']);\n        var eventName = matches[0];\n        var phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new ParsedEvent(eventName, phase, 1 /* Animation */, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    BindingParser.prototype._parseRegularEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n        var ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetEvents.push(new ParsedEvent(eventName, target, 0 /* Regular */, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown').toString();\n        try {\n            var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    };\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    // Make sure all the used pipes are known in `this.pipesByName`\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast && this.pipesByName) {\n            var collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param propName the name of the property / attribute\n     * @param sourceSpan\n     * @param isAttr true when binding to an attribute\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(report.msg, sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nexport { BindingParser };\nvar PipeCollector = /** @class */ (function (_super) {\n    tslib_1.__extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\nexport { PipeCollector };\nfunction isAnimationLabel(name) {\n    return name[0] == '@';\n}\nexport function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n//# sourceMappingURL=binding_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { identifierName } from '../compile_metadata';\nimport { ASTWithSource, EmptyExpr } from '../expression_parser/ast';\nimport { Identifiers, createTokenForExternalReference, createTokenForReference } from '../identifiers';\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/html_parser';\nimport { removeWhitespaces, replaceNgsp } from '../ml_parser/html_whitespaces';\nimport { expandNodes } from '../ml_parser/icu_ast_expander';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { isNgTemplate, splitNsName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { ProviderElementContext, ProviderViewContext } from '../provider_analyzer';\nimport { CssSelector, SelectorMatcher } from '../selector';\nimport { isStyleUrlResolvable } from '../style_url_resolver';\nimport { syntaxError } from '../util';\nimport { BindingParser } from './binding_parser';\nimport * as t from './template_ast';\nimport { PreparsedElementType, preparseElement } from './template_preparser';\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar _TEXT_CSS_SELECTOR;\nfunction TEXT_CSS_SELECTOR() {\n    if (!_TEXT_CSS_SELECTOR) {\n        _TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n    }\n    return _TEXT_CSS_SELECTOR;\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    tslib_1.__extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nexport { TemplateParseError };\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nexport { TemplateParseResult };\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    Object.defineProperty(TemplateParser.prototype, \"expressionParser\", {\n        get: function () { return this._exprParser; },\n        enumerable: true,\n        configurable: true\n    });\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var warnings = result.errors.filter(function (error) { return error.level === ParseErrorLevel.WARNING; });\n        var errors = result.errors.filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: result.templateAst, pipes: result.usedPipes };\n    };\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var htmlParseResult = typeof template === 'string' ?\n            this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var result;\n        var errors = htmlAstWithErrors.errors;\n        var usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var uniqDirectives = removeSummaryDuplicates(directives);\n            var uniqPipes = removeSummaryDuplicates(pipes);\n            var providerViewContext = new ProviderViewContext(this._reflector, component);\n            var interpolationConfig = undefined;\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n            var parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = t.templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var existingReferences = [];\n        result.filter(function (element) { return !!element.references; })\n            .forEach(function (element) { return element.references.forEach(function (reference) {\n            var name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nexport { TemplateParser };\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n        var valueNoNgsp = replaceNgsp(text.value);\n        var expr = this._bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n        return expr ? new t.BoundTextAst(expr, ngContentIndex, text.sourceSpan) :\n            new t.TextAst(valueNoNgsp, ngContentIndex, text.sourceSpan);\n    };\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var queryStartIndex = this.contentQueryStartId;\n        var elName = element.name;\n        var preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var matchableAttrs = [];\n        var elementOrDirectiveProps = [];\n        var elementOrDirectiveRefs = [];\n        var elementVars = [];\n        var events = [];\n        var templateElementOrDirectiveProps = [];\n        var templateMatchableAttrs = [];\n        var templateElementVars = [];\n        var hasInlineTemplates = false;\n        var attrs = [];\n        var isTemplateElement = isNgTemplate(element.name);\n        element.attrs.forEach(function (attr) {\n            var parsedVariables = [];\n            var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            elementVars.push.apply(elementVars, parsedVariables.map(function (v) { return t.VariableAst.fromParsedVariable(v); }));\n            var templateValue;\n            var templateKey;\n            var normalizedName = _this._normalizeAttributeName(attr.name);\n            if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateValue = attr.value;\n                templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n            }\n            var hasTemplateBinding = templateValue != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                var parsedVariables_1 = [];\n                _this._bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, parsedVariables_1);\n                templateElementVars.push.apply(templateElementVars, parsedVariables_1.map(function (v) { return t.VariableAst.fromParsedVariable(v); }));\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var elementCssSelector = createElementCssSelector(elName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var references = [];\n        var boundDirectivePropNames = new Set();\n        var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references, boundDirectivePropNames);\n        var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, element.sourceSpan);\n        var children = html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var projectionSelector = preparsedElement.projectAs != '' ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n        var parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>` element\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n            }\n            parsedElement = new t.NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else if (isTemplateElement) {\n            // `<ng-template>` element\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n            parsedElement = new t.EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else {\n            // element other than `<ng-content>` and `<ng-template>`\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n            var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new t.ElementAst(elName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            // The element as a *-attribute\n            var templateQueryStartIndex = this.contentQueryStartId;\n            var templateSelector = createElementCssSelector('ng-template', templateMatchableAttrs);\n            var directives = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var templateBoundDirectivePropNames = new Set();\n            var templateDirectiveAsts = this._createDirectiveAsts(true, elName, directives, templateElementOrDirectiveProps, [], element.sourceSpan, [], templateBoundDirectivePropNames);\n            var templateElementProps = this._createElementPropertyAsts(elName, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n            var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan);\n            templateProviderContext.afterElement();\n            parsedElement = new t.EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, element.sourceSpan);\n        }\n        return parsedElement;\n    };\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var name = this._normalizeAttributeName(attr.name);\n        var value = attr.value;\n        var srcSpan = attr.sourceSpan;\n        var boundEvents = [];\n        var bindParts = name.match(BIND_NAME_REGEXP);\n        var hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        targetEvents.push.apply(targetEvents, boundEvents.map(function (e) { return t.BoundEventAst.fromParsedEvent(e); }));\n        return hasBinding;\n    };\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new t.VariableAst(identifier, value, sourceSpan));\n    };\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[_this.directivesIndex.get(directive)] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var matchedReferences = new Set();\n        var component = null;\n        var directiveAsts = directives.map(function (directive) {\n            var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var directiveProperties = [];\n            var boundProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan);\n            var hostProperties = boundProperties.map(function (prop) { return t.BoundElementPropertyAst.fromBoundProperty(prop); });\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var parsedEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new t.ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var hostEvents = parsedEvents.map(function (e) { return t.BoundEventAst.fromParsedEvent(e); });\n            var contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new t.DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var refToken = null;\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new t.ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var elProp = directiveProperties[dirProp];\n                var boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new t.BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                var boundProp = _this._bindingParser.createBoundElementProperty(elementName, prop);\n                boundElementProps.push(t.BoundElementPropertyAst.fromBoundProperty(boundProp));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return identifierName(directive.directive.type); });\n    };\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param matchElement Whether any directive has matched on the tag name\n     * @param element the html element\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, element.sourceSpan);\n        }\n    };\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === 0 /* Property */ &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var ngContentIndex = parent.findNgContentIndex(selector);\n        var children = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new t.ElementAst(ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n        return new t.TextAst(text.value, ngContentIndex, text.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\nexport function splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var matcher = new SelectorMatcher();\n        var wildcardNgContentIndex = null;\n        var component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var ngContentSelectors = component.directive.template.ngContentSelectors;\n            for (var i = 0; i < ngContentSelectors.length; i++) {\n                var selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\nexport function createElementCssSelector(elementName, attributes) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var i = 0; i < attributes.length; i++) {\n        var attrName = attributes[i][0];\n        var attrNameNoNs = splitNsName(attrName)[1];\n        var attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\nfunction _isEmptyTextNode(node) {\n    return node instanceof html.Text && node.value.trim().length == 0;\n}\nexport function removeSummaryDuplicates(items) {\n    var map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n//# sourceMappingURL=template_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as cdAst from '../expression_parser/ast';\nimport { Identifiers } from '../identifiers';\nimport * as o from '../output/output_ast';\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = o.variable('$event');\n    return EventHandlerVars;\n}());\nexport { EventHandlerVars };\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(\n    /**\n     * Render2 compatible statements,\n     */\n    stmts, \n    /**\n     * Variable name used with render2 compatible statements.\n     */\n    allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n        /**\n         * This is bit of a hack. It converts statements which render2 expects to statements which are\n         * expected by render3.\n         *\n         * Example: `<div click=\"doSomething($event)\">` will generate:\n         *\n         * Render3:\n         * ```\n         * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);\n         * return pd_b;\n         * ```\n         *\n         * but render2 expects:\n         * ```\n         * return ctx.doSomething($event);\n         * ```\n         */\n        // TODO(misko): remove this hack once we no longer support ViewEngine.\n        this.render3Stmts = stmts.map(function (statement) {\n            if (statement instanceof o.DeclareVarStmt && statement.name == allowDefault.name &&\n                statement.value instanceof o.BinaryOperatorExpr) {\n                var lhs = statement.value.lhs;\n                return new o.ReturnStatement(lhs.value);\n            }\n            return statement;\n        });\n    }\n    return ConvertActionBindingResult;\n}());\nexport { ConvertActionBindingResult };\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n */\nexport function convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return o.literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var entries = keys.map(function (k, i) { return ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }); });\n                return o.literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var lastIndex = actionStmts.length - 1;\n    var preventDefaultVar = null;\n    if (lastIndex >= 0) {\n        var lastStatement = actionStmts[lastIndex];\n        var returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n                    .toDeclStmt(null, [o.StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\nexport function convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\nexport { ConvertPropertyBindingResult };\nexport var BindingForm;\n(function (BindingForm) {\n    // The general form of binding expression, supports all expressions.\n    BindingForm[BindingForm[\"General\"] = 0] = \"General\";\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherwise generate a general binding\n    BindingForm[BindingForm[\"TrySimple\"] = 1] = \"TrySimple\";\n})(BindingForm || (BindingForm = {}));\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n */\nexport function convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var currValExpr = createCurrValueExpr(bindingId);\n    var stmts = [];\n    var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(o.DYNAMIC_TYPE, [o.StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\nfunction convertBuiltins(converterFactory, ast) {\n    var visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\nexport function temporaryDeclaration(bindingId, temporaryNumber) {\n    return new o.DeclareVarStmt(temporaryName(bindingId, temporaryNumber), o.NULL_EXPR);\n}\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode;\n(function (_Mode) {\n    _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n    _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n})(_Mode || (_Mode = {}));\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    tslib_1.__extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(cdAst.AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var op;\n        switch (ast.operation) {\n            case '+':\n                op = o.BinaryOperator.Plus;\n                break;\n            case '-':\n                op = o.BinaryOperator.Minus;\n                break;\n            case '*':\n                op = o.BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = o.BinaryOperator.Divide;\n                break;\n            case '%':\n                op = o.BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = o.BinaryOperator.And;\n                break;\n            case '||':\n                op = o.BinaryOperator.Or;\n                break;\n            case '==':\n                op = o.BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = o.BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = o.BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = o.BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = o.BinaryOperator.Lower;\n                break;\n            case '>':\n                op = o.BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = o.BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = o.BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new o.BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(ast.target, _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var args = [o.literal(ast.expressions.length)];\n        for (var i = 0; i < ast.strings.length - 1; i++) {\n            args.push(o.literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(o.literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            o.importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            o.importExpr(Identifiers.interpolate).callFn([args[0], o.literalArr(args.slice(1))]);\n    };\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var obj = this._visit(ast.obj, _Mode.Expression);\n        var key = this._visit(ast.key, _Mode.Expression);\n        var value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type interference\n        // to infer the type.\n        var type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            o.INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, o.literal(ast.value, type));\n    };\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        if (ast.receiver instanceof cdAst.ImplicitReceiver && ast.name == '$any') {\n            var args = this.visitAll(ast.args, _Mode.Expression);\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return args[0].cast(o.DYNAMIC_TYPE);\n        }\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var args = this.visitAll(ast.args, _Mode.Expression);\n            var result = null;\n            var receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, o.not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, o.assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var result = null;\n            var receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var receiver = this._visit(ast.receiver, _Mode.Expression);\n        var varExpr = null;\n        if (receiver === this._implicitReceiver) {\n            var localExpr = this._getLocal(ast.name);\n            if (localExpr) {\n                if (localExpr instanceof o.ReadPropExpr) {\n                    // If the local variable is a property read expression, it's a reference\n                    // to a 'context.property' value and will be used as the target of the\n                    // write expression.\n                    varExpr = localExpr;\n                }\n                else {\n                    // Otherwise it's an error.\n                    throw new Error('Cannot assign to a reference or variable!');\n                }\n            }\n        }\n        // If no local expression could be produced, use the original receiver's\n        // property as the target.\n        if (varExpr === null) {\n            varExpr = receiver.prop(ast.name);\n        }\n        return convertToStatementIfNeeded(mode, varExpr.set(this._visit(ast.value, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var temporary = undefined;\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof cdAst.SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new cdAst.MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new cdAst.PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(o.literal(null), access));\n    };\n    // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n    // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n    // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n    // safe method call as this needs be transform initially to:\n    //   a == null ? null : a.c.b.c?.d.e\n    // then to:\n    //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: function (ast) { return null; },\n            visitChain: function (ast) { return null; },\n            visitConditional: function (ast) { return null; },\n            visitFunctionCall: function (ast) { return null; },\n            visitImplicitReceiver: function (ast) { return null; },\n            visitInterpolation: function (ast) { return null; },\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: function (ast) { return null; },\n            visitLiteralArray: function (ast) { return null; },\n            visitLiteralMap: function (ast) { return null; },\n            visitLiteralPrimitive: function (ast) { return null; },\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            visitPipe: function (ast) { return null; },\n            visitPrefixNot: function (ast) { return null; },\n            visitNonNullAssert: function (ast) { return null; },\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: function (ast) { return null; },\n            visitQuote: function (ast) { return null; },\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    // Returns true of the AST includes a method or a pipe indicating that, if the\n    // expression is used as the target of a safe property or method access then\n    // the expression should be stored into a temporary variable.\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: function (ast) { return false; },\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: function (ast) { return true; },\n            visitImplicitReceiver: function (ast) { return false; },\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: function (ast) { return false; },\n            visitKeyedWrite: function (ast) { return false; },\n            visitLiteralArray: function (ast) { return true; },\n            visitLiteralMap: function (ast) { return true; },\n            visitLiteralPrimitive: function (ast) { return false; },\n            visitMethodCall: function (ast) { return true; },\n            visitPipe: function (ast) { return true; },\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: function (ast) { return false; },\n            visitPropertyWrite: function (ast) { return false; },\n            visitQuote: function (ast) { return false; },\n            visitSafeMethodCall: function (ast) { return true; },\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new o.ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        arg.forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\nfunction createCurrValueExpr(bindingId) {\n    return o.variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\nfunction createPreventDefaultVar(bindingId) {\n    return o.variable(\"pd_\" + bindingId);\n}\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof o.ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof o.ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    tslib_1.__extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(cdAst.FunctionCall));\nexport { BuiltinFunctionCall };\n//# sourceMappingURL=expression_converter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport { BindingForm, EventHandlerVars, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins } from '../compiler_util/expression_converter';\nimport * as o from '../output/output_ast';\nimport { templateVisitAll } from '../template_parser/template_ast';\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    TypeCheckCompiler.prototype.compileComponent = function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var embeddedViewCount = 0;\n        var viewBuilderFactory = function (parent, guards) {\n            var embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nexport { TypeCheckCompiler };\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    TypeCheckLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return o.variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    ViewBuilder.prototype.getOutputVar = function (type) {\n        var varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    ViewBuilder.prototype.getTypeGuardExpressions = function (ast) {\n        var result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    var useIf = guard === 'UseIf';\n                    result.push({\n                        guard: guard,\n                        useIf: useIf,\n                        expression: { context: this.component, value: input.value }\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    ViewBuilder.prototype.build = function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var viewStmts = [o.variable(DYNAMIC_VAR_NAME).set(o.NULL_EXPR).toDeclStmt(o.DYNAMIC_TYPE)];\n        var bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var bindingId = \"\" + bindingCount++;\n            var nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, o.variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new o.ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var bindingId = \"\" + bindingCount++;\n            var nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, o.variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var bindingId = \"\" + bindingCount++;\n                var nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, o.variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new o.IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var viewFactory = new o.DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var astWithSource = ast.value;\n        var inter = astWithSource.ast;\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var guards = this.getTypeGuardExpressions(ast);\n            var childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var inputDefs = [];\n        var updateRendererExpressions = [];\n        var outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    ViewBuilder.prototype.visitElementOrTemplate = function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var outputVarType = null;\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = o.BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    ViewBuilder.prototype.visitDirective = function (dirAst) {\n        var _this = this;\n        var dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) { return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan }); });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) { return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan }); });\n            dirAst.hostEvents.forEach(function (hostEventAst) { return _this.actions.push({\n                context: dirType,\n                value: hostEventAst.handler,\n                sourceSpan: hostEventAst.sourceSpan\n            }); });\n        }\n    };\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return o.variable(this.getOutputVar(o.BuiltinTypeName.Dynamic));\n        }\n        for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = o.BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return o.variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    ViewBuilder.prototype.pipeOutputVar = function (name) {\n        var pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    ViewBuilder.prototype.preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return function (args) {\n                    var arr = o.literalArr(args);\n                    // Note: The old view compiler used to use an `any` type\n                    // for arrays.\n                    return _this.options.fullTemplateTypeCheck ? arr : arr.cast(o.DYNAMIC_TYPE);\n                }; },\n                createLiteralMapConverter: function (keys) { return function (values) {\n                    var entries = keys.map(function (k, i) { return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    }); });\n                    var map = o.literalMap(entries);\n                    // Note: The old view compiler used to use an `any` type\n                    // for maps.\n                    return _this.options.fullTemplateTypeCheck ? map : map.cast(o.DYNAMIC_TYPE);\n                }; },\n                createPipeConverter: function (name, argCount) { return function (args) {\n                    // Note: The old view compiler used to use an `any` type\n                    // for pipes.\n                    var pipeExpr = _this.options.fullTemplateTypeCheck ?\n                        o.variable(_this.pipeOutputVar(name)) :\n                        o.variable(_this.getOutputVar(o.BuiltinTypeName.Dynamic));\n                    return pipeExpr.callMethod('transform', args);\n                }; },\n            }, expression.value)\n        };\n    };\n    ViewBuilder.prototype.visitNgContent = function (ast, context) { };\n    ViewBuilder.prototype.visitText = function (ast, context) { };\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n//# sourceMappingURL=type_check_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { rendererTypeName, tokenReference, viewClassName } from '../compile_metadata';\nimport { BindingForm, EventHandlerVars, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins } from '../compiler_util/expression_converter';\nimport { ChangeDetectionStrategy } from '../core';\nimport { Identifiers } from '../identifiers';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport { isNgContainer } from '../ml_parser/tags';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ElementAst, EmbeddedTemplateAst, NgContentAst, templateVisitAll } from '../template_parser/template_ast';\nimport { componentFactoryResolverProviderDef, depDef, lifecycleHookToNodeFlag, providerDef } from './provider_compiler';\nvar CLASS_ATTR = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nexport { ViewCompileResult };\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var _a;\n        var embeddedViewCount = 0;\n        var staticQueryIds = findStaticQueryIds(template);\n        var renderComponentVarName = undefined;\n        if (!component.isHost) {\n            var template_1 = component.template;\n            var customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new o.LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = renderComponentVar.name;\n            outputCtx.statements.push(renderComponentVar\n                .set(o.importExpr(Identifiers.createRendererType2).callFn([new o.LiteralMapExpr([\n                    new o.LiteralMapEntry('encapsulation', o.literal(template_1.encapsulation), false),\n                    new o.LiteralMapEntry('styles', styles, false),\n                    new o.LiteralMapEntry('data', new o.LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(o.importType(Identifiers.RendererType2), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n        }\n        var viewBuilderFactory = function (parent) {\n            var embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n    };\n    return ViewCompiler;\n}());\nexport { ViewCompiler };\nvar LOG_VAR = o.variable('_l');\nvar VIEW_VAR = o.variable('_v');\nvar CHECK_VAR = o.variable('_ck');\nvar COMP_VAR = o.variable('_co');\nvar EVENT_NAME_VAR = o.variable('en');\nvar ALLOW_DEFAULT_VAR = o.variable(\"ad\");\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        // Need Object.create so that we don't have builtin values...\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            o.DYNAMIC_TYPE :\n            o.expressionType(outputCtx.importExpr(this.component.type.reference));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var queryId = queryIndex + 1;\n                var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                var flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                        o.literal(flags), o.literal(queryId),\n                        new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                    o.literal(0 /* None */), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n                ])\n            }); });\n        }\n    };\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var viewFlags = 0 /* None */;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var viewFactory = new o.DeclareFunctionStmt(this.viewName, [new o.FnParam(LOG_VAR.name)], [new o.ReturnStatement(o.importExpr(Identifiers.viewDef).callFn([\n                o.literal(viewFlags),\n                o.literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], o.importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [o.StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var updateFn;\n        if (updateStmts.length > 0) {\n            var preStmts = [];\n            if (!this.component.isHost && o.findReadVarNames(updateStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = o.fn([\n                new o.FnParam(CHECK_VAR.name, o.INFERRED_TYPE),\n                new o.FnParam(VIEW_VAR.name, o.INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), o.INFERRED_TYPE);\n        }\n        else {\n            updateFn = o.NULL_EXPR;\n        }\n        return updateFn;\n    };\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: o.importExpr(Identifiers.ngContentDef).callFn([\n                o.literal(ast.ngContentIndex), o.literal(ast.index)\n            ])\n        }); });\n    };\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // Static text nodes have no check function\n        var checkIndex = -1;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr([o.literal(ast.value)]),\n            ])\n        }); });\n    };\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var astWithSource = ast.value;\n        var inter = astWithSource.ast;\n        var updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr(inter.strings.map(function (s) { return o.literal(s); })),\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                o.variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        // Using a null element name creates an anchor.\n        var elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var inputDefs = [];\n        var updateRendererExpressions = [];\n        var outputDefs = [];\n        if (elName) {\n            var hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: COMP_VAR,\n                inputAst: inputAst,\n                dirAst: null,\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return o.literalArr([o.literal(target), o.literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var childCount = this.nodes.length - nodeIndex - 1;\n        var compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var compRendererType = o.NULL_EXPR;\n        var compView = o.NULL_EXPR;\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.elementDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                o.literal(elName),\n                elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n                inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var flags = 0 /* None */;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var hostBindings = [];\n        var hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var dirAst = undefined;\n            var dirIndex = undefined;\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, _this.staticQueryIds.get(ast)), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var valueType = undefined;\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var valueType = undefined;\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: null });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var queryId = dirAst.contentQueryStartId + queryIndex;\n            var flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                    o.literal(flags), o.literal(queryId),\n                    new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var outputDefs = [];\n        var dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n            }\n        });\n        var updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var dirContextExpr = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n        var hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: o.importExpr(Identifiers.directiveDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n                o.literal(childCount),\n                providerExpr,\n                depsExpr,\n                inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR,\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: o.importExpr(Identifiers.providerDef).callFn([\n                o.literal(data.flags),\n                data.queryMatchExprs.length ? o.literalArr(data.queryMatchExprs) : o.NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var flags = 0 /* None */;\n        var queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var currViewExpr = VIEW_VAR;\n        for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(o.DYNAMIC_TYPE)) {\n            // check references\n            var refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return o.importExpr(Identifiers.nodeValue).callFn([currViewExpr, o.literal(refNodeIndex)]);\n            }\n            // check variables\n            var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    ViewBuilder.prototype._createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var valueExpr_1 = o.importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var checkIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: o.importExpr(Identifiers.pureArrayDef).callFn([\n                o.literal(checkIndex),\n                o.literal(argCount),\n            ])\n        }); });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    ViewBuilder.prototype._createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var valueExpr_2 = o.importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var map = o.literalMap(keys.map(function (e, i) { return (tslib_1.__assign({}, e, { value: o.literal(i) })); }));\n        var checkIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: o.importExpr(Identifiers.pureObjectDef).callFn([\n                o.literal(checkIndex),\n                map,\n            ])\n        }); });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    ViewBuilder.prototype._createPipeConverter = function (expression, name, argCount) {\n        var pipe = this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; });\n        if (pipe.pure) {\n            var checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: o.importExpr(Identifiers.purePipeDef).callFn([\n                    o.literal(checkIndex_1),\n                    o.literal(argCount),\n                ])\n            }); });\n            // find underlying pipe in the component view\n            var compViewExpr = VIEW_VAR;\n            var compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(o.DYNAMIC_TYPE);\n            }\n            var pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var pipeValueExpr_1 = o.importExpr(Identifiers.nodeValue).callFn([compViewExpr, o.literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var nodeValueExpr_1 = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        var flags = 0 /* None */;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: o.importExpr(Identifiers.pipeDef).callFn([\n                o.literal(flags), _this.outputCtx.importExpr(pipe.type.reference), o.literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this._createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var self = this;\n        var updateBindingCount = 0;\n        var updateRendererStmts = [];\n        var updateDirectivesStmts = [];\n        var nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new o.CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return o.applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var updateStmts = [];\n            var exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var bindingId = \"\" + updateBindingCount++;\n                var nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return o.applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(o.applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var handleEventStmts = [];\n        var handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var bindingId = \"\" + handleEventBindingCount++;\n            var nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(o.applySourceSpanToStatementIfNeeded(new o.IfStmt(o.literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var preStmts = [ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE)];\n            if (!this.component.isHost && o.findReadVarNames(handleEventStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = o.fn([\n                new o.FnParam(VIEW_VAR.name, o.INFERRED_TYPE),\n                new o.FnParam(EVENT_NAME_VAR.name, o.INFERRED_TYPE),\n                new o.FnParam(EventHandlerVars.event.name, o.INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new o.ReturnStatement(ALLOW_DEFAULT_VAR)]), o.INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = o.NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\nfunction needsAdditionalRootNode(astNodes) {\n    var lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\nfunction elementBindingDef(inputAst, dirAst) {\n    var inputType = inputAst.type;\n    switch (inputType) {\n        case 1 /* Attribute */:\n            return o.literalArr([\n                o.literal(1 /* TypeElementAttribute */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case 0 /* Property */:\n            return o.literalArr([\n                o.literal(8 /* TypeProperty */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case 4 /* Animation */:\n            var bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return o.literalArr([\n                o.literal(bindingType), o.literal('@' + inputAst.name), o.literal(inputAst.securityContext)\n            ]);\n        case 2 /* Class */:\n            return o.literalArr([o.literal(2 /* TypeElementClass */), o.literal(inputAst.name), o.NULL_EXPR]);\n        case 3 /* Style */:\n            return o.literalArr([\n                o.literal(4 /* TypeElementStyle */), o.literal(inputAst.name), o.literal(inputAst.unit)\n            ]);\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = inputType;\n            throw new Error(\"unexpected \" + unexpected);\n    }\n}\nfunction fixedAttrsDef(elementAst) {\n    var mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var value = dirAst.directive.hostAttributes[name];\n            var prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return o.literalArr(Object.keys(mapResult).sort().map(function (attrName) { return o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])]); }));\n}\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(1 /* Dynamic */), o.literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(0 /* Inline */)].concat(exprs));\n    }\n}\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return o.importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, o.literal(nodeIndex), o.literal(bindingIdx), expr\n    ]);\n}\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var staticQueryIds = new Set();\n        var dynamicQueryIds = new Set();\n        var queryMatches = undefined;\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var staticQueryIds = new Set();\n    var dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var flags = 0 /* None */;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\nexport function elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n//# sourceMappingURL=view_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as o from './output/output_ast';\nimport { error } from './util';\nvar CONSTANT_PREFIX = '_c';\n// Closure variables holding messages must be named `MSG_[A-Z0-9]+`\nvar TRANSLATION_PREFIX = 'MSG_';\n/**\n * Closure uses `goog.getMsg(message)` to lookup translations\n */\nvar GOOG_GET_MSG = 'goog.getMsg';\n/**\n * Context to use when producing a key.\n *\n * This ensures we see the constant not the reference variable when producing\n * a key.\n */\nvar KEY_CONTEXT = {};\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    tslib_1.__extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        _this.original = resolved;\n        return _this;\n    }\n    FixupExpression.prototype.visitExpression = function (visitor, context) {\n        if (context === KEY_CONTEXT) {\n            // When producing a key we want to traverse the constant not the\n            // variable used to refer to it.\n            return this.original.visitExpression(visitor, context);\n        }\n        else {\n            return this.resolved.visitExpression(visitor, context);\n        }\n    };\n    FixupExpression.prototype.isEquivalent = function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    FixupExpression.prototype.isConstant = function () { return true; };\n    FixupExpression.prototype.fixup = function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(o.Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.translations = new Map();\n        this.literals = new Map();\n        this.literalFactories = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.pipeDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    ConstantPool.prototype.getConstLiteral = function (literal, forceShared) {\n        if (literal instanceof o.LiteralExpr || literal instanceof FixupExpression) {\n            // Do no put simple literals into the constant pool or try to produce a constant for a\n            // reference to a constant.\n            return literal;\n        }\n        var key = this.keyOf(literal);\n        var fixup = this.literals.get(key);\n        var newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var name_1 = this.freshName();\n            this.statements.push(o.variable(name_1).set(literal).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            fixup.fixup(o.variable(name_1));\n        }\n        return fixup;\n    };\n    // Generates closure specific code for translation.\n    //\n    // ```\n    // /**\n    //  * @desc description?\n    //  * @meaning meaning?\n    //  */\n    // const MSG_XYZ = goog.getMsg('message');\n    // ```\n    ConstantPool.prototype.getTranslation = function (message, meta, suffix) {\n        // The identity of an i18n message depends on the message and its meaning\n        var key = meta.meaning ? message + \"\\0\\0\" + meta.meaning : message;\n        var exp = this.translations.get(key);\n        if (exp) {\n            return exp;\n        }\n        var docStmt = i18nMetaToDocStmt(meta);\n        if (docStmt) {\n            this.statements.push(docStmt);\n        }\n        // Call closure to get the translation\n        var variable = o.variable(this.freshTranslationName(suffix));\n        var fnCall = o.variable(GOOG_GET_MSG).callFn([o.literal(message)]);\n        var msgStmt = variable.set(fnCall).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n        this.statements.push(msgStmt);\n        this.translations.set(key, variable);\n        return variable;\n    };\n    ConstantPool.prototype.getDefinition = function (type, kind, ctx, forceShared) {\n        if (forceShared === void 0) { forceShared = false; }\n        var definitions = this.definitionsOf(kind);\n        var fixup = definitions.get(type);\n        var newValue = false;\n        if (!fixup) {\n            var property = this.propertyNameOf(kind);\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            definitions.set(type, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            var name_2 = this.freshName();\n            this.statements.push(o.variable(name_2).set(fixup.resolved).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            fixup.fixup(o.variable(name_2));\n        }\n        return fixup;\n    };\n    ConstantPool.prototype.getLiteralFactory = function (literal) {\n        // Create a pure function that builds an array of a mix of constant  and variable expressions\n        if (literal instanceof o.LiteralArrayExpr) {\n            var argumentsForKey = literal.entries.map(function (e) { return e.isConstant() ? e : o.literal(null); });\n            var key = this.keyOf(o.literalArr(argumentsForKey));\n            return this._getLiteralFactory(key, literal.entries, function (entries) { return o.literalArr(entries); });\n        }\n        else {\n            var expressionForKey = o.literalMap(literal.entries.map(function (e) { return ({\n                key: e.key,\n                value: e.value.isConstant() ? e.value : o.literal(null),\n                quoted: e.quoted\n            }); }));\n            var key = this.keyOf(expressionForKey);\n            return this._getLiteralFactory(key, literal.entries.map(function (e) { return e.value; }), function (entries) { return o.literalMap(entries.map(function (value, index) { return ({\n                key: literal.entries[index].key,\n                value: value,\n                quoted: literal.entries[index].quoted\n            }); })); });\n        }\n    };\n    ConstantPool.prototype._getLiteralFactory = function (key, values, resultMap) {\n        var _this = this;\n        var literalFactory = this.literalFactories.get(key);\n        var literalFactoryArguments = values.filter((function (e) { return !e.isConstant(); }));\n        if (!literalFactory) {\n            var resultExpressions = values.map(function (e, index) { return e.isConstant() ? _this.getConstLiteral(e, true) : o.variable(\"a\" + index); });\n            var parameters = resultExpressions.filter(isVariable).map(function (e) { return new o.FnParam(e.name, o.DYNAMIC_TYPE); });\n            var pureFunctionDeclaration = o.fn(parameters, [new o.ReturnStatement(resultMap(resultExpressions))], o.INFERRED_TYPE);\n            var name_3 = this.freshName();\n            this.statements.push(o.variable(name_3).set(pureFunctionDeclaration).toDeclStmt(o.INFERRED_TYPE, [\n                o.StmtModifier.Final\n            ]));\n            literalFactory = o.variable(name_3);\n            this.literalFactories.set(key, literalFactory);\n        }\n        return { literalFactory: literalFactory, literalFactoryArguments: literalFactoryArguments };\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    ConstantPool.prototype.uniqueName = function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    ConstantPool.prototype.definitionsOf = function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return this.componentDefinitions;\n            case 1 /* Directive */:\n                return this.directiveDefinitions;\n            case 0 /* Injector */:\n                return this.injectorDefinitions;\n            case 3 /* Pipe */:\n                return this.pipeDefinitions;\n        }\n        error(\"Unknown definition kind \" + kind);\n        return this.componentDefinitions;\n    };\n    ConstantPool.prototype.propertyNameOf = function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return 'ngComponentDef';\n            case 1 /* Directive */:\n                return 'ngDirectiveDef';\n            case 0 /* Injector */:\n                return 'ngInjectorDef';\n            case 3 /* Pipe */:\n                return 'ngPipeDef';\n        }\n        error(\"Unknown definition kind \" + kind);\n        return '<unknown>';\n    };\n    ConstantPool.prototype.freshName = function () { return this.uniqueName(CONSTANT_PREFIX); };\n    ConstantPool.prototype.freshTranslationName = function (suffix) {\n        return this.uniqueName(TRANSLATION_PREFIX + suffix).toUpperCase();\n    };\n    ConstantPool.prototype.keyOf = function (expression) {\n        return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n    };\n    return ConstantPool;\n}());\nexport { ConstantPool };\n/**\n * Visitor used to determine if 2 expressions are equivalent and can be shared in the\n * `ConstantPool`.\n *\n * When the id (string) generated by the visitor is equal, expressions are considered equivalent.\n */\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitWrappedNodeExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    KeyVisitor.prototype.visitLiteralExpr = function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    KeyVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, context); }).join(',') + \"]\";\n    };\n    KeyVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var mapKey = function (entry) {\n            var quote = entry.quoted ? '\"' : '';\n            return \"\" + quote + entry.key + quote;\n        };\n        var mapEntry = function (entry) {\n            return mapKey(entry) + \":\" + entry.value.visitExpression(_this, context);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    KeyVisitor.prototype.visitExternalExpr = function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    KeyVisitor.prototype.visitReadVarExpr = function (node) { return \"VAR:\" + node.name; };\n    KeyVisitor.prototype.visitTypeofExpr = function (node, context) {\n        return \"TYPEOF:\" + node.expr.visitExpression(this, context);\n    };\n    return KeyVisitor;\n}());\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + arg.constructor.name);\n}\nfunction isVariable(e) {\n    return e instanceof o.ReadVarExpr;\n}\n// Converts i18n meta informations for a message (description, meaning) to a JsDoc statement\n// formatted as expected by the Closure compiler.\nfunction i18nMetaToDocStmt(meta) {\n    var tags = [];\n    if (meta.description) {\n        tags.push({ tagName: \"desc\" /* Desc */, text: meta.description });\n    }\n    if (meta.meaning) {\n        tags.push({ tagName: \"meaning\" /* Meaning */, text: meta.meaning });\n    }\n    return tags.length == 0 ? null : new o.JSDocCommentStmt(tags);\n}\n//# sourceMappingURL=constant_pool.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { extractMessages } from './extractor_merger';\nimport * as i18n from './i18n_ast';\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var _a;\n        var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var messages = {};\n        var mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var _a;\n            var id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n        });\n        // Transform placeholder names using the serializer mapping\n        var msgList = Object.keys(messages).map(function (id) {\n            var mapper = serializer.createNameMapper(messages[id]);\n            var src = messages[id];\n            var nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var transformedMessage = new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nexport { MessageBundle };\n// Transform an i18n AST by renaming the placeholder nodes with the given mapper\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    tslib_1.__extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var startName = mapper.toPublicName(ph.startName);\n        var closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n        var children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new i18n.TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new i18n.Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new i18n.IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(i18n.CloneVisitor));\n//# sourceMappingURL=message_bundle.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'factory';\n    Identifiers.TRANSFORM_METHOD = 'transform';\n    Identifiers.PATCH_DEPS = 'patchedDeps';\n    /* Instructions */\n    Identifiers.namespaceHTML = { name: 'ɵnamespaceHTML', moduleName: CORE };\n    Identifiers.namespaceMathML = { name: 'ɵnamespaceMathML', moduleName: CORE };\n    Identifiers.namespaceSVG = { name: 'ɵnamespaceSVG', moduleName: CORE };\n    Identifiers.element = { name: 'ɵelement', moduleName: CORE };\n    Identifiers.elementStart = { name: 'ɵelementStart', moduleName: CORE };\n    Identifiers.elementEnd = { name: 'ɵelementEnd', moduleName: CORE };\n    Identifiers.elementProperty = { name: 'ɵelementProperty', moduleName: CORE };\n    Identifiers.elementAttribute = { name: 'ɵelementAttribute', moduleName: CORE };\n    Identifiers.elementClassProp = { name: 'ɵelementClassProp', moduleName: CORE };\n    Identifiers.elementContainerStart = { name: 'ɵEC', moduleName: CORE };\n    Identifiers.elementContainerEnd = { name: 'ɵeC', moduleName: CORE };\n    Identifiers.elementStyling = { name: 'ɵelementStyling', moduleName: CORE };\n    Identifiers.elementStylingMap = { name: 'ɵelementStylingMap', moduleName: CORE };\n    Identifiers.elementStyleProp = { name: 'ɵelementStylingProp', moduleName: CORE };\n    Identifiers.elementStylingApply = { name: 'ɵelementStylingApply', moduleName: CORE };\n    Identifiers.containerCreate = { name: 'ɵcontainer', moduleName: CORE };\n    Identifiers.nextContext = { name: 'ɵnextContext', moduleName: CORE };\n    Identifiers.templateCreate = { name: 'ɵtemplate', moduleName: CORE };\n    Identifiers.text = { name: 'ɵtext', moduleName: CORE };\n    Identifiers.textBinding = { name: 'ɵtextBinding', moduleName: CORE };\n    Identifiers.bind = { name: 'ɵbind', moduleName: CORE };\n    Identifiers.getCurrentView = { name: 'ɵgetCurrentView', moduleName: CORE };\n    Identifiers.restoreView = { name: 'ɵrestoreView', moduleName: CORE };\n    Identifiers.interpolation1 = { name: 'ɵinterpolation1', moduleName: CORE };\n    Identifiers.interpolation2 = { name: 'ɵinterpolation2', moduleName: CORE };\n    Identifiers.interpolation3 = { name: 'ɵinterpolation3', moduleName: CORE };\n    Identifiers.interpolation4 = { name: 'ɵinterpolation4', moduleName: CORE };\n    Identifiers.interpolation5 = { name: 'ɵinterpolation5', moduleName: CORE };\n    Identifiers.interpolation6 = { name: 'ɵinterpolation6', moduleName: CORE };\n    Identifiers.interpolation7 = { name: 'ɵinterpolation7', moduleName: CORE };\n    Identifiers.interpolation8 = { name: 'ɵinterpolation8', moduleName: CORE };\n    Identifiers.interpolationV = { name: 'ɵinterpolationV', moduleName: CORE };\n    Identifiers.pureFunction0 = { name: 'ɵpureFunction0', moduleName: CORE };\n    Identifiers.pureFunction1 = { name: 'ɵpureFunction1', moduleName: CORE };\n    Identifiers.pureFunction2 = { name: 'ɵpureFunction2', moduleName: CORE };\n    Identifiers.pureFunction3 = { name: 'ɵpureFunction3', moduleName: CORE };\n    Identifiers.pureFunction4 = { name: 'ɵpureFunction4', moduleName: CORE };\n    Identifiers.pureFunction5 = { name: 'ɵpureFunction5', moduleName: CORE };\n    Identifiers.pureFunction6 = { name: 'ɵpureFunction6', moduleName: CORE };\n    Identifiers.pureFunction7 = { name: 'ɵpureFunction7', moduleName: CORE };\n    Identifiers.pureFunction8 = { name: 'ɵpureFunction8', moduleName: CORE };\n    Identifiers.pureFunctionV = { name: 'ɵpureFunctionV', moduleName: CORE };\n    Identifiers.pipeBind1 = { name: 'ɵpipeBind1', moduleName: CORE };\n    Identifiers.pipeBind2 = { name: 'ɵpipeBind2', moduleName: CORE };\n    Identifiers.pipeBind3 = { name: 'ɵpipeBind3', moduleName: CORE };\n    Identifiers.pipeBind4 = { name: 'ɵpipeBind4', moduleName: CORE };\n    Identifiers.pipeBindV = { name: 'ɵpipeBindV', moduleName: CORE };\n    Identifiers.load = { name: 'ɵload', moduleName: CORE };\n    Identifiers.loadDirective = { name: 'ɵloadDirective', moduleName: CORE };\n    Identifiers.loadQueryList = { name: 'ɵloadQueryList', moduleName: CORE };\n    Identifiers.pipe = { name: 'ɵpipe', moduleName: CORE };\n    Identifiers.projection = { name: 'ɵprojection', moduleName: CORE };\n    Identifiers.projectionDef = { name: 'ɵprojectionDef', moduleName: CORE };\n    Identifiers.reference = { name: 'ɵreference', moduleName: CORE };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.injectAttribute = { name: 'ɵinjectAttribute', moduleName: CORE };\n    Identifiers.injectElementRef = { name: 'ɵinjectElementRef', moduleName: CORE };\n    Identifiers.injectTemplateRef = { name: 'ɵinjectTemplateRef', moduleName: CORE };\n    Identifiers.injectViewContainerRef = { name: 'ɵinjectViewContainerRef', moduleName: CORE };\n    Identifiers.injectChangeDetectorRef = { name: 'ɵinjectChangeDetectorRef', moduleName: CORE };\n    Identifiers.injectRenderer2 = { name: 'ɵinjectRenderer2', moduleName: CORE };\n    Identifiers.directiveInject = { name: 'ɵdirectiveInject', moduleName: CORE };\n    Identifiers.templateRefExtractor = { name: 'ɵtemplateRefExtractor', moduleName: CORE };\n    Identifiers.defineBase = { name: 'ɵdefineBase', moduleName: CORE };\n    Identifiers.BaseDef = {\n        name: 'ɵBaseDef',\n        moduleName: CORE,\n    };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE };\n    Identifiers.ComponentDef = {\n        name: 'ɵComponentDef',\n        moduleName: CORE,\n    };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE,\n    };\n    Identifiers.DirectiveDef = {\n        name: 'ɵDirectiveDef',\n        moduleName: CORE,\n    };\n    Identifiers.InjectorDef = {\n        name: 'ɵInjectorDef',\n        moduleName: CORE,\n    };\n    Identifiers.defineInjector = {\n        name: 'defineInjector',\n        moduleName: CORE,\n    };\n    Identifiers.NgModuleDef = {\n        name: 'ɵNgModuleDef',\n        moduleName: CORE,\n    };\n    Identifiers.defineNgModule = { name: 'ɵdefineNgModule', moduleName: CORE };\n    Identifiers.PipeDef = { name: 'ɵPipeDef', moduleName: CORE };\n    Identifiers.definePipe = { name: 'ɵdefinePipe', moduleName: CORE };\n    Identifiers.query = { name: 'ɵquery', moduleName: CORE };\n    Identifiers.queryRefresh = { name: 'ɵqueryRefresh', moduleName: CORE };\n    Identifiers.registerContentQuery = { name: 'ɵregisterContentQuery', moduleName: CORE };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE };\n    Identifiers.InheritDefinitionFeature = { name: 'ɵInheritDefinitionFeature', moduleName: CORE };\n    Identifiers.PublicFeature = { name: 'ɵPublicFeature', moduleName: CORE };\n    Identifiers.listener = { name: 'ɵlistener', moduleName: CORE };\n    Identifiers.getFactoryOf = {\n        name: 'ɵgetFactoryOf',\n        moduleName: CORE,\n    };\n    Identifiers.getInheritedFactory = {\n        name: 'ɵgetInheritedFactory',\n        moduleName: CORE,\n    };\n    // sanitization-related functions\n    Identifiers.sanitizeHtml = { name: 'ɵsanitizeHtml', moduleName: CORE };\n    Identifiers.sanitizeStyle = { name: 'ɵsanitizeStyle', moduleName: CORE };\n    Identifiers.defaultStyleSanitizer = { name: 'ɵdefaultStyleSanitizer', moduleName: CORE };\n    Identifiers.sanitizeResourceUrl = { name: 'ɵsanitizeResourceUrl', moduleName: CORE };\n    Identifiers.sanitizeScript = { name: 'ɵsanitizeScript', moduleName: CORE };\n    Identifiers.sanitizeUrl = { name: 'ɵsanitizeUrl', moduleName: CORE };\n    return Identifiers;\n}());\nexport { Identifiers };\n//# sourceMappingURL=r3_identifiers.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from '../../output/output_ast';\n/** Name of the temporary to use during data binding */\nexport var TEMPORARY_NAME = '_t';\n/** Name of the context parameter passed into a template function */\nexport var CONTEXT_NAME = 'ctx';\n/** Name of the RenderFlag passed into a template function */\nexport var RENDER_FLAGS = 'rf';\n/** The prefix reference variables */\nexport var REFERENCE_PREFIX = '_r';\n/** The name of the implicit context reference */\nexport var IMPLICIT_REFERENCE = '$implicit';\n/** Name of the i18n attributes **/\nexport var I18N_ATTR = 'i18n';\nexport var I18N_ATTR_PREFIX = 'i18n-';\n/** I18n separators for metadata **/\nexport var MEANING_SEPARATOR = '|';\nexport var ID_SEPARATOR = '@@';\n/**\n * Creates an allocator for a temporary variable.\n *\n * A variable declaration is added to the statements the first time the allocator is invoked.\n */\nexport function temporaryAllocator(statements, name) {\n    var temp = null;\n    return function () {\n        if (!temp) {\n            statements.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n            temp = o.variable(name);\n        }\n        return temp;\n    };\n}\nexport function unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is not supported yet\");\n}\nexport function invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + o.constructor.name);\n}\nexport function isI18NAttribute(name) {\n    return name === I18N_ATTR || name.startsWith(I18N_ATTR_PREFIX);\n}\nexport function asLiteral(value) {\n    if (Array.isArray(value)) {\n        return o.literalArr(value.map(asLiteral));\n    }\n    return o.literal(value, o.INFERRED_TYPE);\n}\nexport function conditionallyCreateMapObjectLiteral(keys) {\n    if (Object.getOwnPropertyNames(keys).length > 0) {\n        return mapToExpression(keys);\n    }\n    return null;\n}\nexport function mapToExpression(map, quoted) {\n    if (quoted === void 0) { quoted = false; }\n    return o.literalMap(Object.getOwnPropertyNames(map).map(function (key) { return ({ key: key, quoted: quoted, value: asLiteral(map[key]) }); }));\n}\n/**\n *  Remove trailing null nodes as they are implied.\n */\nexport function trimTrailingNulls(parameters) {\n    while (o.isNull(parameters[parameters.length - 1])) {\n        parameters.pop();\n    }\n    return parameters;\n}\nexport function getQueryPredicate(query, constantPool) {\n    if (Array.isArray(query.predicate)) {\n        return constantPool.getConstLiteral(o.literalArr(query.predicate.map(function (selector) { return o.literal(selector); })));\n    }\n    else {\n        return query.predicate;\n    }\n}\nexport function noop() { }\nvar DefinitionMap = /** @class */ (function () {\n    function DefinitionMap() {\n        this.values = [];\n    }\n    DefinitionMap.prototype.set = function (key, value) {\n        if (value) {\n            this.values.push({ key: key, value: value, quoted: false });\n        }\n    };\n    DefinitionMap.prototype.toLiteralMap = function () { return o.literalMap(this.values); };\n    return DefinitionMap;\n}());\nexport { DefinitionMap };\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport { tokenReference } from '../compile_metadata';\nimport { Identifiers } from '../identifiers';\nimport * as o from '../output/output_ast';\nimport { Identifiers as R3 } from '../render3/r3_identifiers';\nimport { unsupported } from './view/util';\nexport var R3FactoryDelegateType;\n(function (R3FactoryDelegateType) {\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Class\"] = 0] = \"Class\";\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Function\"] = 1] = \"Function\";\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Factory\"] = 2] = \"Factory\";\n})(R3FactoryDelegateType || (R3FactoryDelegateType = {}));\n/**\n * Resolved type of a dependency.\n *\n * Occasionally, dependencies will have special significance which is known statically. In that\n * case the `R3ResolvedDependencyType` informs the factory generator that a particular dependency\n * should be generated specially (usually by calling a special injection function instead of the\n * standard one).\n */\nexport var R3ResolvedDependencyType;\n(function (R3ResolvedDependencyType) {\n    /**\n     * A normal token dependency.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n    /**\n     * The dependency is for an attribute.\n     *\n     * The token expression is a string representing the attribute name.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    /**\n     * The dependency is for the `Injector` type itself.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Injector\"] = 2] = \"Injector\";\n    /**\n     * The dependency is for `ElementRef`.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"ElementRef\"] = 3] = \"ElementRef\";\n    /**\n     * The dependency is for `TemplateRef`.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"TemplateRef\"] = 4] = \"TemplateRef\";\n    /**\n     * The dependency is for `ViewContainerRef`.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"ViewContainerRef\"] = 5] = \"ViewContainerRef\";\n    /**\n     * The dependency is for `ChangeDetectorRef`.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 6] = \"ChangeDetectorRef\";\n    /**\n     * The dependency is for `Renderer2`.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Renderer2\"] = 7] = \"Renderer2\";\n})(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n/**\n * Construct a factory function expression for the given `R3FactoryMetadata`.\n */\nexport function compileFactoryFunction(meta) {\n    var t = o.variable('t');\n    var statements = [];\n    // The type to instantiate via constructor invocation. If there is no delegated factory, meaning\n    // this type is always created by constructor invocation, then this is the type-to-create\n    // parameter provided by the user (t) if specified, or the current type if not. If there is a\n    // delegated factory (which is used to create the current type) then this is only the type-to-\n    // create parameter (t).\n    var typeForCtor = !isDelegatedMetadata(meta) ? new o.BinaryOperatorExpr(o.BinaryOperator.Or, t, meta.type) : t;\n    var ctorExpr = null;\n    if (meta.deps !== null) {\n        // There is a constructor (either explicitly or implicitly defined).\n        ctorExpr = new o.InstantiateExpr(typeForCtor, injectDependencies(meta.deps, meta.injectFn));\n    }\n    else {\n        var baseFactory = o.variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n        var getInheritedFactory = o.importExpr(R3.getInheritedFactory);\n        var baseFactoryStmt = baseFactory.set(getInheritedFactory.callFn([meta.type])).toDeclStmt(o.INFERRED_TYPE, [\n            o.StmtModifier.Exported, o.StmtModifier.Final\n        ]);\n        statements.push(baseFactoryStmt);\n        // There is no constructor, use the base class' factory to construct typeForCtor.\n        ctorExpr = baseFactory.callFn([typeForCtor]);\n    }\n    var ctorExprFinal = ctorExpr;\n    var body = [];\n    var retExpr = null;\n    function makeConditionalFactory(nonCtorExpr) {\n        var r = o.variable('r');\n        body.push(r.set(o.NULL_EXPR).toDeclStmt());\n        body.push(o.ifStmt(t, [r.set(ctorExprFinal).toStmt()], [r.set(nonCtorExpr).toStmt()]));\n        return r;\n    }\n    if (isDelegatedMetadata(meta) && meta.delegateType === R3FactoryDelegateType.Factory) {\n        var delegateFactory = o.variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n        var getFactoryOf = o.importExpr(R3.getFactoryOf);\n        if (meta.delegate.isEquivalent(meta.type)) {\n            throw new Error(\"Illegal state: compiling factory that delegates to itself\");\n        }\n        var delegateFactoryStmt = delegateFactory.set(getFactoryOf.callFn([meta.delegate])).toDeclStmt(o.INFERRED_TYPE, [\n            o.StmtModifier.Exported, o.StmtModifier.Final\n        ]);\n        statements.push(delegateFactoryStmt);\n        var r = makeConditionalFactory(delegateFactory.callFn([]));\n        retExpr = r;\n    }\n    else if (isDelegatedMetadata(meta)) {\n        // This type is created with a delegated factory. If a type parameter is not specified, call\n        // the factory instead.\n        var delegateArgs = injectDependencies(meta.delegateDeps, meta.injectFn);\n        // Either call `new delegate(...)` or `delegate(...)` depending on meta.useNewForDelegate.\n        var factoryExpr = new (meta.delegateType === R3FactoryDelegateType.Class ?\n            o.InstantiateExpr :\n            o.InvokeFunctionExpr)(meta.delegate, delegateArgs);\n        retExpr = makeConditionalFactory(factoryExpr);\n    }\n    else if (isExpressionFactoryMetadata(meta)) {\n        // TODO(alxhub): decide whether to lower the value here or in the caller\n        retExpr = makeConditionalFactory(meta.expression);\n    }\n    else {\n        retExpr = ctorExpr;\n    }\n    return {\n        factory: o.fn([new o.FnParam('t', o.DYNAMIC_TYPE)], body.concat([new o.ReturnStatement(retExpr)]), o.INFERRED_TYPE, undefined, meta.name + \"_Factory\"),\n        statements: statements,\n    };\n}\nfunction injectDependencies(deps, injectFn) {\n    return deps.map(function (dep) { return compileInjectDependency(dep, injectFn); });\n}\nfunction compileInjectDependency(dep, injectFn) {\n    // Interpret the dependency according to its resolved type.\n    switch (dep.resolved) {\n        case R3ResolvedDependencyType.Token:\n        case R3ResolvedDependencyType.Injector: {\n            // Build up the injection flags according to the metadata.\n            var flags = 0 /* Default */ | (dep.self ? 2 /* Self */ : 0) |\n                (dep.skipSelf ? 4 /* SkipSelf */ : 0) | (dep.host ? 1 /* Host */ : 0) |\n                (dep.optional ? 8 /* Optional */ : 0);\n            // Determine the token used for injection. In almost all cases this is the given token, but\n            // if the dependency is resolved to the `Injector` then the special `INJECTOR` token is used\n            // instead.\n            var token = dep.token;\n            if (dep.resolved === R3ResolvedDependencyType.Injector) {\n                token = o.importExpr(Identifiers.INJECTOR);\n            }\n            // Build up the arguments to the injectFn call.\n            var injectArgs = [token];\n            // If this dependency is optional or otherwise has non-default flags, then additional\n            // parameters describing how to inject the dependency must be passed to the inject function\n            // that's being used.\n            if (flags !== 0 /* Default */ || dep.optional) {\n                injectArgs.push(o.literal(flags));\n            }\n            return o.importExpr(injectFn).callFn(injectArgs);\n        }\n        case R3ResolvedDependencyType.Attribute:\n            // In the case of attributes, the attribute name in question is given as the token.\n            return o.importExpr(R3.injectAttribute).callFn([dep.token]);\n        case R3ResolvedDependencyType.ElementRef:\n            return o.importExpr(R3.injectElementRef).callFn([]);\n        case R3ResolvedDependencyType.TemplateRef:\n            return o.importExpr(R3.injectTemplateRef).callFn([]);\n        case R3ResolvedDependencyType.ViewContainerRef:\n            return o.importExpr(R3.injectViewContainerRef).callFn([]);\n        case R3ResolvedDependencyType.ChangeDetectorRef:\n            return o.importExpr(R3.injectChangeDetectorRef).callFn([]);\n        case R3ResolvedDependencyType.Renderer2:\n            return o.importExpr(R3.injectRenderer2).callFn([]);\n        default:\n            return unsupported(\"Unknown R3ResolvedDependencyType: \" + R3ResolvedDependencyType[dep.resolved]);\n    }\n}\n/**\n * A helper function useful for extracting `R3DependencyMetadata` from a Render2\n * `CompileTypeMetadata` instance.\n */\nexport function dependenciesFromGlobalMetadata(type, outputCtx, reflector) {\n    // Use the `CompileReflector` to look up references to some well-known Angular types. These will\n    // be compared with the token to statically determine whether the token has significance to\n    // Angular, and set the correct `R3ResolvedDependencyType` as a result.\n    var elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n    var templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n    var viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n    var injectorRef = reflector.resolveExternalReference(Identifiers.Injector);\n    var renderer2 = reflector.resolveExternalReference(Identifiers.Renderer2);\n    // Iterate through the type's DI dependencies and produce `R3DependencyMetadata` for each of them.\n    var deps = [];\n    for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n        var dependency = _a[_i];\n        if (dependency.token) {\n            var tokenRef = tokenReference(dependency.token);\n            var resolved = R3ResolvedDependencyType.Token;\n            if (tokenRef === elementRef) {\n                resolved = R3ResolvedDependencyType.ElementRef;\n            }\n            else if (tokenRef === templateRef) {\n                resolved = R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (tokenRef === viewContainerRef) {\n                resolved = R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else if (tokenRef === injectorRef) {\n                resolved = R3ResolvedDependencyType.Injector;\n            }\n            else if (tokenRef === renderer2) {\n                resolved = R3ResolvedDependencyType.Renderer2;\n            }\n            else if (dependency.isAttribute) {\n                resolved = R3ResolvedDependencyType.Attribute;\n            }\n            // In the case of most dependencies, the token will be a reference to a type. Sometimes,\n            // however, it can be a string, in the case of older Angular code or @Attribute injection.\n            var token = tokenRef instanceof StaticSymbol ? outputCtx.importExpr(tokenRef) : o.literal(tokenRef);\n            // Construct the dependency.\n            deps.push({\n                token: token,\n                resolved: resolved,\n                host: !!dependency.isHost,\n                optional: !!dependency.isOptional,\n                self: !!dependency.isSelf,\n                skipSelf: !!dependency.isSkipSelf,\n            });\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    return deps;\n}\nfunction isDelegatedMetadata(meta) {\n    return meta.delegateType !== undefined;\n}\nfunction isExpressionFactoryMetadata(meta) {\n    return meta.expression !== undefined;\n}\n//# sourceMappingURL=r3_factory.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport * as o from '../output/output_ast';\n/**\n * Convert an object map with `Expression` values into a `LiteralMapExpr`.\n */\nexport function mapToMapExpression(map) {\n    var result = Object.keys(map).map(function (key) { return ({ key: key, value: map[key], quoted: false }); });\n    return o.literalMap(result);\n}\n/**\n * Convert metadata into an `Expression` in the given `OutputContext`.\n *\n * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.\n */\nexport function convertMetaToOutput(meta, ctx) {\n    if (Array.isArray(meta)) {\n        return o.literalArr(meta.map(function (entry) { return convertMetaToOutput(entry, ctx); }));\n    }\n    if (meta instanceof StaticSymbol) {\n        return ctx.importExpr(meta);\n    }\n    if (meta == null) {\n        return o.literal(meta);\n    }\n    throw new Error(\"Internal error: Unsupported or unknown metadata: \" + meta);\n}\nexport function typeWithParameters(type, numParams) {\n    var params = null;\n    if (numParams > 0) {\n        params = [];\n        for (var i = 0; i < numParams; i++) {\n            params.push(o.DYNAMIC_TYPE);\n        }\n    }\n    return o.expressionType(type, null, params);\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport { mapLiteral } from '../output/map_util';\nimport * as o from '../output/output_ast';\nimport { compileFactoryFunction } from './r3_factory';\nimport { Identifiers as R3 } from './r3_identifiers';\nimport { convertMetaToOutput, mapToMapExpression } from './util';\n/**\n * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.\n */\nexport function compileNgModule(meta) {\n    var moduleType = meta.type, bootstrap = meta.bootstrap, declarations = meta.declarations, imports = meta.imports, exports = meta.exports;\n    var expression = o.importExpr(R3.defineNgModule).callFn([mapToMapExpression({\n            type: moduleType,\n            bootstrap: o.literalArr(bootstrap),\n            declarations: o.literalArr(declarations.map(function (ref) { return ref.value; })),\n            imports: o.literalArr(imports.map(function (ref) { return ref.value; })),\n            exports: o.literalArr(exports.map(function (ref) { return ref.value; })),\n        })]);\n    var type = new o.ExpressionType(o.importExpr(R3.NgModuleDef, [\n        new o.ExpressionType(moduleType), tupleTypeOf(declarations), tupleTypeOf(imports),\n        tupleTypeOf(exports)\n    ]));\n    var additionalStatements = [];\n    return { expression: expression, type: type, additionalStatements: additionalStatements };\n}\nexport function compileInjector(meta) {\n    var result = compileFactoryFunction({\n        name: meta.name,\n        type: meta.type,\n        deps: meta.deps,\n        injectFn: R3.inject,\n    });\n    var expression = o.importExpr(R3.defineInjector).callFn([mapToMapExpression({\n            factory: result.factory,\n            providers: meta.providers,\n            imports: meta.imports,\n        })]);\n    var type = new o.ExpressionType(o.importExpr(R3.InjectorDef, [new o.ExpressionType(meta.type)]));\n    return { expression: expression, type: type, statements: result.statements };\n}\n// TODO(alxhub): integrate this with `compileNgModule`. Currently the two are separate operations.\nexport function compileNgModuleFromRender2(ctx, ngModule, injectableCompiler) {\n    var className = identifierName(ngModule.type);\n    var rawImports = ngModule.rawImports ? [ngModule.rawImports] : [];\n    var rawExports = ngModule.rawExports ? [ngModule.rawExports] : [];\n    var injectorDefArg = mapLiteral({\n        'factory': injectableCompiler.factoryFor({ type: ngModule.type, symbol: ngModule.type.reference }, ctx),\n        'providers': convertMetaToOutput(ngModule.rawProviders, ctx),\n        'imports': convertMetaToOutput(rawImports.concat(rawExports), ctx),\n    });\n    var injectorDef = o.importExpr(R3.defineInjector).callFn([injectorDefArg]);\n    ctx.statements.push(new o.ClassStmt(\n    /* name */ className, \n    /* parent */ null, \n    /* fields */ [new o.ClassField(\n        /* name */ 'ngInjectorDef', \n        /* type */ o.INFERRED_TYPE, \n        /* modifiers */ [o.StmtModifier.Static], \n        /* initializer */ injectorDef)], \n    /* getters */ [], \n    /* constructorMethod */ new o.ClassMethod(null, [], []), \n    /* methods */ []));\n}\nfunction accessExportScope(module) {\n    var selectorScope = new o.ReadPropExpr(module, 'ngModuleDef');\n    return new o.ReadPropExpr(selectorScope, 'exported');\n}\nfunction tupleTypeOf(exp) {\n    var types = exp.map(function (ref) { return o.typeofExpr(ref.type); });\n    return exp.length > 0 ? o.expressionType(o.literalArr(types)) : o.NONE_TYPE;\n}\n//# sourceMappingURL=r3_module_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nexport function mapEntry(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nexport function mapLiteral(obj) {\n    return o.literalMap(Object.keys(obj).map(function (key) { return ({\n        key: key,\n        quoted: false,\n        value: obj[key],\n    }); }));\n}\n//# sourceMappingURL=map_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport { error } from '../util';\nimport { compileFactoryFunction, dependenciesFromGlobalMetadata } from './r3_factory';\nimport { Identifiers as R3 } from './r3_identifiers';\nexport function compilePipeFromMetadata(metadata) {\n    var definitionMapValues = [];\n    // e.g. `name: 'myPipe'`\n    definitionMapValues.push({ key: 'name', value: o.literal(metadata.pipeName), quoted: false });\n    // e.g. `type: MyPipe`\n    definitionMapValues.push({ key: 'type', value: metadata.type, quoted: false });\n    var templateFactory = compileFactoryFunction({\n        name: metadata.name,\n        type: metadata.type,\n        deps: metadata.deps,\n        injectFn: R3.directiveInject,\n    });\n    definitionMapValues.push({ key: 'factory', value: templateFactory.factory, quoted: false });\n    // e.g. `pure: true`\n    definitionMapValues.push({ key: 'pure', value: o.literal(metadata.pure), quoted: false });\n    var expression = o.importExpr(R3.definePipe).callFn([o.literalMap(definitionMapValues)]);\n    var type = new o.ExpressionType(o.importExpr(R3.PipeDef, [\n        new o.ExpressionType(metadata.type),\n        new o.ExpressionType(new o.LiteralExpr(metadata.pipeName)),\n    ]));\n    return { expression: expression, type: type, statements: templateFactory.statements };\n}\n/**\n * Write a pipe definition to the output context.\n */\nexport function compilePipeFromRender2(outputCtx, pipe, reflector) {\n    var definitionMapValues = [];\n    var name = identifierName(pipe.type);\n    if (!name) {\n        return error(\"Cannot resolve the name of \" + pipe.type);\n    }\n    var metadata = {\n        name: name,\n        pipeName: pipe.name,\n        type: outputCtx.importExpr(pipe.type.reference),\n        deps: dependenciesFromGlobalMetadata(pipe.type, outputCtx, reflector),\n        pure: pipe.pure,\n    };\n    var res = compilePipeFromMetadata(metadata);\n    var definitionField = outputCtx.constantPool.propertyNameOf(3 /* Pipe */);\n    outputCtx.statements.push(new o.ClassStmt(\n    /* name */ name, \n    /* parent */ null, \n    /* fields */ [new o.ClassField(\n        /* name */ definitionField, \n        /* type */ o.INFERRED_TYPE, \n        /* modifiers */ [o.StmtModifier.Static], \n        /* initializer */ res.expression)], \n    /* getters */ [], \n    /* constructorMethod */ new o.ClassMethod(null, [], []), \n    /* methods */ []));\n}\n//# sourceMappingURL=r3_pipe_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nexport { Text };\nvar BoundText = /** @class */ (function () {\n    function BoundText(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundText.prototype.visit = function (visitor) { return visitor.visitBoundText(this); };\n    return BoundText;\n}());\nexport { BoundText };\nvar TextAttribute = /** @class */ (function () {\n    function TextAttribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    TextAttribute.prototype.visit = function (visitor) { return visitor.visitTextAttribute(this); };\n    return TextAttribute;\n}());\nexport { TextAttribute };\nvar BoundAttribute = /** @class */ (function () {\n    function BoundAttribute(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundAttribute.fromBoundElementProperty = function (prop) {\n        return new BoundAttribute(prop.name, prop.type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n    };\n    BoundAttribute.prototype.visit = function (visitor) { return visitor.visitBoundAttribute(this); };\n    return BoundAttribute;\n}());\nexport { BoundAttribute };\nvar BoundEvent = /** @class */ (function () {\n    function BoundEvent(name, handler, target, phase, sourceSpan) {\n        this.name = name;\n        this.handler = handler;\n        this.target = target;\n        this.phase = phase;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundEvent.fromParsedEvent = function (event) {\n        var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEvent(event.name, event.handler, target, phase, event.sourceSpan);\n    };\n    BoundEvent.prototype.visit = function (visitor) { return visitor.visitBoundEvent(this); };\n    return BoundEvent;\n}());\nexport { BoundEvent };\nvar Element = /** @class */ (function () {\n    function Element(name, attributes, inputs, outputs, children, references, sourceSpan, startSourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.children = children;\n        this.references = references;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    Element.prototype.visit = function (visitor) { return visitor.visitElement(this); };\n    return Element;\n}());\nexport { Element };\nvar Template = /** @class */ (function () {\n    function Template(attributes, inputs, outputs, children, references, variables, sourceSpan, startSourceSpan, endSourceSpan) {\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.children = children;\n        this.references = references;\n        this.variables = variables;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    Template.prototype.visit = function (visitor) { return visitor.visitTemplate(this); };\n    return Template;\n}());\nexport { Template };\nvar Content = /** @class */ (function () {\n    function Content(selectorIndex, attributes, sourceSpan) {\n        this.selectorIndex = selectorIndex;\n        this.attributes = attributes;\n        this.sourceSpan = sourceSpan;\n    }\n    Content.prototype.visit = function (visitor) { return visitor.visitContent(this); };\n    return Content;\n}());\nexport { Content };\nvar Variable = /** @class */ (function () {\n    function Variable(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Variable.prototype.visit = function (visitor) { return visitor.visitVariable(this); };\n    return Variable;\n}());\nexport { Variable };\nvar Reference = /** @class */ (function () {\n    function Reference(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Reference.prototype.visit = function (visitor) { return visitor.visitReference(this); };\n    return Reference;\n}());\nexport { Reference };\nvar NullVisitor = /** @class */ (function () {\n    function NullVisitor() {\n    }\n    NullVisitor.prototype.visitElement = function (element) { };\n    NullVisitor.prototype.visitTemplate = function (template) { };\n    NullVisitor.prototype.visitContent = function (content) { };\n    NullVisitor.prototype.visitVariable = function (variable) { };\n    NullVisitor.prototype.visitReference = function (reference) { };\n    NullVisitor.prototype.visitTextAttribute = function (attribute) { };\n    NullVisitor.prototype.visitBoundAttribute = function (attribute) { };\n    NullVisitor.prototype.visitBoundEvent = function (attribute) { };\n    NullVisitor.prototype.visitText = function (text) { };\n    NullVisitor.prototype.visitBoundText = function (text) { };\n    return NullVisitor;\n}());\nexport { NullVisitor };\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    RecursiveVisitor.prototype.visitElement = function (element) {\n        visitAll(this, element.attributes);\n        visitAll(this, element.children);\n        visitAll(this, element.references);\n    };\n    RecursiveVisitor.prototype.visitTemplate = function (template) {\n        visitAll(this, template.attributes);\n        visitAll(this, template.children);\n        visitAll(this, template.references);\n        visitAll(this, template.variables);\n    };\n    RecursiveVisitor.prototype.visitContent = function (content) { };\n    RecursiveVisitor.prototype.visitVariable = function (variable) { };\n    RecursiveVisitor.prototype.visitReference = function (reference) { };\n    RecursiveVisitor.prototype.visitTextAttribute = function (attribute) { };\n    RecursiveVisitor.prototype.visitBoundAttribute = function (attribute) { };\n    RecursiveVisitor.prototype.visitBoundEvent = function (attribute) { };\n    RecursiveVisitor.prototype.visitText = function (text) { };\n    RecursiveVisitor.prototype.visitBoundText = function (text) { };\n    return RecursiveVisitor;\n}());\nexport { RecursiveVisitor };\nvar TransformVisitor = /** @class */ (function () {\n    function TransformVisitor() {\n    }\n    TransformVisitor.prototype.visitElement = function (element) {\n        var newAttributes = transformAll(this, element.attributes);\n        var newInputs = transformAll(this, element.inputs);\n        var newOutputs = transformAll(this, element.outputs);\n        var newChildren = transformAll(this, element.children);\n        var newReferences = transformAll(this, element.references);\n        if (newAttributes != element.attributes || newInputs != element.inputs ||\n            newOutputs != element.outputs || newChildren != element.children ||\n            newReferences != element.references) {\n            return new Element(element.name, newAttributes, newInputs, newOutputs, newChildren, newReferences, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return element;\n    };\n    TransformVisitor.prototype.visitTemplate = function (template) {\n        var newAttributes = transformAll(this, template.attributes);\n        var newInputs = transformAll(this, template.inputs);\n        var newOutputs = transformAll(this, template.outputs);\n        var newChildren = transformAll(this, template.children);\n        var newReferences = transformAll(this, template.references);\n        var newVariables = transformAll(this, template.variables);\n        if (newAttributes != template.attributes || newInputs != template.inputs ||\n            newChildren != template.children || newVariables != template.variables ||\n            newReferences != template.references) {\n            return new Template(newAttributes, newInputs, newOutputs, newChildren, newReferences, newVariables, template.sourceSpan, template.startSourceSpan, template.endSourceSpan);\n        }\n        return template;\n    };\n    TransformVisitor.prototype.visitContent = function (content) { return content; };\n    TransformVisitor.prototype.visitVariable = function (variable) { return variable; };\n    TransformVisitor.prototype.visitReference = function (reference) { return reference; };\n    TransformVisitor.prototype.visitTextAttribute = function (attribute) { return attribute; };\n    TransformVisitor.prototype.visitBoundAttribute = function (attribute) { return attribute; };\n    TransformVisitor.prototype.visitBoundEvent = function (attribute) { return attribute; };\n    TransformVisitor.prototype.visitText = function (text) { return text; };\n    TransformVisitor.prototype.visitBoundText = function (text) { return text; };\n    return TransformVisitor;\n}());\nexport { TransformVisitor };\nexport function visitAll(visitor, nodes) {\n    var result = [];\n    if (visitor.visit) {\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            var newNode = visitor.visit(node) || node.visit(visitor);\n        }\n    }\n    else {\n        for (var _a = 0, nodes_2 = nodes; _a < nodes_2.length; _a++) {\n            var node = nodes_2[_a];\n            var newNode = node.visit(visitor);\n            if (newNode) {\n                result.push(newNode);\n            }\n        }\n    }\n    return result;\n}\nexport function transformAll(visitor, nodes) {\n    var result = [];\n    var changed = false;\n    for (var _i = 0, nodes_3 = nodes; _i < nodes_3.length; _i++) {\n        var node = nodes_3[_i];\n        var newNode = node.visit(visitor);\n        if (newNode) {\n            result.push(newNode);\n        }\n        changed = changed || newNode != node;\n    }\n    return changed ? result : nodes;\n}\n//# sourceMappingURL=r3_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from '../ml_parser/ast';\nimport { replaceNgsp } from '../ml_parser/html_whitespaces';\nimport { isNgTemplate } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel } from '../parse_util';\nimport { isStyleUrlResolvable } from '../style_url_resolver';\nimport { PreparsedElementType, preparseElement } from '../template_parser/template_preparser';\nimport { syntaxError } from '../util';\nimport * as t from './r3_ast';\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\nvar TEMPLATE_ATTR_PREFIX = '*';\n// Default selector used by `<ng-content>` if none specified\nvar DEFAULT_CONTENT_SELECTOR = '*';\nexport function htmlAstToRender3Ast(htmlNodes, bindingParser) {\n    var transformer = new HtmlAstToIvyAst(bindingParser);\n    var ivyNodes = html.visitAll(transformer, htmlNodes);\n    // Errors might originate in either the binding parser or the html to ivy transformer\n    var allErrors = bindingParser.errors.concat(transformer.errors);\n    var errors = allErrors.filter(function (e) { return e.level === ParseErrorLevel.ERROR; });\n    if (errors.length > 0) {\n        var errorString = errors.join('\\n');\n        throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n    }\n    return {\n        nodes: ivyNodes,\n        errors: allErrors,\n        ngContentSelectors: transformer.ngContentSelectors,\n        hasNgContent: transformer.hasNgContent,\n    };\n}\nvar HtmlAstToIvyAst = /** @class */ (function () {\n    function HtmlAstToIvyAst(bindingParser) {\n        this.bindingParser = bindingParser;\n        this.errors = [];\n        // Selectors for the `ng-content` tags. Only non `*` selectors are recorded here\n        this.ngContentSelectors = [];\n        // Any `<ng-content>` in the template ?\n        this.hasNgContent = false;\n    }\n    // HTML visitor\n    HtmlAstToIvyAst.prototype.visitElement = function (element) {\n        var _this = this;\n        var preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        // Whether the element is a `<ng-template>`\n        var isTemplateElement = isNgTemplate(element.name);\n        var parsedProperties = [];\n        var boundEvents = [];\n        var variables = [];\n        var references = [];\n        var attributes = [];\n        var templateParsedProperties = [];\n        var templateVariables = [];\n        // Whether the element has any *-attribute\n        var elementHasInlineTemplate = false;\n        for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n            var attribute = _a[_i];\n            var hasBinding = false;\n            var normalizedName = normalizeAttributeName(attribute.name);\n            // `*attr` defines template bindings\n            var isTemplateBinding = false;\n            if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                // *-attributes\n                if (elementHasInlineTemplate) {\n                    this.reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attribute.sourceSpan);\n                }\n                isTemplateBinding = true;\n                elementHasInlineTemplate = true;\n                var templateValue = attribute.value;\n                var templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n                var parsedVariables = [];\n                this.bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attribute.sourceSpan, [], templateParsedProperties, parsedVariables);\n                templateVariables.push.apply(templateVariables, parsedVariables.map(function (v) { return new t.Variable(v.name, v.value, v.sourceSpan); }));\n            }\n            else {\n                // Check for variables, events, property bindings, interpolation\n                hasBinding = this.parseAttribute(isTemplateElement, attribute, [], parsedProperties, boundEvents, variables, references);\n            }\n            if (!hasBinding && !isTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attributes.push(this.visitAttribute(attribute));\n            }\n        }\n        var children = html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children);\n        var parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>`\n            this.hasNgContent = true;\n            if (element.children && !element.children.every(isEmptyTextNode)) {\n                this.reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n            }\n            var selector = preparsedElement.selectAttr;\n            var attributes_1 = element.attrs.map(function (attribute) { return _this.visitAttribute(attribute); });\n            var selectorIndex = selector === DEFAULT_CONTENT_SELECTOR ? 0 : this.ngContentSelectors.push(selector);\n            parsedElement = new t.Content(selectorIndex, attributes_1, element.sourceSpan);\n        }\n        else if (isTemplateElement) {\n            // `<ng-template>`\n            var attrs = this.extractAttributes(element.name, parsedProperties);\n            parsedElement = new t.Template(attributes, attrs.bound, boundEvents, children, references, variables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        else {\n            var attrs = this.extractAttributes(element.name, parsedProperties);\n            parsedElement = new t.Element(element.name, attributes, attrs.bound, boundEvents, children, references, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        if (elementHasInlineTemplate) {\n            var attrs = this.extractAttributes('ng-template', templateParsedProperties);\n            // TODO(pk): test for this case\n            parsedElement = new t.Template(attrs.literal, attrs.bound, [], [parsedElement], [], templateVariables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return parsedElement;\n    };\n    HtmlAstToIvyAst.prototype.visitAttribute = function (attribute) {\n        return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan);\n    };\n    HtmlAstToIvyAst.prototype.visitText = function (text) {\n        var valueNoNgsp = replaceNgsp(text.value);\n        var expr = this.bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n        return expr ? new t.BoundText(expr, text.sourceSpan) : new t.Text(valueNoNgsp, text.sourceSpan);\n    };\n    HtmlAstToIvyAst.prototype.visitComment = function (comment) { return null; };\n    HtmlAstToIvyAst.prototype.visitExpansion = function (expansion) { return null; };\n    HtmlAstToIvyAst.prototype.visitExpansionCase = function (expansionCase) { return null; };\n    // convert view engine `ParsedProperty` to a format suitable for IVY\n    HtmlAstToIvyAst.prototype.extractAttributes = function (elementName, properties) {\n        var _this = this;\n        var bound = [];\n        var literal = [];\n        properties.forEach(function (prop) {\n            if (prop.isLiteral) {\n                literal.push(new t.TextAttribute(prop.name, prop.expression.source || '', prop.sourceSpan));\n            }\n            else {\n                var bep = _this.bindingParser.createBoundElementProperty(elementName, prop);\n                bound.push(t.BoundAttribute.fromBoundElementProperty(bep));\n            }\n        });\n        return { bound: bound, literal: literal };\n    };\n    HtmlAstToIvyAst.prototype.parseAttribute = function (isTemplateElement, attribute, matchableAttributes, parsedProperties, boundEvents, variables, references) {\n        var name = normalizeAttributeName(attribute.name);\n        var value = attribute.value;\n        var srcSpan = attribute.sourceSpan;\n        var bindParts = name.match(BIND_NAME_REGEXP);\n        var hasBinding = false;\n        if (bindParts) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var identifier = bindParts[IDENT_KW_IDX];\n                    this.parseVariable(identifier, value, srcSpan, variables);\n                }\n                else {\n                    this.reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var identifier = bindParts[IDENT_KW_IDX];\n                this.parseReference(identifier, value, srcSpan, references);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                var events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this.bindingParser.parseLiteralAttr(name, value, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                var events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this.bindingParser.parsePropertyInterpolation(name, value, srcSpan, matchableAttributes, parsedProperties);\n        }\n        return hasBinding;\n    };\n    HtmlAstToIvyAst.prototype.parseVariable = function (identifier, value, sourceSpan, variables) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        variables.push(new t.Variable(identifier, value, sourceSpan));\n    };\n    HtmlAstToIvyAst.prototype.parseReference = function (identifier, value, sourceSpan, references) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        references.push(new t.Reference(identifier, value, sourceSpan));\n    };\n    HtmlAstToIvyAst.prototype.parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, boundEvents) {\n        var events = [];\n        this.bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, events);\n        addEvents(events, boundEvents);\n    };\n    HtmlAstToIvyAst.prototype.reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    };\n    return HtmlAstToIvyAst;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    NonBindableVisitor.prototype.visitElement = function (ast) {\n        var preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var children = html.visitAll(this, ast.children, null);\n        return new t.Element(ast.name, html.visitAll(this, ast.attrs), \n        /* inputs */ [], /* outputs */ [], children, /* references */ [], ast.sourceSpan, ast.startSourceSpan, ast.endSourceSpan);\n    };\n    NonBindableVisitor.prototype.visitComment = function (comment) { return null; };\n    NonBindableVisitor.prototype.visitAttribute = function (attribute) {\n        return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitText = function (text) { return new t.Text(text.value, text.sourceSpan); };\n    NonBindableVisitor.prototype.visitExpansion = function (expansion) { return null; };\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase) { return null; };\n    return NonBindableVisitor;\n}());\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\nfunction normalizeAttributeName(attrName) {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n}\nfunction addEvents(events, boundEvents) {\n    boundEvents.push.apply(boundEvents, events.map(function (e) { return t.BoundEvent.fromParsedEvent(e); }));\n}\nfunction isEmptyTextNode(node) {\n    return node instanceof html.Text && node.value.trim().length == 0;\n}\n//# sourceMappingURL=r3_template_transform.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses string representation of a style and converts it into object literal.\n *\n * @param value string representation of style as used in the `style` attribute in HTML.\n *   Example: `color: red; height: auto`.\n * @returns an object literal. `{ color: 'red', height: 'auto'}`.\n */\nexport function parseStyle(value) {\n    var styles = {};\n    var i = 0;\n    var parenDepth = 0;\n    var quote = 0 /* QuoteNone */;\n    var valueStart = 0;\n    var propStart = 0;\n    var currentProp = null;\n    var valueHasQuotes = false;\n    while (i < value.length) {\n        var token = value.charCodeAt(i++);\n        switch (token) {\n            case 40 /* OpenParen */:\n                parenDepth++;\n                break;\n            case 41 /* CloseParen */:\n                parenDepth--;\n                break;\n            case 39 /* QuoteSingle */:\n                // valueStart needs to be there since prop values don't\n                // have quotes in CSS\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 39 /* QuoteSingle */;\n                }\n                else if (quote === 39 /* QuoteSingle */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 34 /* QuoteDouble */:\n                // same logic as above\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 34 /* QuoteDouble */;\n                }\n                else if (quote === 34 /* QuoteDouble */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 58 /* Colon */:\n                if (!currentProp && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    currentProp = hyphenate(value.substring(propStart, i - 1).trim());\n                    valueStart = i;\n                }\n                break;\n            case 59 /* Semicolon */:\n                if (currentProp && valueStart > 0 && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    var styleVal = value.substring(valueStart, i - 1).trim();\n                    styles[currentProp] = valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal;\n                    propStart = i;\n                    valueStart = 0;\n                    currentProp = null;\n                    valueHasQuotes = false;\n                }\n                break;\n        }\n    }\n    if (currentProp && valueStart) {\n        var styleVal = value.substr(valueStart).trim();\n        styles[currentProp] = valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal;\n    }\n    return styles;\n}\nexport function stripUnnecessaryQuotes(value) {\n    var qS = value.charCodeAt(0);\n    var qE = value.charCodeAt(value.length - 1);\n    if (qS == qE && (qS == 39 /* QuoteSingle */ || qS == 34 /* QuoteDouble */)) {\n        var tempValue = value.substring(1, value.length - 1);\n        // special case to avoid using a multi-quoted string that was just chomped\n        // (e.g. `font-family: \"Verdana\", \"sans-serif\"`)\n        if (tempValue.indexOf('\\'') == -1 && tempValue.indexOf('\"') == -1) {\n            value = tempValue;\n        }\n    }\n    return value;\n}\nexport function hyphenate(value) {\n    return value.replace(/[a-z][A-Z]/g, function (v) {\n        return v.charAt(0) + '-' + v.charAt(1);\n    }).toLowerCase();\n}\n//# sourceMappingURL=styling.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { flatten, sanitizeIdentifier } from '../../compile_metadata';\nimport { BindingForm, BuiltinFunctionCall, convertActionBinding, convertPropertyBinding } from '../../compiler_util/expression_converter';\nimport * as core from '../../core';\nimport { AstMemoryEfficientTransformer, FunctionCall, ImplicitReceiver, Interpolation, LiteralArray, LiteralPrimitive, PropertyRead } from '../../expression_parser/ast';\nimport { Lexer } from '../../expression_parser/lexer';\nimport { Parser } from '../../expression_parser/parser';\nimport * as html from '../../ml_parser/ast';\nimport { HtmlParser } from '../../ml_parser/html_parser';\nimport { WhitespaceVisitor } from '../../ml_parser/html_whitespaces';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../../ml_parser/interpolation_config';\nimport { isNgContainer as checkIsNgContainer, splitNsName } from '../../ml_parser/tags';\nimport * as o from '../../output/output_ast';\nimport { DomElementSchemaRegistry } from '../../schema/dom_element_schema_registry';\nimport { CssSelector } from '../../selector';\nimport { BindingParser } from '../../template_parser/binding_parser';\nimport { error } from '../../util';\nimport * as t from '../r3_ast';\nimport { Identifiers as R3 } from '../r3_identifiers';\nimport { htmlAstToRender3Ast } from '../r3_template_transform';\nimport { parseStyle } from './styling';\nimport { CONTEXT_NAME, I18N_ATTR, I18N_ATTR_PREFIX, ID_SEPARATOR, IMPLICIT_REFERENCE, MEANING_SEPARATOR, REFERENCE_PREFIX, RENDER_FLAGS, asLiteral, invalid, isI18NAttribute, mapToExpression, trimTrailingNulls, unsupported } from './util';\nfunction mapBindingToInstruction(type) {\n    switch (type) {\n        case 0 /* Property */:\n            return R3.elementProperty;\n        case 1 /* Attribute */:\n            return R3.elementAttribute;\n        case 2 /* Class */:\n            return R3.elementClassProp;\n        default:\n            return undefined;\n    }\n}\n//  if (rf & flags) { .. }\nexport function renderFlagCheckIfStmt(flags, statements) {\n    return o.ifStmt(o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(flags), null, false), statements);\n}\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(constantPool, parentBindingScope, level, contextName, templateName, viewQueries, directiveMatcher, directives, pipeTypeByName, pipes, _namespace, relativeContextFilePath) {\n        if (level === void 0) { level = 0; }\n        var _this = this;\n        this.constantPool = constantPool;\n        this.level = level;\n        this.contextName = contextName;\n        this.templateName = templateName;\n        this.viewQueries = viewQueries;\n        this.directiveMatcher = directiveMatcher;\n        this.directives = directives;\n        this.pipeTypeByName = pipeTypeByName;\n        this.pipes = pipes;\n        this._namespace = _namespace;\n        this.relativeContextFilePath = relativeContextFilePath;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._prefixCode = [];\n        /**\n         * List of callbacks to generate creation mode instructions. We store them here as we process\n         * the template so bindings in listeners are resolved only once all nodes have been visited.\n         * This ensures all local refs and context variables are available for matching.\n         */\n        this._creationCodeFns = [];\n        /**\n         * List of callbacks to generate update mode instructions. We store them here as we process\n         * the template so bindings are resolved only once all nodes have been visited. This ensures\n         * all local refs and context variables are available for matching.\n         */\n        this._updateCodeFns = [];\n        /** Temporary variable declarations generated from visiting pipes, literals, etc. */\n        this._tempVariables = [];\n        /**\n         * List of callbacks to build nested templates. Nested templates must not be visited until\n         * after the parent template has finished visiting all of its nodes. This ensures that all\n         * local ref bindings in nested templates are able to find local ref values if the refs\n         * are defined after the template declaration.\n         */\n        this._nestedTemplateFns = [];\n        this._unsupported = unsupported;\n        // Whether we are inside a translatable element (`<p i18n>... somewhere here ... </p>)\n        this._inI18nSection = false;\n        this._i18nSectionIndex = -1;\n        // Maps of placeholder to node indexes for each of the i18n section\n        this._phToNodeIdxes = [{}];\n        // Number of slots to reserve for pureFunctions\n        this._pureFunctionSlots = 0;\n        // Number of binding slots\n        this._bindingSlots = 0;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid;\n        this.visitVariable = invalid;\n        this.visitTextAttribute = invalid;\n        this.visitBoundAttribute = invalid;\n        this.visitBoundEvent = invalid;\n        // view queries can take up space in data and allocation happens earlier (in the \"viewQuery\"\n        // function)\n        this._dataIndex = viewQueries.length;\n        this._bindingScope = parentBindingScope.nestedScope(level);\n        // Turn the relative context file path into an identifier by replacing non-alphanumeric\n        // characters with underscores.\n        this.fileBasedI18nSuffix = relativeContextFilePath.replace(/[^A-Za-z0-9]/g, '_') + '_';\n        this._valueConverter = new ValueConverter(constantPool, function () { return _this.allocateDataSlot(); }, function (numSlots) { return _this.allocatePureFunctionSlots(numSlots); }, function (name, localName, slot, value) {\n            var pipeType = pipeTypeByName.get(name);\n            if (pipeType) {\n                _this.pipes.add(pipeType);\n            }\n            _this._bindingScope.set(_this.level, localName, value);\n            _this.creationInstruction(null, R3.pipe, [o.literal(slot), o.literal(name)]);\n        });\n    }\n    TemplateDefinitionBuilder.prototype.registerContextVariables = function (variable) {\n        var scopedName = this._bindingScope.freshReferenceName();\n        var retrievalLevel = this.level;\n        var lhs = o.variable(variable.name + scopedName);\n        this._bindingScope.set(retrievalLevel, variable.name, lhs, 1 /* CONTEXT */, function (scope, relativeLevel) {\n            var rhs;\n            if (scope.bindingLevel === retrievalLevel) {\n                // e.g. ctx\n                rhs = o.variable(CONTEXT_NAME);\n            }\n            else {\n                var sharedCtxVar = scope.getSharedContextName(retrievalLevel);\n                // e.g. ctx_r0   OR  x(2);\n                rhs = sharedCtxVar ? sharedCtxVar : generateNextContextExpr(relativeLevel);\n            }\n            // e.g. const $item$ = x(2).$implicit;\n            return [lhs.set(rhs.prop(variable.value || IMPLICIT_REFERENCE)).toConstDecl()];\n        });\n    };\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = function (nodes, variables, hasNgContent, ngContentSelectors) {\n        var _this = this;\n        if (hasNgContent === void 0) { hasNgContent = false; }\n        if (ngContentSelectors === void 0) { ngContentSelectors = []; }\n        if (this._namespace !== R3.namespaceHTML) {\n            this.creationInstruction(null, this._namespace);\n        }\n        // Create variable bindings\n        variables.forEach(function (v) { return _this.registerContextVariables(v); });\n        // Output a `ProjectionDef` instruction when some `<ng-content>` are present\n        if (hasNgContent) {\n            var parameters = [];\n            // Only selectors with a non-default value are generated\n            if (ngContentSelectors.length > 1) {\n                var r3Selectors = ngContentSelectors.map(function (s) { return core.parseSelectorToR3Selector(s); });\n                // `projectionDef` needs both the parsed and raw value of the selectors\n                var parsed = this.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n                var unParsed = this.constantPool.getConstLiteral(asLiteral(ngContentSelectors), true);\n                parameters.push(parsed, unParsed);\n            }\n            this.creationInstruction(null, R3.projectionDef, parameters);\n        }\n        // This is the initial pass through the nodes of this template. In this pass, we\n        // queue all creation mode and update mode instructions for generation in the second\n        // pass. It's necessary to separate the passes to ensure local refs are defined before\n        // resolving bindings. We also count bindings in this pass as we walk bound expressions.\n        t.visitAll(this, nodes);\n        // Add total binding count to pure function count so pure function instructions are\n        // generated with the correct slot offset when update instructions are processed.\n        this._pureFunctionSlots += this._bindingSlots;\n        // Pipes are walked in the first pass (to enqueue `pipe()` creation instructions and\n        // `pipeBind` update instructions), so we have to update the slot offsets manually\n        // to account for bindings.\n        this._valueConverter.updatePipeSlotOffsets(this._bindingSlots);\n        // Nested templates must be processed before creation instructions so template()\n        // instructions can be generated with the correct internal const count.\n        this._nestedTemplateFns.forEach(function (buildTemplateFn) { return buildTemplateFn(); });\n        // Generate all the creation mode instructions (e.g. resolve bindings in listeners)\n        var creationStatements = this._creationCodeFns.map(function (fn) { return fn(); });\n        // Generate all the update mode instructions (e.g. resolve property or text bindings)\n        var updateStatements = this._updateCodeFns.map(function (fn) { return fn(); });\n        //  Variable declaration must occur after binding resolution so we can generate context\n        //  instructions that build on each other. e.g. const b = x().$implicit(); const b = x();\n        var creationVariables = this._bindingScope.viewSnapshotStatements();\n        var updateVariables = this._bindingScope.variableDeclarations().concat(this._tempVariables);\n        var creationBlock = creationStatements.length > 0 ?\n            [renderFlagCheckIfStmt(1 /* Create */, creationVariables.concat(creationStatements))] :\n            [];\n        var updateBlock = updateStatements.length > 0 ?\n            [renderFlagCheckIfStmt(2 /* Update */, updateVariables.concat(updateStatements))] :\n            [];\n        // Generate maps of placeholder name to node indexes\n        // TODO(vicb): This is a WIP, not fully supported yet\n        for (var _i = 0, _a = this._phToNodeIdxes; _i < _a.length; _i++) {\n            var phToNodeIdx = _a[_i];\n            if (Object.keys(phToNodeIdx).length > 0) {\n                var scopedName = this._bindingScope.freshReferenceName();\n                var phMap = o.variable(scopedName).set(mapToExpression(phToNodeIdx, true)).toConstDecl();\n                this._prefixCode.push(phMap);\n            }\n        }\n        return o.fn(\n        // i.e. (rf: RenderFlags, ctx: any)\n        [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)], this._prefixCode.concat(creationBlock, updateBlock), o.INFERRED_TYPE, null, this.templateName);\n    };\n    // LocalResolver\n    TemplateDefinitionBuilder.prototype.getLocal = function (name) { return this._bindingScope.get(name); };\n    TemplateDefinitionBuilder.prototype.visitContent = function (ngContent) {\n        var slot = this.allocateDataSlot();\n        var selectorIndex = ngContent.selectorIndex;\n        var parameters = [o.literal(slot)];\n        var attributeAsList = [];\n        ngContent.attributes.forEach(function (attribute) {\n            var name = attribute.name;\n            if (name !== 'select') {\n                attributeAsList.push(name, attribute.value);\n            }\n        });\n        if (attributeAsList.length > 0) {\n            parameters.push(o.literal(selectorIndex), asLiteral(attributeAsList));\n        }\n        else if (selectorIndex !== 0) {\n            parameters.push(o.literal(selectorIndex));\n        }\n        this.creationInstruction(ngContent.sourceSpan, R3.projection, parameters);\n    };\n    TemplateDefinitionBuilder.prototype.getNamespaceInstruction = function (namespaceKey) {\n        switch (namespaceKey) {\n            case 'math':\n                return R3.namespaceMathML;\n            case 'svg':\n                return R3.namespaceSVG;\n            default:\n                return R3.namespaceHTML;\n        }\n    };\n    TemplateDefinitionBuilder.prototype.addNamespaceInstruction = function (nsInstruction, element) {\n        this._namespace = nsInstruction;\n        this.creationInstruction(element.sourceSpan, nsInstruction);\n    };\n    TemplateDefinitionBuilder.prototype.visitElement = function (element) {\n        var _this = this;\n        var elementIndex = this.allocateDataSlot();\n        var wasInI18nSection = this._inI18nSection;\n        var outputAttrs = {};\n        var attrI18nMetas = {};\n        var i18nMeta = '';\n        var _a = splitNsName(element.name), namespaceKey = _a[0], elementName = _a[1];\n        var isNgContainer = checkIsNgContainer(element.name);\n        // Elements inside i18n sections are replaced with placeholders\n        // TODO(vicb): nested elements are a WIP in this phase\n        if (this._inI18nSection) {\n            var phName = element.name.toLowerCase();\n            if (!this._phToNodeIdxes[this._i18nSectionIndex][phName]) {\n                this._phToNodeIdxes[this._i18nSectionIndex][phName] = [];\n            }\n            this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);\n        }\n        // Handle i18n attributes\n        for (var _i = 0, _b = element.attributes; _i < _b.length; _i++) {\n            var attr = _b[_i];\n            var name_1 = attr.name;\n            var value = attr.value;\n            if (name_1 === I18N_ATTR) {\n                if (this._inI18nSection) {\n                    throw new Error(\"Could not mark an element as translatable inside of a translatable section\");\n                }\n                this._inI18nSection = true;\n                this._i18nSectionIndex++;\n                this._phToNodeIdxes[this._i18nSectionIndex] = {};\n                i18nMeta = value;\n            }\n            else if (name_1.startsWith(I18N_ATTR_PREFIX)) {\n                attrI18nMetas[name_1.slice(I18N_ATTR_PREFIX.length)] = value;\n            }\n            else {\n                outputAttrs[name_1] = value;\n            }\n        }\n        // Match directives on non i18n attributes\n        this.matchDirectives(element.name, element);\n        // Regular element or ng-container creation mode\n        var parameters = [o.literal(elementIndex)];\n        if (!isNgContainer) {\n            parameters.push(o.literal(elementName));\n        }\n        // Add the attributes\n        var attributes = [];\n        var initialStyleDeclarations = [];\n        var initialClassDeclarations = [];\n        var styleInputs = [];\n        var classInputs = [];\n        var allOtherInputs = [];\n        element.inputs.forEach(function (input) {\n            switch (input.type) {\n                // [attr.style] or [attr.class] should not be treated as styling-based\n                // bindings since they are intended to be written directly to the attr\n                // and therefore will skip all style/class resolution that is present\n                // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n                // [class.prop]=\"\". [class]=\"\" assignments\n                case 0 /* Property */:\n                    if (input.name == 'style') {\n                        // this should always go first in the compilation (for [style])\n                        styleInputs.splice(0, 0, input);\n                    }\n                    else if (isClassBinding(input)) {\n                        // this should always go first in the compilation (for [class])\n                        classInputs.splice(0, 0, input);\n                    }\n                    else {\n                        allOtherInputs.push(input);\n                    }\n                    break;\n                case 3 /* Style */:\n                    styleInputs.push(input);\n                    break;\n                case 2 /* Class */:\n                    classInputs.push(input);\n                    break;\n                default:\n                    allOtherInputs.push(input);\n                    break;\n            }\n        });\n        var currStyleIndex = 0;\n        var currClassIndex = 0;\n        var staticStylesMap = null;\n        var staticClassesMap = null;\n        var stylesIndexMap = {};\n        var classesIndexMap = {};\n        Object.getOwnPropertyNames(outputAttrs).forEach(function (name) {\n            var value = outputAttrs[name];\n            if (name == 'style') {\n                staticStylesMap = parseStyle(value);\n                Object.keys(staticStylesMap).forEach(function (prop) { stylesIndexMap[prop] = currStyleIndex++; });\n            }\n            else if (name == 'class') {\n                staticClassesMap = {};\n                value.split(/\\s+/g).forEach(function (className) {\n                    classesIndexMap[className] = currClassIndex++;\n                    staticClassesMap[className] = true;\n                });\n            }\n            else {\n                attributes.push(o.literal(name));\n                if (attrI18nMetas.hasOwnProperty(name)) {\n                    var meta = parseI18nMeta(attrI18nMetas[name]);\n                    var variable = _this.constantPool.getTranslation(value, meta, _this.fileBasedI18nSuffix);\n                    attributes.push(variable);\n                }\n                else {\n                    attributes.push(o.literal(value));\n                }\n            }\n        });\n        var hasMapBasedStyling = false;\n        for (var i = 0; i < styleInputs.length; i++) {\n            var input = styleInputs[i];\n            var isMapBasedStyleBinding = i === 0 && input.name === 'style';\n            if (isMapBasedStyleBinding) {\n                hasMapBasedStyling = true;\n            }\n            else if (!stylesIndexMap.hasOwnProperty(input.name)) {\n                stylesIndexMap[input.name] = currStyleIndex++;\n            }\n        }\n        for (var i = 0; i < classInputs.length; i++) {\n            var input = classInputs[i];\n            var isMapBasedClassBinding = i === 0 && isClassBinding(input);\n            if (!isMapBasedClassBinding && !stylesIndexMap.hasOwnProperty(input.name)) {\n                classesIndexMap[input.name] = currClassIndex++;\n            }\n        }\n        // in the event that a [style] binding is used then sanitization will\n        // always be imported because it is not possible to know ahead of time\n        // whether style bindings will use or not use any sanitizable properties\n        // that isStyleSanitizable() will detect\n        var useDefaultStyleSanitizer = hasMapBasedStyling;\n        // this will build the instructions so that they fall into the following syntax\n        // => [prop1, prop2, prop3, 0, prop1, value1, prop2, value2]\n        Object.keys(stylesIndexMap).forEach(function (prop) {\n            useDefaultStyleSanitizer = useDefaultStyleSanitizer || isStyleSanitizable(prop);\n            initialStyleDeclarations.push(o.literal(prop));\n        });\n        if (staticStylesMap) {\n            initialStyleDeclarations.push(o.literal(1 /* VALUES_MODE */));\n            Object.keys(staticStylesMap).forEach(function (prop) {\n                initialStyleDeclarations.push(o.literal(prop));\n                var value = staticStylesMap[prop];\n                initialStyleDeclarations.push(o.literal(value));\n            });\n        }\n        Object.keys(classesIndexMap).forEach(function (prop) {\n            initialClassDeclarations.push(o.literal(prop));\n        });\n        if (staticClassesMap) {\n            initialClassDeclarations.push(o.literal(1 /* VALUES_MODE */));\n            Object.keys(staticClassesMap).forEach(function (className) {\n                initialClassDeclarations.push(o.literal(className));\n                initialClassDeclarations.push(o.literal(true));\n            });\n        }\n        var hasStylingInstructions = initialStyleDeclarations.length || styleInputs.length ||\n            initialClassDeclarations.length || classInputs.length;\n        // add attributes for directive matching purposes\n        attributes.push.apply(attributes, this.prepareSelectOnlyAttrs(allOtherInputs, element.outputs));\n        parameters.push(this.toAttrsParam(attributes));\n        // local refs (ex.: <div #foo #bar=\"baz\">)\n        parameters.push(this.prepareRefsParameter(element.references));\n        var wasInNamespace = this._namespace;\n        var currentNamespace = this.getNamespaceInstruction(namespaceKey);\n        // If the namespace is changing now, include an instruction to change it\n        // during element creation.\n        if (currentNamespace !== wasInNamespace) {\n            this.addNamespaceInstruction(currentNamespace, element);\n        }\n        var implicit = o.variable(CONTEXT_NAME);\n        var createSelfClosingInstruction = !hasStylingInstructions && !isNgContainer &&\n            element.children.length === 0 && element.outputs.length === 0;\n        if (createSelfClosingInstruction) {\n            this.creationInstruction(element.sourceSpan, R3.element, trimTrailingNulls(parameters));\n        }\n        else {\n            this.creationInstruction(element.sourceSpan, isNgContainer ? R3.elementContainerStart : R3.elementStart, trimTrailingNulls(parameters));\n            // initial styling for static style=\"...\" attributes\n            if (hasStylingInstructions) {\n                var paramsList = [];\n                if (initialClassDeclarations.length) {\n                    // the template compiler handles initial class styling (e.g. class=\"foo\") values\n                    // in a special command called `elementClass` so that the initial class\n                    // can be processed during runtime. These initial class values are bound to\n                    // a constant because the inital class values do not change (since they're static).\n                    paramsList.push(this.constantPool.getConstLiteral(o.literalArr(initialClassDeclarations), true));\n                }\n                else if (initialStyleDeclarations.length || useDefaultStyleSanitizer) {\n                    // no point in having an extra `null` value unless there are follow-up params\n                    paramsList.push(o.NULL_EXPR);\n                }\n                if (initialStyleDeclarations.length) {\n                    // the template compiler handles initial style (e.g. style=\"foo\") values\n                    // in a special command called `elementStyle` so that the initial styles\n                    // can be processed during runtime. These initial styles values are bound to\n                    // a constant because the inital style values do not change (since they're static).\n                    paramsList.push(this.constantPool.getConstLiteral(o.literalArr(initialStyleDeclarations), true));\n                }\n                else if (useDefaultStyleSanitizer) {\n                    // no point in having an extra `null` value unless there are follow-up params\n                    paramsList.push(o.NULL_EXPR);\n                }\n                if (useDefaultStyleSanitizer) {\n                    paramsList.push(o.importExpr(R3.defaultStyleSanitizer));\n                }\n                this.creationInstruction(null, R3.elementStyling, paramsList);\n            }\n            // Generate Listeners (outputs)\n            element.outputs.forEach(function (outputAst) {\n                _this.creationInstruction(outputAst.sourceSpan, R3.listener, _this.prepareListenerParameter(element.name, outputAst));\n            });\n        }\n        if ((styleInputs.length || classInputs.length) && hasStylingInstructions) {\n            var indexLiteral_1 = o.literal(elementIndex);\n            var firstStyle = styleInputs[0];\n            var mapBasedStyleInput = firstStyle && firstStyle.name == 'style' ? firstStyle : null;\n            var firstClass = classInputs[0];\n            var mapBasedClassInput = firstClass && isClassBinding(firstClass) ? firstClass : null;\n            var stylingInput = mapBasedStyleInput || mapBasedClassInput;\n            if (stylingInput) {\n                var params_1 = [];\n                var value_1;\n                if (mapBasedClassInput) {\n                    value_1 = mapBasedClassInput.value.visit(this._valueConverter);\n                }\n                else if (mapBasedStyleInput) {\n                    params_1.push(o.NULL_EXPR);\n                }\n                if (mapBasedStyleInput) {\n                    value_1 = mapBasedStyleInput.value.visit(this._valueConverter);\n                }\n                this.updateInstruction(stylingInput.sourceSpan, R3.elementStylingMap, function () {\n                    params_1.push(_this.convertPropertyBinding(implicit, value_1, true));\n                    return [indexLiteral_1].concat(params_1);\n                });\n            }\n            var lastInputCommand = null;\n            if (styleInputs.length) {\n                var i = mapBasedStyleInput ? 1 : 0;\n                var _loop_1 = function () {\n                    var input = styleInputs[i];\n                    var params = [];\n                    var sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                    if (sanitizationRef)\n                        params.push(sanitizationRef);\n                    var key = input.name;\n                    var styleIndex = stylesIndexMap[key];\n                    var value = input.value.visit(this_1._valueConverter);\n                    this_1.updateInstruction(input.sourceSpan, R3.elementStyleProp, function () {\n                        return [\n                            indexLiteral_1, o.literal(styleIndex),\n                            _this.convertPropertyBinding(implicit, value, true)\n                        ].concat(params);\n                    });\n                };\n                var this_1 = this;\n                for (i; i < styleInputs.length; i++) {\n                    _loop_1();\n                }\n                lastInputCommand = styleInputs[styleInputs.length - 1];\n            }\n            if (classInputs.length) {\n                var i = mapBasedClassInput ? 1 : 0;\n                var _loop_2 = function () {\n                    var input = classInputs[i];\n                    var params = [];\n                    var sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                    if (sanitizationRef)\n                        params.push(sanitizationRef);\n                    var key = input.name;\n                    var classIndex = classesIndexMap[key];\n                    var value = input.value.visit(this_2._valueConverter);\n                    this_2.updateInstruction(input.sourceSpan, R3.elementClassProp, function () {\n                        return [\n                            indexLiteral_1, o.literal(classIndex),\n                            _this.convertPropertyBinding(implicit, value, true)\n                        ].concat(params);\n                    });\n                };\n                var this_2 = this;\n                for (i; i < classInputs.length; i++) {\n                    _loop_2();\n                }\n                lastInputCommand = classInputs[classInputs.length - 1];\n            }\n            this.updateInstruction(lastInputCommand.sourceSpan, R3.elementStylingApply, [indexLiteral_1]);\n        }\n        // Generate element input bindings\n        allOtherInputs.forEach(function (input) {\n            if (input.type === 4 /* Animation */) {\n                console.error('warning: animation bindings not yet supported');\n                return;\n            }\n            var instruction = mapBindingToInstruction(input.type);\n            if (instruction) {\n                var params_2 = [];\n                var sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                if (sanitizationRef)\n                    params_2.push(sanitizationRef);\n                // TODO(chuckj): runtime: security context?\n                var value_2 = input.value.visit(_this._valueConverter);\n                _this.allocateBindingSlots(value_2);\n                _this.updateInstruction(input.sourceSpan, instruction, function () {\n                    return [\n                        o.literal(elementIndex), o.literal(input.name),\n                        _this.convertPropertyBinding(implicit, value_2)\n                    ].concat(params_2);\n                });\n            }\n            else {\n                _this._unsupported(\"binding type \" + input.type);\n            }\n        });\n        // Traverse element child nodes\n        if (this._inI18nSection && element.children.length == 1 &&\n            element.children[0] instanceof t.Text) {\n            var text = element.children[0];\n            this.visitSingleI18nTextChild(text, i18nMeta);\n        }\n        else {\n            t.visitAll(this, element.children);\n        }\n        if (!createSelfClosingInstruction) {\n            // Finish element construction mode.\n            this.creationInstruction(element.endSourceSpan || element.sourceSpan, isNgContainer ? R3.elementContainerEnd : R3.elementEnd);\n        }\n        // Restore the state before exiting this node\n        this._inI18nSection = wasInI18nSection;\n    };\n    TemplateDefinitionBuilder.prototype.visitTemplate = function (template) {\n        var _this = this;\n        var templateIndex = this.allocateDataSlot();\n        var elName = '';\n        if (template.children.length === 1 && template.children[0] instanceof t.Element) {\n            // When the template as a single child, derive the context name from the tag\n            elName = sanitizeIdentifier(template.children[0].name);\n        }\n        var contextName = elName ? this.contextName + \"_\" + elName : '';\n        var templateName = contextName ? contextName + \"_Template_\" + templateIndex : \"Template_\" + templateIndex;\n        var parameters = [\n            o.literal(templateIndex),\n            o.variable(templateName),\n            o.TYPED_NULL_EXPR,\n        ];\n        // find directives matching on a given <ng-template> node\n        this.matchDirectives('ng-template', template);\n        // prepare attributes parameter (including attributes used for directive matching)\n        var attrsExprs = [];\n        template.attributes.forEach(function (a) { attrsExprs.push(asLiteral(a.name), asLiteral(a.value)); });\n        attrsExprs.push.apply(attrsExprs, this.prepareSelectOnlyAttrs(template.inputs, template.outputs));\n        parameters.push(this.toAttrsParam(attrsExprs));\n        // local refs (ex.: <ng-template #foo>)\n        if (template.references && template.references.length) {\n            parameters.push(this.prepareRefsParameter(template.references));\n            parameters.push(o.importExpr(R3.templateRefExtractor));\n        }\n        // handle property bindings e.g. p(1, 'forOf', ɵbind(ctx.items));\n        var context = o.variable(CONTEXT_NAME);\n        template.inputs.forEach(function (input) {\n            var value = input.value.visit(_this._valueConverter);\n            _this.allocateBindingSlots(value);\n            _this.updateInstruction(template.sourceSpan, R3.elementProperty, function () {\n                return [\n                    o.literal(templateIndex), o.literal(input.name),\n                    _this.convertPropertyBinding(context, value)\n                ];\n            });\n        });\n        // Create the template function\n        var templateVisitor = new TemplateDefinitionBuilder(this.constantPool, this._bindingScope, this.level + 1, contextName, templateName, [], this.directiveMatcher, this.directives, this.pipeTypeByName, this.pipes, this._namespace, this.fileBasedI18nSuffix);\n        // Nested templates must not be visited until after their parent templates have completed\n        // processing, so they are queued here until after the initial pass. Otherwise, we wouldn't\n        // be able to support bindings in nested templates to local refs that occur after the\n        // template definition. e.g. <div *ngIf=\"showing\"> {{ foo }} </div>  <div #foo></div>\n        this._nestedTemplateFns.push(function () {\n            var templateFunctionExpr = templateVisitor.buildTemplateFunction(template.children, template.variables);\n            _this.constantPool.statements.push(templateFunctionExpr.toDeclStmt(templateName, null));\n        });\n        // e.g. template(1, MyComp_Template_1)\n        this.creationInstruction(template.sourceSpan, R3.templateCreate, function () {\n            parameters.splice(2, 0, o.literal(templateVisitor.getConstCount()), o.literal(templateVisitor.getVarCount()));\n            return trimTrailingNulls(parameters);\n        });\n        // Generate listeners for directive output\n        template.outputs.forEach(function (outputAst) {\n            _this.creationInstruction(outputAst.sourceSpan, R3.listener, _this.prepareListenerParameter('ng_template', outputAst));\n        });\n    };\n    TemplateDefinitionBuilder.prototype.visitBoundText = function (text) {\n        var _this = this;\n        var nodeIndex = this.allocateDataSlot();\n        this.creationInstruction(text.sourceSpan, R3.text, [o.literal(nodeIndex)]);\n        var value = text.value.visit(this._valueConverter);\n        this.allocateBindingSlots(value);\n        this.updateInstruction(text.sourceSpan, R3.textBinding, function () { return [o.literal(nodeIndex), _this.convertPropertyBinding(o.variable(CONTEXT_NAME), value)]; });\n    };\n    TemplateDefinitionBuilder.prototype.visitText = function (text) {\n        this.creationInstruction(text.sourceSpan, R3.text, [o.literal(this.allocateDataSlot()), o.literal(text.value)]);\n    };\n    // When the content of the element is a single text node the translation can be inlined:\n    //\n    // `<p i18n=\"desc|mean\">some content</p>`\n    // compiles to\n    // ```\n    // /**\n    // * @desc desc\n    // * @meaning mean\n    // */\n    // const MSG_XYZ = goog.getMsg('some content');\n    // i0.ɵtext(1, MSG_XYZ);\n    // ```\n    TemplateDefinitionBuilder.prototype.visitSingleI18nTextChild = function (text, i18nMeta) {\n        var meta = parseI18nMeta(i18nMeta);\n        var variable = this.constantPool.getTranslation(text.value, meta, this.fileBasedI18nSuffix);\n        this.creationInstruction(text.sourceSpan, R3.text, [o.literal(this.allocateDataSlot()), variable]);\n    };\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = function () { return this._dataIndex++; };\n    TemplateDefinitionBuilder.prototype.getConstCount = function () { return this._dataIndex; };\n    TemplateDefinitionBuilder.prototype.getVarCount = function () { return this._pureFunctionSlots; };\n    TemplateDefinitionBuilder.prototype.bindingContext = function () { return \"\" + this._bindingContext++; };\n    // Bindings must only be resolved after all local refs have been visited, so all\n    // instructions are queued in callbacks that execute once the initial pass has completed.\n    // Otherwise, we wouldn't be able to support local refs that are defined after their\n    // bindings. e.g. {{ foo }} <div #foo></div>\n    TemplateDefinitionBuilder.prototype.instructionFn = function (fns, span, reference, paramsOrFn) {\n        fns.push(function () {\n            var params = Array.isArray(paramsOrFn) ? paramsOrFn : paramsOrFn();\n            return instruction(span, reference, params).toStmt();\n        });\n    };\n    TemplateDefinitionBuilder.prototype.creationInstruction = function (span, reference, paramsOrFn) {\n        this.instructionFn(this._creationCodeFns, span, reference, paramsOrFn || []);\n    };\n    TemplateDefinitionBuilder.prototype.updateInstruction = function (span, reference, paramsOrFn) {\n        this.instructionFn(this._updateCodeFns, span, reference, paramsOrFn || []);\n    };\n    TemplateDefinitionBuilder.prototype.allocatePureFunctionSlots = function (numSlots) {\n        var originalSlots = this._pureFunctionSlots;\n        this._pureFunctionSlots += numSlots;\n        return originalSlots;\n    };\n    TemplateDefinitionBuilder.prototype.allocateBindingSlots = function (value) {\n        this._bindingSlots += value instanceof Interpolation ? value.expressions.length : 1;\n    };\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = function (implicit, value, skipBindFn) {\n        var _a;\n        var interpolationFn = value instanceof Interpolation ? interpolate : function () { return error('Unexpected interpolation'); };\n        var convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple, interpolationFn);\n        (_a = this._tempVariables).push.apply(_a, convertedPropertyBinding.stmts);\n        var valExpr = convertedPropertyBinding.currValExpr;\n        return value instanceof Interpolation || skipBindFn ? valExpr :\n            o.importExpr(R3.bind).callFn([valExpr]);\n    };\n    TemplateDefinitionBuilder.prototype.matchDirectives = function (tagName, elOrTpl) {\n        var _this = this;\n        if (this.directiveMatcher) {\n            var selector = createCssSelector(tagName, this.getAttrsForDirectiveMatching(elOrTpl));\n            this.directiveMatcher.match(selector, function (cssSelector, staticType) { _this.directives.add(staticType); });\n        }\n    };\n    TemplateDefinitionBuilder.prototype.getAttrsForDirectiveMatching = function (elOrTpl) {\n        var attributesMap = {};\n        elOrTpl.attributes.forEach(function (a) {\n            if (!isI18NAttribute(a.name)) {\n                attributesMap[a.name] = a.value;\n            }\n        });\n        elOrTpl.inputs.forEach(function (i) { attributesMap[i.name] = ''; });\n        elOrTpl.outputs.forEach(function (o) { attributesMap[o.name] = ''; });\n        return attributesMap;\n    };\n    TemplateDefinitionBuilder.prototype.prepareSelectOnlyAttrs = function (inputs, outputs) {\n        var attrExprs = [];\n        if (inputs.length || outputs.length) {\n            attrExprs.push(o.literal(1 /* SelectOnly */));\n            inputs.forEach(function (i) { attrExprs.push(asLiteral(i.name)); });\n            outputs.forEach(function (o) { attrExprs.push(asLiteral(o.name)); });\n        }\n        return attrExprs;\n    };\n    TemplateDefinitionBuilder.prototype.toAttrsParam = function (attrsExprs) {\n        return attrsExprs.length > 0 ?\n            this.constantPool.getConstLiteral(o.literalArr(attrsExprs), true) :\n            o.TYPED_NULL_EXPR;\n    };\n    TemplateDefinitionBuilder.prototype.prepareRefsParameter = function (references) {\n        var _this = this;\n        if (!references || references.length === 0) {\n            return o.TYPED_NULL_EXPR;\n        }\n        var refsParam = flatten(references.map(function (reference) {\n            var slot = _this.allocateDataSlot();\n            // Generate the update temporary.\n            var variableName = _this._bindingScope.freshReferenceName();\n            var retrievalLevel = _this.level;\n            var lhs = o.variable(variableName);\n            _this._bindingScope.set(retrievalLevel, reference.name, lhs, 0 /* DEFAULT */, function (scope, relativeLevel) {\n                // e.g. x(2);\n                var nextContextStmt = relativeLevel > 0 ? [generateNextContextExpr(relativeLevel).toStmt()] : [];\n                // e.g. const $foo$ = r(1);\n                var refExpr = lhs.set(o.importExpr(R3.reference).callFn([o.literal(slot)]));\n                return nextContextStmt.concat(refExpr.toConstDecl());\n            });\n            return [reference.name, reference.value];\n        }));\n        return this.constantPool.getConstLiteral(asLiteral(refsParam), true);\n    };\n    TemplateDefinitionBuilder.prototype.prepareListenerParameter = function (tagName, outputAst) {\n        var _this = this;\n        var evName = sanitizeIdentifier(outputAst.name);\n        var functionName = this.templateName + \"_\" + tagName + \"_\" + evName + \"_listener\";\n        return function () {\n            var listenerScope = _this._bindingScope.nestedScope(_this._bindingScope.bindingLevel);\n            var bindingExpr = convertActionBinding(listenerScope, o.variable(CONTEXT_NAME), outputAst.handler, 'b', function () { return error('Unexpected interpolation'); });\n            var statements = listenerScope.restoreViewStatement().concat(listenerScope.variableDeclarations(), bindingExpr.render3Stmts);\n            var handler = o.fn([new o.FnParam('$event', o.DYNAMIC_TYPE)], statements, o.INFERRED_TYPE, null, functionName);\n            return [o.literal(outputAst.name), handler];\n        };\n    };\n    return TemplateDefinitionBuilder;\n}());\nexport { TemplateDefinitionBuilder };\nvar ValueConverter = /** @class */ (function (_super) {\n    tslib_1.__extends(ValueConverter, _super);\n    function ValueConverter(constantPool, allocateSlot, allocatePureFunctionSlots, definePipe) {\n        var _this = _super.call(this) || this;\n        _this.constantPool = constantPool;\n        _this.allocateSlot = allocateSlot;\n        _this.allocatePureFunctionSlots = allocatePureFunctionSlots;\n        _this.definePipe = definePipe;\n        _this._pipeBindExprs = [];\n        return _this;\n    }\n    // AstMemoryEfficientTransformer\n    ValueConverter.prototype.visitPipe = function (pipe, context) {\n        // Allocate a slot to create the pipe\n        var slot = this.allocateSlot();\n        var slotPseudoLocal = \"PIPE:\" + slot;\n        // Allocate one slot for the result plus one slot per pipe argument\n        var pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n        var target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n        var _a = pipeBindingCallInfo(pipe.args), identifier = _a.identifier, isVarLength = _a.isVarLength;\n        this.definePipe(pipe.name, slotPseudoLocal, slot, o.importExpr(identifier));\n        var args = [pipe.exp].concat(pipe.args);\n        var convertedArgs = isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n        var pipeBindExpr = new FunctionCall(pipe.span, target, [\n            new LiteralPrimitive(pipe.span, slot),\n            new LiteralPrimitive(pipe.span, pureFunctionSlot)\n        ].concat(convertedArgs));\n        this._pipeBindExprs.push(pipeBindExpr);\n        return pipeBindExpr;\n    };\n    ValueConverter.prototype.updatePipeSlotOffsets = function (bindingSlots) {\n        this._pipeBindExprs.forEach(function (pipe) {\n            // update the slot offset arg (index 1) to account for binding slots\n            var slotOffset = pipe.args[1];\n            slotOffset.value += bindingSlots;\n        });\n    };\n    ValueConverter.prototype.visitLiteralArray = function (array, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), function (values) {\n            // If the literal has calculated (non-literal) elements transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var literal = o.literalArr(values);\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.constantPool.getConstLiteral(literal, true) :\n                getLiteralFactory(_this.constantPool, literal, _this.allocatePureFunctionSlots);\n        });\n    };\n    ValueConverter.prototype.visitLiteralMap = function (map, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(map.span, this.visitAll(map.values), function (values) {\n            // If the literal has calculated (non-literal) elements  transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var literal = o.literalMap(values.map(function (value, index) { return ({ key: map.keys[index].key, value: value, quoted: map.keys[index].quoted }); }));\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.constantPool.getConstLiteral(literal, true) :\n                getLiteralFactory(_this.constantPool, literal, _this.allocatePureFunctionSlots);\n        });\n    };\n    return ValueConverter;\n}(AstMemoryEfficientTransformer));\nexport { ValueConverter };\n// Pipes always have at least one parameter, the value they operate on\nvar pipeBindingIdentifiers = [R3.pipeBind1, R3.pipeBind2, R3.pipeBind3, R3.pipeBind4];\nfunction pipeBindingCallInfo(args) {\n    var identifier = pipeBindingIdentifiers[args.length];\n    return {\n        identifier: identifier || R3.pipeBindV,\n        isVarLength: !identifier,\n    };\n}\nvar pureFunctionIdentifiers = [\n    R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n    R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\nfunction pureFunctionCallInfo(args) {\n    var identifier = pureFunctionIdentifiers[args.length];\n    return {\n        identifier: identifier || R3.pureFunctionV,\n        isVarLength: !identifier,\n    };\n}\nfunction instruction(span, reference, params) {\n    return o.importExpr(reference, null, span).callFn(params, span);\n}\n// e.g. x(2);\nfunction generateNextContextExpr(relativeLevelDiff) {\n    return o.importExpr(R3.nextContext)\n        .callFn(relativeLevelDiff > 1 ? [o.literal(relativeLevelDiff)] : []);\n}\nfunction getLiteralFactory(constantPool, literal, allocateSlots) {\n    var _a = constantPool.getLiteralFactory(literal), literalFactory = _a.literalFactory, literalFactoryArguments = _a.literalFactoryArguments;\n    // Allocate 1 slot for the result plus 1 per argument\n    var startSlot = allocateSlots(1 + literalFactoryArguments.length);\n    literalFactoryArguments.length > 0 || error(\"Expected arguments to a literal factory function\");\n    var _b = pureFunctionCallInfo(literalFactoryArguments), identifier = _b.identifier, isVarLength = _b.isVarLength;\n    // Literal factories are pure functions that only need to be re-invoked when the parameters\n    // change.\n    var args = [\n        o.literal(startSlot),\n        literalFactory,\n    ];\n    if (isVarLength) {\n        args.push(o.literalArr(literalFactoryArguments));\n    }\n    else {\n        args.push.apply(args, literalFactoryArguments);\n    }\n    return o.importExpr(identifier).callFn(args);\n}\n/** The prefix used to get a shared context in BindingScope's map. */\nvar SHARED_CONTEXT_KEY = '$$shared_ctx$$';\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(bindingLevel, parent) {\n        if (bindingLevel === void 0) { bindingLevel = 0; }\n        if (parent === void 0) { parent = null; }\n        this.bindingLevel = bindingLevel;\n        this.parent = parent;\n        /** Keeps a map from local variables to their BindingData. */\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n        this.restoreViewVariable = null;\n    }\n    Object.defineProperty(BindingScope, \"ROOT_SCOPE\", {\n        get: function () {\n            if (!BindingScope._ROOT_SCOPE) {\n                BindingScope._ROOT_SCOPE = new BindingScope().set(0, '$event', o.variable('$event'));\n            }\n            return BindingScope._ROOT_SCOPE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BindingScope.prototype.get = function (name) {\n        var current = this;\n        while (current) {\n            var value = current.map.get(name);\n            if (value != null) {\n                if (current !== this) {\n                    // make a local copy and reset the `declare` state\n                    value = {\n                        retrievalLevel: value.retrievalLevel,\n                        lhs: value.lhs,\n                        declareLocalCallback: value.declareLocalCallback,\n                        declare: false,\n                        priority: value.priority\n                    };\n                    // Cache the value locally.\n                    this.map.set(name, value);\n                    // Possibly generate a shared context var\n                    this.maybeGenerateSharedContextVar(value);\n                    this.maybeRestoreView(value.retrievalLevel);\n                }\n                if (value.declareLocalCallback && !value.declare) {\n                    value.declare = true;\n                }\n                return value.lhs;\n            }\n            current = current.parent;\n        }\n        // If we get to this point, we are looking for a property on the top level component\n        // - If level === 0, we are on the top and don't need to re-declare `ctx`.\n        // - If level > 0, we are in an embedded view. We need to retrieve the name of the\n        // local var we used to store the component context, e.g. const $comp$ = x();\n        return this.bindingLevel === 0 ? null : this.getComponentProperty(name);\n    };\n    /**\n     * Create a local variable for later reference.\n     *\n     * @param retrievalLevel The level from which this value can be retrieved\n     * @param name Name of the variable.\n     * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n     * @param priority The sorting priority of this var\n     * @param declareLocalCallback The callback to invoke when declaring this local var\n     */\n    BindingScope.prototype.set = function (retrievalLevel, name, lhs, priority, declareLocalCallback) {\n        if (priority === void 0) { priority = 0 /* DEFAULT */; }\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, {\n            retrievalLevel: retrievalLevel,\n            lhs: lhs,\n            declare: false,\n            declareLocalCallback: declareLocalCallback,\n            priority: priority\n        });\n        return this;\n    };\n    BindingScope.prototype.getLocal = function (name) { return this.get(name); };\n    BindingScope.prototype.nestedScope = function (level) {\n        var newScope = new BindingScope(level, this);\n        if (level > 0)\n            newScope.generateSharedContextVar(0);\n        return newScope;\n    };\n    BindingScope.prototype.getSharedContextName = function (retrievalLevel) {\n        var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + retrievalLevel);\n        return sharedCtxObj && sharedCtxObj.declare ? sharedCtxObj.lhs : null;\n    };\n    BindingScope.prototype.maybeGenerateSharedContextVar = function (value) {\n        if (value.priority === 1 /* CONTEXT */) {\n            var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + value.retrievalLevel);\n            if (sharedCtxObj) {\n                sharedCtxObj.declare = true;\n            }\n            else {\n                this.generateSharedContextVar(value.retrievalLevel);\n            }\n        }\n    };\n    BindingScope.prototype.generateSharedContextVar = function (retrievalLevel) {\n        var lhs = o.variable(CONTEXT_NAME + this.freshReferenceName());\n        this.map.set(SHARED_CONTEXT_KEY + retrievalLevel, {\n            retrievalLevel: retrievalLevel,\n            lhs: lhs,\n            declareLocalCallback: function (scope, relativeLevel) {\n                // const ctx_r0 = x(2);\n                return [lhs.set(generateNextContextExpr(relativeLevel)).toConstDecl()];\n            },\n            declare: false,\n            priority: 2 /* SHARED_CONTEXT */\n        });\n    };\n    BindingScope.prototype.getComponentProperty = function (name) {\n        var componentValue = this.map.get(SHARED_CONTEXT_KEY + 0);\n        componentValue.declare = true;\n        this.maybeRestoreView(0);\n        return componentValue.lhs.prop(name);\n    };\n    BindingScope.prototype.maybeRestoreView = function (retrievalLevel) {\n        if (this.isListenerScope() && retrievalLevel < this.bindingLevel) {\n            if (!this.parent.restoreViewVariable) {\n                // parent saves variable to generate a shared `const $s$ = gV();` instruction\n                this.parent.restoreViewVariable = o.variable(this.parent.freshReferenceName());\n            }\n            this.restoreViewVariable = this.parent.restoreViewVariable;\n        }\n    };\n    BindingScope.prototype.restoreViewStatement = function () {\n        // rV($state$);\n        return this.restoreViewVariable ?\n            [instruction(null, R3.restoreView, [this.restoreViewVariable]).toStmt()] :\n            [];\n    };\n    BindingScope.prototype.viewSnapshotStatements = function () {\n        // const $state$ = gV();\n        var getCurrentViewInstruction = instruction(null, R3.getCurrentView, []);\n        return this.restoreViewVariable ?\n            [this.restoreViewVariable.set(getCurrentViewInstruction).toConstDecl()] :\n            [];\n    };\n    BindingScope.prototype.isListenerScope = function () { return this.parent && this.parent.bindingLevel === this.bindingLevel; };\n    BindingScope.prototype.variableDeclarations = function () {\n        var _this = this;\n        var currentContextLevel = 0;\n        return Array.from(this.map.values())\n            .filter(function (value) { return value.declare; })\n            .sort(function (a, b) { return b.retrievalLevel - a.retrievalLevel || b.priority - a.priority; })\n            .reduce(function (stmts, value) {\n            var levelDiff = _this.bindingLevel - value.retrievalLevel;\n            var currStmts = value.declareLocalCallback(_this, levelDiff - currentContextLevel);\n            currentContextLevel = levelDiff;\n            return stmts.concat(currStmts);\n        }, []);\n    };\n    BindingScope.prototype.freshReferenceName = function () {\n        var current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        var ref = \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n        return ref;\n    };\n    return BindingScope;\n}());\nexport { BindingScope };\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n */\nfunction createCssSelector(tag, attributes) {\n    var cssSelector = new CssSelector();\n    cssSelector.setElement(tag);\n    Object.getOwnPropertyNames(attributes).forEach(function (name) {\n        var value = attributes[name];\n        cssSelector.addAttribute(name, value);\n        if (name.toLowerCase() === 'class') {\n            var classes = value.trim().split(/\\s+/g);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    });\n    return cssSelector;\n}\n// Parse i18n metas like:\n// - \"@@id\",\n// - \"description[@@id]\",\n// - \"meaning|description[@@id]\"\nfunction parseI18nMeta(i18n) {\n    var _a, _b;\n    var meaning;\n    var description;\n    var id;\n    if (i18n) {\n        // TODO(vicb): figure out how to force a message ID with closure ?\n        var idIndex = i18n.indexOf(ID_SEPARATOR);\n        var descIndex = i18n.indexOf(MEANING_SEPARATOR);\n        var meaningAndDesc = void 0;\n        _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n        _b = (descIndex > -1) ?\n            [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n            ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    }\n    return { description: description, id: id, meaning: meaning };\n}\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return o.importExpr(R3.interpolation1).callFn(args);\n        case 5:\n            return o.importExpr(R3.interpolation2).callFn(args);\n        case 7:\n            return o.importExpr(R3.interpolation3).callFn(args);\n        case 9:\n            return o.importExpr(R3.interpolation4).callFn(args);\n        case 11:\n            return o.importExpr(R3.interpolation5).callFn(args);\n        case 13:\n            return o.importExpr(R3.interpolation6).callFn(args);\n        case 15:\n            return o.importExpr(R3.interpolation7).callFn(args);\n        case 17:\n            return o.importExpr(R3.interpolation8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return o.importExpr(R3.interpolationV).callFn([o.literalArr(args)]);\n}\n/**\n * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n *\n * @param template text of the template to parse\n * @param templateUrl URL to use for source mapping of the parsed template\n */\nexport function parseTemplate(template, templateUrl, options, relativeContextFilePath) {\n    if (options === void 0) { options = {}; }\n    var bindingParser = makeBindingParser();\n    var htmlParser = new HtmlParser();\n    var parseResult = htmlParser.parse(template, templateUrl);\n    if (parseResult.errors && parseResult.errors.length > 0) {\n        return {\n            errors: parseResult.errors,\n            nodes: [],\n            hasNgContent: false,\n            ngContentSelectors: [], relativeContextFilePath: relativeContextFilePath\n        };\n    }\n    var rootNodes = parseResult.rootNodes;\n    if (!options.preserveWhitespaces) {\n        rootNodes = html.visitAll(new WhitespaceVisitor(), rootNodes);\n    }\n    var _a = htmlAstToRender3Ast(rootNodes, bindingParser), nodes = _a.nodes, hasNgContent = _a.hasNgContent, ngContentSelectors = _a.ngContentSelectors, errors = _a.errors;\n    if (errors && errors.length > 0) {\n        return {\n            errors: errors,\n            nodes: [],\n            hasNgContent: false,\n            ngContentSelectors: [], relativeContextFilePath: relativeContextFilePath\n        };\n    }\n    return { nodes: nodes, hasNgContent: hasNgContent, ngContentSelectors: ngContentSelectors, relativeContextFilePath: relativeContextFilePath };\n}\n/**\n * Construct a `BindingParser` with a default configuration.\n */\nexport function makeBindingParser() {\n    return new BindingParser(new Parser(new Lexer()), DEFAULT_INTERPOLATION_CONFIG, new DomElementSchemaRegistry(), null, []);\n}\nfunction isClassBinding(input) {\n    return input.name == 'className' || input.name == 'class';\n}\nfunction resolveSanitizationFn(input, context) {\n    switch (context) {\n        case core.SecurityContext.HTML:\n            return o.importExpr(R3.sanitizeHtml);\n        case core.SecurityContext.SCRIPT:\n            return o.importExpr(R3.sanitizeScript);\n        case core.SecurityContext.STYLE:\n            // the compiler does not fill in an instruction for [style.prop?] binding\n            // values because the style algorithm knows internally what props are subject\n            // to sanitization (only [attr.style] values are explicitly sanitized)\n            return input.type === 1 /* Attribute */ ? o.importExpr(R3.sanitizeStyle) : null;\n        case core.SecurityContext.URL:\n            return o.importExpr(R3.sanitizeUrl);\n        case core.SecurityContext.RESOURCE_URL:\n            return o.importExpr(R3.sanitizeResourceUrl);\n        default:\n            return null;\n    }\n}\nfunction isStyleSanitizable(prop) {\n    switch (prop) {\n        case 'background-image':\n        case 'background':\n        case 'border-image':\n        case 'filter':\n        case 'list-style':\n        case 'list-style-image':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { identifierName, sanitizeIdentifier } from '../../compile_metadata';\nimport { BindingForm, convertActionBinding, convertPropertyBinding } from '../../compiler_util/expression_converter';\nimport * as core from '../../core';\nimport { LifecycleHooks } from '../../lifecycle_reflector';\nimport * as o from '../../output/output_ast';\nimport { typeSourceSpan } from '../../parse_util';\nimport { CssSelector, SelectorMatcher } from '../../selector';\nimport { ShadowCss } from '../../shadow_css';\nimport { CONTENT_ATTR, HOST_ATTR } from '../../style_compiler';\nimport { error } from '../../util';\nimport { compileFactoryFunction, dependenciesFromGlobalMetadata } from '../r3_factory';\nimport { Identifiers as R3 } from '../r3_identifiers';\nimport { typeWithParameters } from '../util';\nimport { BindingScope, TemplateDefinitionBuilder, ValueConverter, renderFlagCheckIfStmt } from './template';\nimport { CONTEXT_NAME, DefinitionMap, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, conditionallyCreateMapObjectLiteral, getQueryPredicate, temporaryAllocator } from './util';\nvar EMPTY_ARRAY = [];\nfunction baseDirectiveFields(meta, constantPool, bindingParser) {\n    var definitionMap = new DefinitionMap();\n    // e.g. `type: MyDirective`\n    definitionMap.set('type', meta.type);\n    // e.g. `selectors: [['', 'someDir', '']]`\n    definitionMap.set('selectors', createDirectiveSelector(meta.selector));\n    // e.g. `factory: () => new MyApp(injectElementRef())`\n    var result = compileFactoryFunction({\n        name: meta.name,\n        type: meta.type,\n        deps: meta.deps,\n        injectFn: R3.directiveInject,\n    });\n    definitionMap.set('factory', result.factory);\n    definitionMap.set('contentQueries', createContentQueriesFunction(meta, constantPool));\n    definitionMap.set('contentQueriesRefresh', createContentQueriesRefreshFunction(meta));\n    // Initialize hostVars to number of bound host properties (interpolations illegal)\n    var hostVars = Object.keys(meta.host.properties).length;\n    // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n    definitionMap.set('hostBindings', createHostBindingsFunction(meta, bindingParser, constantPool, function (slots) {\n        var originalSlots = hostVars;\n        hostVars += slots;\n        return originalSlots;\n    }));\n    if (hostVars) {\n        // e.g. `hostVars: 2\n        definitionMap.set('hostVars', o.literal(hostVars));\n    }\n    // e.g. `attributes: ['role', 'listbox']`\n    definitionMap.set('attributes', createHostAttributesArray(meta));\n    // e.g 'inputs: {a: 'a'}`\n    definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs));\n    // e.g 'outputs: {a: 'a'}`\n    definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n    // e.g. `features: [NgOnChangesFeature]`\n    var features = [];\n    // TODO: add `PublicFeature` so that directives get registered to the DI - make this configurable\n    features.push(o.importExpr(R3.PublicFeature));\n    if (meta.usesInheritance) {\n        features.push(o.importExpr(R3.InheritDefinitionFeature));\n    }\n    if (meta.lifecycle.usesOnChanges) {\n        features.push(o.importExpr(R3.NgOnChangesFeature));\n    }\n    if (features.length) {\n        definitionMap.set('features', o.literalArr(features));\n    }\n    if (meta.exportAs !== null) {\n        definitionMap.set('exportAs', o.literal(meta.exportAs));\n    }\n    return { definitionMap: definitionMap, statements: result.statements };\n}\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n */\nexport function compileDirectiveFromMetadata(meta, constantPool, bindingParser) {\n    var _a = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _a.definitionMap, statements = _a.statements;\n    var expression = o.importExpr(R3.defineDirective).callFn([definitionMap.toLiteralMap()]);\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    var type = new o.ExpressionType(o.importExpr(R3.DirectiveDef, [\n        typeWithParameters(meta.type, meta.typeArgumentCount),\n        new o.ExpressionType(o.literal(selectorForType))\n    ]));\n    return { expression: expression, type: type, statements: statements };\n}\n/**\n * Compile a base definition for the render3 runtime as defined by {@link R3BaseRefMetadata}\n * @param meta the metadata used for compilation.\n */\nexport function compileBaseDefFromMetadata(meta) {\n    var definitionMap = new DefinitionMap();\n    if (meta.inputs) {\n        var inputs_1 = meta.inputs;\n        var inputsMap = Object.keys(inputs_1).map(function (key) {\n            var v = inputs_1[key];\n            var value = Array.isArray(v) ? o.literalArr(v.map(function (vx) { return o.literal(vx); })) : o.literal(v);\n            return { key: key, value: value, quoted: false };\n        });\n        definitionMap.set('inputs', o.literalMap(inputsMap));\n    }\n    if (meta.outputs) {\n        var outputs_1 = meta.outputs;\n        var outputsMap = Object.keys(outputs_1).map(function (key) {\n            var value = o.literal(outputs_1[key]);\n            return { key: key, value: value, quoted: false };\n        });\n        definitionMap.set('outputs', o.literalMap(outputsMap));\n    }\n    var expression = o.importExpr(R3.defineBase).callFn([definitionMap.toLiteralMap()]);\n    var type = new o.ExpressionType(o.importExpr(R3.BaseDef));\n    return { expression: expression, type: type };\n}\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n */\nexport function compileComponentFromMetadata(meta, constantPool, bindingParser) {\n    var _a = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _a.definitionMap, statements = _a.statements;\n    var selector = meta.selector && CssSelector.parse(meta.selector);\n    var firstSelector = selector && selector[0];\n    // e.g. `attr: [\"class\", \".my.app\"]`\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMap.set('attrs', constantPool.getConstLiteral(o.literalArr(selectorAttributes.map(function (value) { return value != null ? o.literal(value) : o.literal(undefined); })), \n            /* forceShared */ true));\n        }\n    }\n    // Generate the CSS matcher that recognize directive\n    var directiveMatcher = null;\n    if (meta.directives.size) {\n        var matcher_1 = new SelectorMatcher();\n        meta.directives.forEach(function (expression, selector) {\n            matcher_1.addSelectables(CssSelector.parse(selector), expression);\n        });\n        directiveMatcher = matcher_1;\n    }\n    if (meta.viewQueries.length) {\n        definitionMap.set('viewQuery', createViewQueriesFunction(meta, constantPool));\n    }\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var templateTypeName = meta.name;\n    var templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var directivesUsed = new Set();\n    var pipesUsed = new Set();\n    var template = meta.template;\n    var templateBuilder = new TemplateDefinitionBuilder(constantPool, BindingScope.ROOT_SCOPE, 0, templateTypeName, templateName, meta.viewQueries, directiveMatcher, directivesUsed, meta.pipes, pipesUsed, R3.namespaceHTML, meta.template.relativeContextFilePath);\n    var templateFunctionExpression = templateBuilder.buildTemplateFunction(template.nodes, [], template.hasNgContent, template.ngContentSelectors);\n    // e.g. `consts: 2`\n    definitionMap.set('consts', o.literal(templateBuilder.getConstCount()));\n    // e.g. `vars: 2`\n    definitionMap.set('vars', o.literal(templateBuilder.getVarCount()));\n    definitionMap.set('template', templateFunctionExpression);\n    // e.g. `directives: [MyDirective]`\n    if (directivesUsed.size) {\n        var directivesExpr = o.literalArr(Array.from(directivesUsed));\n        if (meta.wrapDirectivesInClosure) {\n            directivesExpr = o.fn([], [new o.ReturnStatement(directivesExpr)]);\n        }\n        definitionMap.set('directives', directivesExpr);\n    }\n    // e.g. `pipes: [MyPipe]`\n    if (pipesUsed.size) {\n        definitionMap.set('pipes', o.literalArr(Array.from(pipesUsed)));\n    }\n    // e.g. `styles: [str1, str2]`\n    if (meta.styles && meta.styles.length) {\n        var styleValues = meta.encapsulation == core.ViewEncapsulation.Emulated ?\n            compileStyles(meta.styles, CONTENT_ATTR, HOST_ATTR) :\n            meta.styles;\n        var strings = styleValues.map(function (str) { return o.literal(str); });\n        definitionMap.set('styles', o.literalArr(strings));\n    }\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    var expression = o.importExpr(R3.defineComponent).callFn([definitionMap.toLiteralMap()]);\n    var type = new o.ExpressionType(o.importExpr(R3.ComponentDef, [\n        typeWithParameters(meta.type, meta.typeArgumentCount),\n        new o.ExpressionType(o.literal(selectorForType))\n    ]));\n    return { expression: expression, type: type, statements: statements };\n}\n/**\n * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileDirectiveFromRender2(outputCtx, directive, reflector, bindingParser) {\n    var name = identifierName(directive.type);\n    name || error(\"Cannot resolver the name of \" + directive.type);\n    var definitionField = outputCtx.constantPool.propertyNameOf(1 /* Directive */);\n    var meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n    var res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(name, null, [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)], [], new o.ClassMethod(null, [], []), []));\n}\n/**\n * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileComponentFromRender2(outputCtx, component, render3Ast, reflector, bindingParser, directiveTypeBySel, pipeTypeByName) {\n    var name = identifierName(component.type);\n    name || error(\"Cannot resolver the name of \" + component.type);\n    var definitionField = outputCtx.constantPool.propertyNameOf(2 /* Component */);\n    var summary = component.toSummary();\n    // Compute the R3ComponentMetadata from the CompileDirectiveMetadata\n    var meta = tslib_1.__assign({}, directiveMetadataFromGlobalMetadata(component, outputCtx, reflector), { selector: component.selector, template: {\n            nodes: render3Ast.nodes,\n            hasNgContent: render3Ast.hasNgContent,\n            ngContentSelectors: render3Ast.ngContentSelectors,\n            relativeContextFilePath: '',\n        }, directives: typeMapToExpressionMap(directiveTypeBySel, outputCtx), pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx), viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx), wrapDirectivesInClosure: false, styles: (summary.template && summary.template.styles) || EMPTY_ARRAY, encapsulation: (summary.template && summary.template.encapsulation) || core.ViewEncapsulation.Emulated });\n    var res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(name, null, [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)], [], new o.ClassMethod(null, [], []), []));\n}\n/**\n * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n */\nfunction directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector) {\n    var summary = directive.toSummary();\n    var name = identifierName(directive.type);\n    name || error(\"Cannot resolver the name of \" + directive.type);\n    return {\n        name: name,\n        type: outputCtx.importExpr(directive.type.reference),\n        typeArgumentCount: 0,\n        typeSourceSpan: typeSourceSpan(directive.isComponent ? 'Component' : 'Directive', directive.type),\n        selector: directive.selector,\n        deps: dependenciesFromGlobalMetadata(directive.type, outputCtx, reflector),\n        queries: queriesFromGlobalMetadata(directive.queries, outputCtx),\n        lifecycle: {\n            usesOnChanges: directive.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; }),\n        },\n        host: {\n            attributes: directive.hostAttributes,\n            listeners: summary.hostListeners,\n            properties: summary.hostProperties,\n        },\n        inputs: directive.inputs,\n        outputs: directive.outputs,\n        usesInheritance: false,\n        exportAs: null,\n    };\n}\n/**\n * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n */\nfunction queriesFromGlobalMetadata(queries, outputCtx) {\n    return queries.map(function (query) {\n        var read = null;\n        if (query.read && query.read.identifier) {\n            read = outputCtx.importExpr(query.read.identifier.reference);\n        }\n        return {\n            propertyName: query.propertyName,\n            first: query.first,\n            predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n            descendants: query.descendants, read: read,\n        };\n    });\n}\n/**\n * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n * type, or a list of string predicates.\n */\nfunction selectorsFromGlobalMetadata(selectors, outputCtx) {\n    if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n        var selectorStrings = selectors.map(function (value) { return value.value; });\n        selectorStrings.some(function (value) { return !value; }) &&\n            error('Found a type among the string selectors expected');\n        return outputCtx.constantPool.getConstLiteral(o.literalArr(selectorStrings.map(function (value) { return o.literal(value); })));\n    }\n    if (selectors.length == 1) {\n        var first = selectors[0];\n        if (first.identifier) {\n            return outputCtx.importExpr(first.identifier.reference);\n        }\n    }\n    error('Unexpected query form');\n    return o.NULL_EXPR;\n}\nfunction createQueryDefinition(query, constantPool, idx) {\n    var predicate = getQueryPredicate(query, constantPool);\n    // e.g. r3.Q(null, somePredicate, false) or r3.Q(0, ['div'], false)\n    var parameters = [\n        o.literal(idx, o.INFERRED_TYPE),\n        predicate,\n        o.literal(query.descendants),\n    ];\n    if (query.read) {\n        parameters.push(query.read);\n    }\n    return o.importExpr(R3.query).callFn(parameters);\n}\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector) {\n    return asLiteral(core.parseSelectorToR3Selector(selector));\n}\nfunction createHostAttributesArray(meta) {\n    var values = [];\n    var attributes = meta.host.attributes;\n    for (var _i = 0, _a = Object.getOwnPropertyNames(attributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var value = attributes[key];\n        values.push(o.literal(key), o.literal(value));\n    }\n    if (values.length > 0) {\n        return o.literalArr(values);\n    }\n    return null;\n}\n// Return a contentQueries function or null if one is not necessary.\nfunction createContentQueriesFunction(meta, constantPool) {\n    if (meta.queries.length) {\n        var statements = meta.queries.map(function (query) {\n            var queryDefinition = createQueryDefinition(query, constantPool, null);\n            return o.importExpr(R3.registerContentQuery).callFn([queryDefinition]).toStmt();\n        });\n        var typeName = meta.name;\n        return o.fn([], statements, o.INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueries\" : null);\n    }\n    return null;\n}\n// Return a contentQueriesRefresh function or null if one is not necessary.\nfunction createContentQueriesRefreshFunction(meta) {\n    if (meta.queries.length > 0) {\n        var statements_1 = [];\n        var typeName = meta.name;\n        var parameters = [\n            new o.FnParam('dirIndex', o.NUMBER_TYPE),\n            new o.FnParam('queryStartIndex', o.NUMBER_TYPE),\n        ];\n        var directiveInstanceVar_1 = o.variable('instance');\n        // var $tmp$: any;\n        var temporary_1 = temporaryAllocator(statements_1, TEMPORARY_NAME);\n        // const $instance$ = $r3$.ɵloadDirective(dirIndex);\n        statements_1.push(directiveInstanceVar_1.set(o.importExpr(R3.loadDirective).callFn([o.variable('dirIndex')]))\n            .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        meta.queries.forEach(function (query, idx) {\n            var loadQLArg = o.variable('queryStartIndex');\n            var getQueryList = o.importExpr(R3.loadQueryList).callFn([\n                idx > 0 ? loadQLArg.plus(o.literal(idx)) : loadQLArg\n            ]);\n            var assignToTemporary = temporary_1().set(getQueryList);\n            var callQueryRefresh = o.importExpr(R3.queryRefresh).callFn([assignToTemporary]);\n            var updateDirective = directiveInstanceVar_1.prop(query.propertyName)\n                .set(query.first ? temporary_1().prop('first') : temporary_1());\n            var refreshQueryAndUpdateDirective = callQueryRefresh.and(updateDirective);\n            statements_1.push(refreshQueryAndUpdateDirective.toStmt());\n        });\n        return o.fn(parameters, statements_1, o.INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueriesRefresh\" : null);\n    }\n    return null;\n}\n// Define and update any view queries\nfunction createViewQueriesFunction(meta, constantPool) {\n    var createStatements = [];\n    var updateStatements = [];\n    var tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n    for (var i = 0; i < meta.viewQueries.length; i++) {\n        var query = meta.viewQueries[i];\n        // creation, e.g. r3.Q(0, somePredicate, true);\n        var queryDefinition = createQueryDefinition(query, constantPool, i);\n        createStatements.push(queryDefinition.toStmt());\n        // update, e.g. (r3.qR(tmp = r3.ɵload(0)) && (ctx.someDir = tmp));\n        var temporary = tempAllocator();\n        var getQueryList = o.importExpr(R3.load).callFn([o.literal(i)]);\n        var refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n        var updateDirective = o.variable(CONTEXT_NAME)\n            .prop(query.propertyName)\n            .set(query.first ? temporary.prop('first') : temporary);\n        updateStatements.push(refresh.and(updateDirective).toStmt());\n    }\n    var viewQueryFnName = meta.name ? meta.name + \"_Query\" : null;\n    return o.fn([new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)], [\n        renderFlagCheckIfStmt(1 /* Create */, createStatements),\n        renderFlagCheckIfStmt(2 /* Update */, updateStatements)\n    ], o.INFERRED_TYPE, null, viewQueryFnName);\n}\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(meta, bindingParser, constantPool, allocatePureFunctionSlots) {\n    var statements = [];\n    var hostBindingSourceSpan = meta.typeSourceSpan;\n    var directiveSummary = metadataAsSummary(meta);\n    // Calculate the host property bindings\n    var bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n    var bindingContext = o.importExpr(R3.loadDirective).callFn([o.variable('dirIndex')]);\n    if (bindings) {\n        var valueConverter = new ValueConverter(constantPool, \n        /* new nodes are illegal here */ function () { return error('Unexpected node'); }, allocatePureFunctionSlots, \n        /* pipes are illegal here */ function () { return error('Unexpected pipe'); });\n        for (var _i = 0, bindings_1 = bindings; _i < bindings_1.length; _i++) {\n            var binding = bindings_1[_i];\n            // resolve literal arrays and literal objects\n            var value = binding.expression.visit(valueConverter);\n            var bindingExpr = convertPropertyBinding(null, bindingContext, value, 'b', BindingForm.TrySimple, function () { return error('Unexpected interpolation'); });\n            statements.push.apply(statements, bindingExpr.stmts);\n            statements.push(o.importExpr(R3.elementProperty)\n                .callFn([\n                o.variable('elIndex'),\n                o.literal(binding.name),\n                o.importExpr(R3.bind).callFn([bindingExpr.currValExpr]),\n            ])\n                .toStmt());\n        }\n    }\n    // Calculate host event bindings\n    var eventBindings = bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n    if (eventBindings) {\n        for (var _a = 0, eventBindings_1 = eventBindings; _a < eventBindings_1.length; _a++) {\n            var binding = eventBindings_1[_a];\n            var bindingExpr = convertActionBinding(null, bindingContext, binding.handler, 'b', function () { return error('Unexpected interpolation'); });\n            var bindingName = binding.name && sanitizeIdentifier(binding.name);\n            var typeName = meta.name;\n            var functionName = typeName && bindingName ? typeName + \"_\" + bindingName + \"_HostBindingHandler\" : null;\n            var handler = o.fn([new o.FnParam('$event', o.DYNAMIC_TYPE)], bindingExpr.stmts.concat([new o.ReturnStatement(bindingExpr.allowDefault)]), o.INFERRED_TYPE, null, functionName);\n            statements.push(o.importExpr(R3.listener).callFn([o.literal(binding.name), handler]).toStmt());\n        }\n    }\n    if (statements.length > 0) {\n        var typeName = meta.name;\n        return o.fn([\n            new o.FnParam('dirIndex', o.NUMBER_TYPE),\n            new o.FnParam('elIndex', o.NUMBER_TYPE),\n        ], statements, o.INFERRED_TYPE, null, typeName ? typeName + \"_HostBindings\" : null);\n    }\n    return null;\n}\nfunction metadataAsSummary(meta) {\n    // clang-format off\n    return {\n        hostAttributes: meta.host.attributes,\n        hostListeners: meta.host.listeners,\n        hostProperties: meta.host.properties,\n    };\n    // clang-format on\n}\nfunction typeMapToExpressionMap(map, outputCtx) {\n    // Convert each map entry into another entry where the value is an expression importing the type.\n    var entries = Array.from(map).map(function (_a) {\n        var key = _a[0], type = _a[1];\n        return [key, outputCtx.importExpr(type)];\n    });\n    return new Map(entries);\n}\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nexport function parseHostBindings(host) {\n    var attributes = {};\n    var listeners = {};\n    var properties = {};\n    var animations = {};\n    Object.keys(host).forEach(function (key) {\n        var value = host[key];\n        var matches = key.match(HOST_REG_EXP);\n        if (matches === null) {\n            attributes[key] = value;\n        }\n        else if (matches[1 /* Property */] != null) {\n            properties[matches[1 /* Property */]] = value;\n        }\n        else if (matches[2 /* Event */] != null) {\n            listeners[matches[2 /* Event */]] = value;\n        }\n        else if (matches[3 /* Animation */] != null) {\n            animations[matches[3 /* Animation */]] = value;\n        }\n    });\n    return { attributes: attributes, listeners: listeners, properties: properties, animations: animations };\n}\nfunction compileStyles(styles, selector, hostSelector) {\n    var shadowCss = new ShadowCss();\n    return styles.map(function (style) { return shadowCss.shimCssText(style, selector, hostSelector); });\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { areAllEquivalent } from '../output/output_ast';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    GeneratedFile.prototype.isEquivalent = function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(this.stmts, other.stmts);\n    };\n    return GeneratedFile;\n}());\nexport { GeneratedFile };\nexport function toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n//# sourceMappingURL=generated_file.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { tokenReference } from '../compile_metadata';\nexport function listLazyRoutes(moduleMeta, reflector) {\n    var allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\nexport function parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n//# sourceMappingURL=lazy_routes.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { isGeneratedFile, stripSummaryForJitFileSuffix, stripSummaryForJitNameSuffix, summaryForJitFileName, summaryForJitName } from './util';\nvar TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nexport { ResolvedStaticSymbol };\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        // Note: this will only contain StaticSymbols without members!\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        // Note: this will only contain StaticSymbols without members!\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return this._resolveSymbolMembers(staticSymbol);\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var resultFromSummary = this._resolveSymbolFromSummary(staticSymbol);\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return this.resolvedSymbols.get(staticSymbol);\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = this.importAs.get(staticSymbol);\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    StaticSymbolResolver.prototype.getKnownModuleName = function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /** @internal */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n        var recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var members = staticSymbol.members;\n        var baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var value = baseMetadata;\n            for (var i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presence of decorators without evaluating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = function (filePath) {\n        var metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        var summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var resolvedSymbols = [];\n        var metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there might be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var symbolMeta = metadata['metadata'][metadataKey];\n                var name = unescapeIdentifier(metadataKey);\n                var symbol = _this.getStaticSymbol(filePath, name);\n                var origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        var isTsFile = TS.test(sourceSymbol.filePath);\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var _originalFileMemo;\n        var getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what the original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            tslib_1.__extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var module = map['module'];\n                    var name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var filePath = void 0;\n                    if (module) {\n                        filePath = self.resolveModule(module, sourceSymbol.filePath);\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map.line,\n                                character: map.character,\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map.line,\n                            character: map.character,\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return tslib_1.__assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param module an absolute path to a module file.\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\nexport { StaticSymbolResolver };\n// Remove extra underscore from escaped identifier.\n// See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts\nexport function unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\nexport function unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n//# sourceMappingURL=static_symbol_resolver.js.map","import * as tslib_1 from \"tslib\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileNgModuleMetadata, CompileSummaryKind } from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { unwrapResolvedMetadata } from './static_symbol_resolver';\nimport { isLoweredSymbol, ngfactoryFilePath, summaryForJitFileName, summaryForJitName } from './util';\nexport function serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\nexport function deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\nexport function createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, o.NULL_EXPR);\n}\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(o.fn([], [new o.ReturnStatement(value)], new o.ArrayType(o.DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        o.StmtModifier.Final, o.StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    tslib_1.__extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        // This now contains a `__symbol: number` in the place of\n        // StaticSymbols, but otherwise has the same shape as the original objects.\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    ToJsonSerializer.prototype.addSummary = function (summary) {\n        var _this = this;\n        var unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var declarationSymbol = this.symbols[this.indexBySymbol.get(metadata_1)];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var ngModuleSummary = summary.type;\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var exportAs = [];\n        var json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var importAs = undefined;\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = _this.indexBySymbol.get(reexportSymbol);\n                    }\n                    else {\n                        var summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    ToJsonSerializer.prototype.processValue = function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Strip line and character numbers from ngsummaries.\n     * Emitting them causes white spaces changes to retrigger upstream\n     * recompilations in bazel.\n     * TODO: find out a way to have line and character numbers in errors without\n     * excessive recompilation in bazel.\n     */\n    ToJsonSerializer.prototype.visitStringMap = function (map, context) {\n        if (map['__symbolic'] === 'resolved') {\n            return visitValue(map.symbol, this, context);\n        }\n        if (map['__symbolic'] === 'error') {\n            delete map['line'];\n            delete map['character'];\n        }\n        return _super.prototype.visitStringMap.call(this, map, context);\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = function (baseSymbol, flags) {\n        var index = this.indexBySymbol.get(baseSymbol);\n        var summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return index;\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    ToJsonSerializer.prototype.loadSummary = function (symbol) {\n        var summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    ForJitSerializer.prototype.serialize = function (exportAsArr) {\n        var _this = this;\n        var exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var modSummary = summary;\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, metadata));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(o.variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [o.StmtModifier.Exported]));\n            }\n        });\n    };\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var expressions = [this.serializeSummary(summary)];\n        var providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                // For modules,\n                // we also add the summaries for modules\n                // from libraries.\n                // This is ok as we produce reexports for all transitive modules.\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var dirSummary = summary;\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        }); }));\n        return o.literalArr(expressions);\n    };\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return o.literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new o.LiteralMapExpr(Object.keys(map).map(function (key) { return new o.LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            Transformer.prototype.visitPrimitive = function (value, context) { return o.literal(value); };\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    tslib_1.__extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    FromJsonDeserializer.prototype.deserialize = function (libraryFileName, json) {\n        var _this = this;\n        var data = JSON.parse(json);\n        var allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) { return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name); });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var symbol = _this.symbols[index];\n            var importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var baseSymbol = this.symbols[map['__symbol']];\n            var members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n//# sourceMappingURL=summary_serializer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { componentFactoryName, flatten, identifierName, templateSourceUrl } from '../compile_metadata';\nimport { ConstantPool } from '../constant_pool';\nimport { ViewEncapsulation } from '../core';\nimport { MessageBundle } from '../i18n/message_bundle';\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { removeWhitespaces } from '../ml_parser/html_whitespaces';\nimport { DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig } from '../ml_parser/interpolation_config';\nimport * as o from '../output/output_ast';\nimport { compileNgModuleFromRender2 as compileR3Module } from '../render3/r3_module_compiler';\nimport { compilePipeFromRender2 as compileR3Pipe } from '../render3/r3_pipe_compiler';\nimport { htmlAstToRender3Ast } from '../render3/r3_template_transform';\nimport { compileComponentFromRender2 as compileR3Component, compileDirectiveFromRender2 as compileR3Directive } from '../render3/view/compiler';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { BindingParser } from '../template_parser/binding_parser';\nimport { error, syntaxError, visitValue } from '../util';\nimport { GeneratedFile } from './generated_file';\nimport { listLazyRoutes, parseLazyRoute } from './lazy_routes';\nimport { StaticSymbol } from './static_symbol';\nimport { createForJitStub, serializeSummaries } from './summary_serializer';\nimport { ngfactoryFilePath, normalizeGenFileSuffix, splitTypescriptSuffix, summaryFileName, summaryForJitFileName } from './util';\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this.reflector = reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._injectableCompiler = _injectableCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n        this._analyzedFilesForInjectables = new Map();\n    }\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n        var _this = this;\n        var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        return analyzeResult;\n    };\n    AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n        var _this = this;\n        var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () { return analyzeResult; });\n    };\n    AotCompiler.prototype._analyzeFile = function (fileName) {\n        var analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    AotCompiler.prototype._analyzeFileForInjectables = function (fileName) {\n        var analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    AotCompiler.prototype.findGeneratedFileNames = function (fileName) {\n        var _this = this;\n        var genFileNames = [];\n        var file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var compMeta = _this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            }\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template.styleUrls.forEach(function (styleUrl) {\n                var normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var needsShim = (compMeta.template.encapsulation ||\n                    _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    AotCompiler.prototype.emitBasicStub = function (genFileName, originalFileName) {\n        var outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, 1 /* Basic */);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as later on in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    AotCompiler.prototype.emitTypeCheckStub = function (genFileName, originalFileName) {\n        var originalFile = this._analyzeFile(originalFileName);\n        var outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, 2 /* TypeCheck */);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    AotCompiler.prototype.loadFilesAsync = function (fileNames, tsFiles) {\n        var _this = this;\n        var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var loadingPromises = [];\n        files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) {\n            return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n        }); });\n        var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return Promise.all(loadingPromises).then(function (_) { return ({\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        }); });\n    };\n    AotCompiler.prototype.loadFilesSync = function (fileNames, tsFiles) {\n        var _this = this;\n        var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); }); });\n        var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return {\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        };\n    };\n    AotCompiler.prototype._createNgFactoryStub = function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the type-check block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(o.variable(varName)\n                    .set(o.NULL_EXPR.cast(o.DYNAMIC_TYPE))\n                    .toDeclStmt(o.expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ false))));\n            });\n            if (emitFlags & 2 /* TypeCheck */) {\n                // add the type-check block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    AotCompiler.prototype._externalIdentifierReferences = function (references) {\n        var result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var token = createTokenForExternalReference(this.reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    AotCompiler.prototype._createTypeCheckBlock = function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a;\n        var _b = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _b.template, usedPipes = _b.pipes;\n        (_a = ctx.statements).push.apply(_a, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n    };\n    AotCompiler.prototype.emitMessageBundle = function (analyzeResult, locale) {\n        var _this = this;\n        var errors = [];\n        var htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var html = compMeta.template.template;\n                // Template URL points to either an HTML or TS file depending on whether\n                // the file is used with `templateUrl:` or `template:`, respectively.\n                var templateUrl = compMeta.template.templateUrl;\n                var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                errors.push.apply(errors, messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    AotCompiler.prototype.emitAllPartialModules = function (_a, r3Files) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        var contextMap = new Map();\n        var getContext = function (fileName) {\n            if (!contextMap.has(fileName)) {\n                contextMap.set(fileName, _this._createOutputContext(fileName));\n            }\n            return contextMap.get(fileName);\n        };\n        files.forEach(function (file) { return _this._compilePartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables, getContext(file.fileName)); });\n        r3Files.forEach(function (file) { return _this._compileShallowModules(file.fileName, file.shallowModules, getContext(file.fileName)); });\n        return Array.from(contextMap.values())\n            .map(function (context) { return ({\n            fileName: context.genFilePath,\n            statements: context.constantPool.statements.concat(context.statements),\n        }); });\n    };\n    AotCompiler.prototype._compileShallowModules = function (fileName, shallowModules, context) {\n        var _this = this;\n        shallowModules.forEach(function (module) { return compileR3Module(context, module, _this._injectableCompiler); });\n    };\n    AotCompiler.prototype._compilePartialModule = function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables, context) {\n        var _this = this;\n        var errors = [];\n        var schemaRegistry = new DomElementSchemaRegistry();\n        var hostBindingParser = new BindingParser(this._templateParser.expressionParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var module = ngModuleByPipeOrDirective.get(directiveType);\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var htmlAst = directiveMetadata.template.htmlAst;\n                var preserveWhitespaces = directiveMetadata.template.preserveWhitespaces;\n                if (!preserveWhitespaces) {\n                    htmlAst = removeWhitespaces(htmlAst);\n                }\n                var render3Ast = htmlAstToRender3Ast(htmlAst.rootNodes, hostBindingParser);\n                // Map of StaticType by directive selectors\n                var directiveTypeBySel_1 = new Map();\n                var directives_1 = module.transitiveModule.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n                directives_1.forEach(function (directive) {\n                    if (directive.selector) {\n                        directiveTypeBySel_1.set(directive.selector, directive.type.reference);\n                    }\n                });\n                // Map of StaticType by pipe names\n                var pipeTypeByName_1 = new Map();\n                var pipes_1 = module.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n                pipes_1.forEach(function (pipe) { pipeTypeByName_1.set(pipe.name, pipe.type.reference); });\n                compileR3Component(context, directiveMetadata, render3Ast, _this.reflector, hostBindingParser, directiveTypeBySel_1, pipeTypeByName_1);\n            }\n            else {\n                compileR3Directive(context, directiveMetadata, _this.reflector, hostBindingParser);\n            }\n        });\n        pipes.forEach(function (pipeType) {\n            var pipeMetadata = _this._metadataResolver.getPipeMetadata(pipeType);\n            if (pipeMetadata) {\n                compileR3Pipe(context, pipeMetadata, _this.reflector);\n            }\n        });\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n    };\n    AotCompiler.prototype.emitAllPartialModules2 = function (files) {\n        var _this = this;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule2(file.fileName, file.injectables));\n            return r;\n        }, []);\n    };\n    AotCompiler.prototype._emitPartialModule2 = function (fileName, injectables) {\n        var _this = this;\n        var context = this._createOutputContext(fileName);\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var sourceModules = files.map(function (file) { return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var generatedFiles = [];\n        var outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta);\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    AotCompiler.prototype._createSummary = function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var typeData = ngModules.map(function (meta) { return ({\n            summary: _this._metadataResolver.getNgModuleSummary(meta.type.reference),\n            metadata: _this._metadataResolver.getNgModuleMetadata(meta.type.reference)\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: _this._metadataResolver.getDirectiveSummary(ref),\n            metadata: _this._metadataResolver.getDirectiveMetadata(ref)\n        }); }), pipes.map(function (ref) { return ({\n            summary: _this._metadataResolver.getPipeSummary(ref),\n            metadata: _this._metadataResolver.getPipeMetadata(ref)\n        }); }), injectables.map(function (ref) { return ({\n            summary: _this._metadataResolver.getInjectableSummary(ref.symbol),\n            metadata: _this._metadataResolver.getInjectableSummary(ref.symbol).type\n        }); }));\n        var forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(o.variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                o.StmtModifier.Exported\n            ]));\n        });\n        var summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModule) {\n        var providers = [];\n        if (this._options.locale) {\n            var normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var inputsExprs = [];\n        for (var propName in compMeta.inputs) {\n            var templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        var outputsExprs = [];\n        for (var propName in compMeta.outputs) {\n            var templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        outputCtx.statements.push(o.variable(compFactoryVar)\n            .set(o.importExpr(Identifiers.createComponentFactory).callFn([\n            o.literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            o.variable(hostViewFactoryVar), new o.LiteralMapExpr(inputsExprs),\n            new o.LiteralMapExpr(outputsExprs),\n            o.literalArr(compMeta.template.ngContentSelectors.map(function (selector) { return o.literal(selector); }))\n        ]))\n            .toDeclStmt(o.importType(Identifiers.ComponentFactory, [o.expressionType(outputCtx.importExpr(compMeta.type.reference))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n    };\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n        var viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    AotCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return this._templateAstCache.get(compMeta.type.reference);\n        }\n        var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n        var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var result = this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var importExpr = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var suppliedTypeParams = typeParams || [];\n            var missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(o.DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, o.importExpr(new o.ExternalReference(moduleName, name, null), allTypeParams));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr, constantPool: new ConstantPool() };\n    };\n    AotCompiler.prototype._fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var outputCtx = this._createOutputContext(_stylesModuleUrl(stylesheetMetadata.moduleUrl, isShimmed, fileSuffix));\n        var compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    AotCompiler.prototype.listLazyRoutes = function (entryRoute, analyzedModules) {\n        var self = this;\n        if (entryRoute) {\n            var symbol = parseLazyRoute(entryRoute, this.reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var lazyRoutes = listLazyRoutes(ngModule, this.reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var lazyRoutes = listLazyRoutes(self._metadataResolver.getNgModuleMetadata(symbol, true), self.reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\nexport { AotCompiler };\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(o.importExpr(Identifiers.ComponentFactory).toStmt());\n}\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\nexport function analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\nexport function analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n// Analyzes all of the program files,\n// including files that are not part of the program\n// but are referenced by an NgModule.\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var seenFiles = new Set();\n    var files = [];\n    var visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\nexport function analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var directives = [];\n    var pipes = [];\n    var injectables = [];\n    var ngModules = [];\n    var hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\nexport function analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n    var injectables = [];\n    var shallowModules = [];\n    if (staticSymbolResolver.hasDecorators(fileName)) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isInjectable(symbol)) {\n                    var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var module = metadataResolver.getShallowModuleMetadata(symbol);\n                    if (module) {\n                        shallowModules.push(module);\n                    }\n                }\n            }\n        });\n    }\n    return { fileName: fileName, injectables: injectables, shallowModules: shallowModules };\n}\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        Visitor.prototype.visitArray = function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        Visitor.prototype.visitStringMap = function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        Visitor.prototype.visitPrimitive = function (value, context) { };\n        Visitor.prototype.visitOther = function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\nexport function mergeAnalyzedFiles(analyzedFiles) {\n    var allNgModules = [];\n    var ngModuleByPipeOrDirective = new Map();\n    var allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { syntaxError } from '../util';\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var prefix = position && indent === 0 ? position + \": \" : '';\n    var postfix = position && indent !== 0 ? \" at \" + position : '';\n    var message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\nexport function formattedError(chain) {\n    var message = formatChain(chain) + '.';\n    var error = syntaxError(message);\n    error[FORMATTED_MESSAGE] = true;\n    error.chain = chain;\n    error.position = chain.position;\n    return error;\n}\nexport function isFormattedError(error) {\n    return !!error[FORMATTED_MESSAGE];\n}\n//# sourceMappingURL=formatted_error.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { CompileSummaryKind } from '../compile_metadata';\nimport { createAttribute, createComponent, createContentChild, createContentChildren, createDirective, createHost, createHostBinding, createHostListener, createInject, createInjectable, createInput, createNgModule, createOptional, createOutput, createPipe, createSelf, createSkipSelf, createViewChild, createViewChildren } from '../core';\nimport { syntaxError } from '../util';\nimport { formattedError } from './formatted_error';\nimport { StaticSymbol } from './static_symbol';\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data', 'id', 'loadChildren']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.shallowAnnotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    StaticReflector.prototype.resolveExternalReference = function (ref, containingFile) {\n        var key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var refSymbol = this.symbolResolver.getSymbolByModule(ref.moduleName, ref.name, containingFile);\n        var declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, ref.moduleName);\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name, containingFile) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name, containingFile); });\n    };\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    StaticReflector.prototype.tryAnnotations = function (type) {\n        var originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        try {\n            return this.annotations(type);\n        }\n        finally {\n            this.errorRecorder = originalRecorder;\n        }\n    };\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators); }, this.annotationCache);\n    };\n    StaticReflector.prototype.shallowAnnotations = function (type) {\n        var _this = this;\n        return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators, true); }, this.shallowAnnotationCache);\n    };\n    StaticReflector.prototype._annotations = function (type, simplify, annotationCache) {\n        var annotations = annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var classMetadata = this.getTypeMetadata(type);\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = simplify(type, classMetadata['decorators']);\n                if (ownAnnotations_1) {\n                    annotations.push.apply(annotations, ownAnnotations_1);\n                }\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var requiredAnnotationTypes = this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind);\n                    var typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[summary.type.summaryKind] + \" in another compilation unit without duplicating the decorator\", \n                        /* summary */ undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    propMetadata[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var propData = members_1[propName];\n                var prop = propData\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var decorators = [];\n                if (propMetadata[propName]) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                propMetadata[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var classMetadata = this.getTypeMetadata(type);\n                var parentType = this.findParentType(type, classMetadata);\n                var members = classMetadata ? classMetadata['members'] : null;\n                var ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var ctor = ctorData.find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var rawParameterTypes = ctor['parameters'] || [];\n                    var parameterDecorators_1 = this.simplify(type, ctor['parameterDecorators'] || []);\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var nestedResult = [];\n                        var paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        }\n                        parameters_1.push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    StaticReflector.prototype._methodNames = function (type) {\n        var methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    methodNames[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var propData = members_2[propName];\n                var isMethod = propData.some(function (a) { return a['__symbolic'] == 'method'; });\n                methodNames[propName] = methodNames[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    StaticReflector.prototype._staticMembers = function (type) {\n        var staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var classMetadata = this.getTypeMetadata(type);\n            var staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    StaticReflector.prototype.guards = function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var staticMembers = this._staticMembers(type);\n        var result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                var property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                var value = void 0;\n                if (property.endsWith(USE_IF)) {\n                    property = name_1.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    };\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /** @internal */\n    StaticReflector.prototype.simplify = function (context, value, lazy) {\n        if (lazy === void 0) { lazy = false; }\n        var self = this;\n        var scope = BindingScope.empty;\n        var calling = new Map();\n        var rootContext = context;\n        function simplifyInContext(context, value, depth, references) {\n            function resolveReferenceValue(staticSymbol) {\n                var resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var summaryMsg = e.chain ? 'references \\'' + e.symbol.name + '\\'' : errorSummary(e);\n                        var summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var parameters = targetFunction['parameters'];\n                            var defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var functionScope = BindingScope.build();\n                            for (var i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var oldScope = scope;\n                            var result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var line = targetExpression.line;\n                    var character = targetExpression.character;\n                    var fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var result_2 = [];\n                    for (var _i = 0, _a = expression; _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var staticSymbol = expression;\n                        var declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var indexTarget = simplifyEagerly(expression['expression']);\n                                var index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var member = expression['member'];\n                                var selectContext = context;\n                                var selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var name_2 = expression['name'];\n                                var localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var argExpressions = expression['arguments'] || [];\n                                    var converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var result;\n        try {\n            result = simplifyInContext(context, value, 0, lazy ? 1 : 0);\n        }\n        catch (e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    StaticReflector.prototype.error = function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nexport { StaticReflector };\nvar METADATA_ERROR = 'ngMetadataError';\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var error = syntaxError(message);\n    error[METADATA_ERROR] = true;\n    if (advise)\n        error.advise = advise;\n    if (position)\n        error.position = position;\n    if (summary)\n        error.summary = summary;\n    if (context)\n        error.context = context;\n    if (chain)\n        error.chain = chain;\n    if (symbol)\n        error.symbol = symbol;\n    return error;\n}\nfunction isMetadataError(error) {\n    return !!error[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\nfunction errorSummary(error) {\n    if (error.summary) {\n        return error.summary;\n    }\n    switch (error.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error.context && error.context.className) {\n                return \"references non-exported class \" + error.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error.context && error.context.name) {\n                return \"calls '\" + error.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error.context && error.context.name) {\n                return \"references local variable \" + error.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var result = {};\n    Object.keys(input).forEach(function (key) {\n        var value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nvar BindingScope = /** @class */ (function () {\n    function BindingScope() {\n    }\n    BindingScope.build = function () {\n        var current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    tslib_1.__extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\nfunction formatMetadataMessageChain(chain, advise) {\n    var expanded = expandedMessage(chain.message, chain.context);\n    var nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var message = \"\" + expanded + nesting;\n    var position = chain.position;\n    var next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var position = e.position;\n        var chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n//# sourceMappingURL=static_reflector.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { deserializeSummaries } from './summary_serializer';\nimport { stripGeneratedFileSuffix, summaryFileName } from './util';\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        // Note: this will only contain StaticSymbols without members!\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        // Note: this will only contain StaticSymbols without members!\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    AotSummaryResolver.prototype.toSummaryFileName = function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    AotSummaryResolver.prototype.fromSummaryFileName = function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        var rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = this.summaryCache.get(staticSymbol);\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return this.importAs.get(staticSymbol);\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        var hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var json = null;\n        if (this.isLibraryFile(filePath)) {\n            var summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\nexport { AotSummaryResolver };\n//# sourceMappingURL=summary_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompilerConfig } from '../config';\nimport { ViewEncapsulation } from '../core';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { Lexer } from '../expression_parser/lexer';\nimport { Parser } from '../expression_parser/parser';\nimport { I18NHtmlParser } from '../i18n/i18n_html_parser';\nimport { InjectableCompiler } from '../injectable_compiler';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { NgModuleCompiler } from '../ng_module_compiler';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { StyleCompiler } from '../style_compiler';\nimport { TemplateParser } from '../template_parser/template_parser';\nimport { syntaxError } from '../util';\nimport { TypeCheckCompiler } from '../view_compiler/type_check_compiler';\nimport { ViewCompiler } from '../view_compiler/view_compiler';\nimport { AotCompiler } from './compiler';\nimport { StaticReflector } from './static_reflector';\nimport { StaticSymbolCache } from './static_symbol';\nimport { StaticSymbolResolver } from './static_symbol_resolver';\nimport { AotSummaryResolver } from './summary_resolver';\nexport function createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n */\nexport function createAotCompiler(compilerHost, options, errorCollector) {\n    var translations = options.translations || '';\n    var urlResolver = createAotUrlResolver(compilerHost);\n    var symbolCache = new StaticSymbolCache();\n    var summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var htmlParser;\n    if (!!options.enableIvy) {\n        // Ivy handles i18n at the compiler level so we must use a regular parser\n        htmlParser = new HtmlParser();\n    }\n    else {\n        htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    }\n    var config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var expressionParser = new Parser(new Lexer());\n    var elementSchemaRegistry = new DomElementSchemaRegistry();\n    var tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var viewCompiler = new ViewCompiler(staticReflector);\n    var typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector, !!options.enableIvy), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n//# sourceMappingURL=compiler_factory.js.map","var SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nexport { SummaryResolver };\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    JitSummaryResolver.prototype.isLibraryFile = function () { return false; };\n    JitSummaryResolver.prototype.toSummaryFileName = function (fileName) { return fileName; };\n    JitSummaryResolver.prototype.fromSummaryFileName = function (fileName) { return fileName; };\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    JitSummaryResolver.prototype.getSymbolsOf = function () { return []; };\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    JitSummaryResolver.prototype.getKnownModuleName = function (fileName) { return null; };\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\nexport { JitSummaryResolver };\n//# sourceMappingURL=summary_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { debugOutputAstAsTypeScript } from './ts_emitter';\nexport function interpretStatements(statements, reflector) {\n    var ctx = new _ExecutionContext(null, null, null, new Map());\n    var visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var childCtx = ctx.createChildWihtLocalVars();\n    for (var i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[method.name] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        var initialValue = stmt.value ? stmt.value.visitExpression(this, ctx) : undefined;\n        ctx.vars.set(stmt.name, initialValue);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var value = expr.value.visitExpression(this, ctx);\n        var currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    StatementInterpreter.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot interpret a WrappedNodeExpr.');\n    };\n    StatementInterpreter.prototype.visitTypeofExpr = function (ast, ctx) {\n        throw new Error('Cannot interpret a TypeofExpr');\n    };\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case o.BuiltinVar.This:\n                    return ctx.instance;\n                case o.BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR;\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var index = expr.index.visitExpression(this, ctx);\n        var value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var args = this.visitAllExpressions(expr.args, ctx);\n        var result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case o.BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case o.BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case o.BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[expr.name].apply(receiver, args);\n        }\n        return result;\n    };\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var args = this.visitAllExpressions(stmt.args, ctx);\n        var fnExpr = stmt.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var fn = stmt.fn.visitExpression(this, ctx);\n            return fn.apply(null, args);\n        }\n    };\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR, e);\n            childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    StatementInterpreter.prototype.visitJSDocCommentStmt = function (stmt, context) { return null; };\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var args = this.visitAllExpressions(ast.args, ctx);\n        var clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                return lhs() == rhs();\n            case o.BinaryOperator.Identical:\n                return lhs() === rhs();\n            case o.BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case o.BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case o.BinaryOperator.And:\n                return lhs() && rhs();\n            case o.BinaryOperator.Or:\n                return lhs() || rhs();\n            case o.BinaryOperator.Plus:\n                return lhs() + rhs();\n            case o.BinaryOperator.Minus:\n                return lhs() - rhs();\n            case o.BinaryOperator.Divide:\n                return lhs() / rhs();\n            case o.BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case o.BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case o.BinaryOperator.Lower:\n                return lhs() < rhs();\n            case o.BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case o.BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case o.BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var result;\n        var receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var receiver = ast.receiver.visitExpression(this, ctx);\n        var prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var i = 0; i < statements.length; i++) {\n            var stmt = statements[i];\n            var val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR = 'error';\nvar CATCH_STACK_VAR = 'stack';\n//# sourceMappingURL=output_interpreter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { identifierName } from '../compile_metadata';\nimport { EmitterVisitorContext } from './abstract_emitter';\nimport { AbstractJsEmitterVisitor } from './abstract_js_emitter';\nimport * as o from './output_ast';\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var fnArgNames = [];\n    var fnArgValues = [];\n    for (var argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\nexport function jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var converter = new JitEmitterVisitor(reflector);\n    var ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var stmt = new o.ReturnStatement(new o.LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new o.LiteralMapEntry(resultVar, o.variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var result = {};\n        for (var i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._emitReferenceToExternal(ast, this.reflector.resolveExternalReference(ast.value), ctx);\n        return null;\n    };\n    JitEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        this._emitReferenceToExternal(ast, ast.node, ctx);\n        return null;\n    };\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype._emitReferenceToExternal = function (ast, value, ctx) {\n        var id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\nexport { JitEmitterVisitor };\n//# sourceMappingURL=output_jit.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR } from './abstract_emitter';\nimport * as o from './output_ast';\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    AbstractJsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n    };\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === o.BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === o.BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name);\n        if (stmt.value) {\n            ctx.print(stmt, ' = ');\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var fnExpr = expr.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            ctx.currentClass.parent.visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR.name + \") {\");\n        ctx.incIndent();\n        var catchStmts = [CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ])].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\nexport { AbstractJsEmitterVisitor };\n//# sourceMappingURL=abstract_js_emitter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl } from '../compile_metadata';\nimport { ConstantPool } from '../constant_pool';\nimport * as ir from '../output/output_ast';\nimport { interpretStatements } from '../output/output_interpreter';\nimport { jitStatements } from '../output/output_jit';\nimport { SyncAsync, stringify } from '../util';\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * @security  When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var summary = this._metadataResolver.getDirectiveSummary(component);\n        return summary.componentFactory;\n    };\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    JitCompiler.prototype._addAotSummaries = function (fn) {\n        if (this._addedAotSummaries.has(fn)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn);\n        var summaries = fn();\n        for (var i = 0; i < summaries.length; i++) {\n            var entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var summary = entry;\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var loading = [];\n        var mainNgModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var moduleMeta = _this._metadataResolver.getNgModuleMetadata(nestedNgModule);\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n        if (!ngModuleFactory) {\n            var moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n            // Always provide a bound Compiler\n            var extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var outputCtx = createOutputContext();\n            var compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        var moduleByJitDirective = new Map();\n        var templates = new Set();\n        var transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(dirMeta.componentFactory);\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    JitCompiler.prototype.clearCache = function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, compMeta.componentFactory.viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var compMeta = template.compMeta;\n        var externalStylesheetsByModuleUrl = new Map();\n        var outputContext = createOutputContext();\n        var componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n        compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n            var compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl, compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar), usedPipes);\n        var evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var viewClass = evalResult[compileResult.viewClassVar];\n        var rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    JitCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n        var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n    };\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n            var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    JitCompiler.prototype._interpretOrJit = function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nexport { JitCompiler };\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = null;\n        this.isCompiled = false;\n    }\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        this.compMeta.componentViewType.setDelegate(viewClass);\n        for (var prop in rendererType) {\n            this.compMeta.rendererType[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\nfunction createOutputContext() {\n    var importExpr = function (symbol) {\n        return ir.importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr, constantPool: new ConstantPool() };\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {@link UrlResolver} with no package prefix.\n */\nexport function createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\nexport function createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\nexport var UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    UrlResolverImpl.prototype.resolve = function (baseUrl, url) {\n        var resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var resolvedParts = _split(resolvedUrl);\n        var prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n */\nexport function getUrlScheme(url) {\n    var match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n// The code below is adapted from Traceur:\n// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param opt_scheme The scheme such as 'http'.\n * @param opt_userInfo The user name before the '@'.\n * @param opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param opt_port The port number.\n * @param opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param opt_queryData The URI-encoded query data.\n * @param opt_fragment The URI-encoded fragment identifier.\n * @return The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\nvar _ComponentIndex;\n(function (_ComponentIndex) {\n    _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n    _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n    _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n    _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n    _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n    _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n    _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n})(_ComponentIndex || (_ComponentIndex = {}));\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param uri The URI string to examine.\n * @return Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return uri.match(_splitRe);\n}\n/**\n  * Removes dot segments in given path component, as described in\n  * RFC 3986, section 5.2.4.\n  *\n  * @param path A non-empty path component.\n  * @return Path component with removed dot segments.\n  */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var leadingSlash = path[0] == '/' ? '/' : '';\n    var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var segments = path.split('/');\n    var out = [];\n    var up = 0;\n    for (var pos = 0; pos < segments.length; pos++) {\n        var segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param base The URL acting as the base URL.\n * @param to The URL to resolve.\n */\nfunction _resolveUrl(base, url) {\n    var parts = _split(encodeURI(url));\n    var baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n//# sourceMappingURL=url_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\nexport { ResourceLoader };\n//# sourceMappingURL=resource_loader.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nimport { analyzeAndValidateNgModules } from '../aot/compiler';\nimport { createAotUrlResolver } from '../aot/compiler_factory';\nimport { StaticReflector } from '../aot/static_reflector';\nimport { StaticSymbolCache } from '../aot/static_symbol';\nimport { StaticSymbolResolver } from '../aot/static_symbol_resolver';\nimport { AotSummaryResolver } from '../aot/summary_resolver';\nimport { CompilerConfig } from '../config';\nimport { ViewEncapsulation } from '../core';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { MessageBundle } from './message_bundle';\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var errors = [];\n            files.forEach(function (file) {\n                var compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var html = compMeta.template.template;\n                    // Template URL points to either an HTML or TS file depending on\n                    // whether the file is used with `templateUrl:` or `template:`,\n                    // respectively.\n                    var templateUrl = compMeta.template.templateUrl;\n                    var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                    errors.push.apply(errors, _this.messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    Extractor.create = function (host, locale) {\n        var htmlParser = new HtmlParser();\n        var urlResolver = createAotUrlResolver(host);\n        var symbolCache = new StaticSymbolCache();\n        var summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var elementSchemaRegistry = new DomElementSchemaRegistry();\n        var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\nexport { Extractor };\n//# sourceMappingURL=extractor.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from '../output/output_ast';\nimport { jitStatements } from '../output/output_jit';\n/**\n * Implementation of `CompileReflector` which resolves references to @angular/core\n * symbols at runtime, according to a consumer-provided mapping.\n *\n * Only supports `resolveExternalReference`, all other methods throw.\n */\nvar R3JitReflector = /** @class */ (function () {\n    function R3JitReflector(context) {\n        this.context = context;\n    }\n    R3JitReflector.prototype.resolveExternalReference = function (ref) {\n        // This reflector only handles @angular/core imports.\n        if (ref.moduleName !== '@angular/core') {\n            throw new Error(\"Cannot resolve external reference to \" + ref.moduleName + \", only references to @angular/core are supported.\");\n        }\n        if (!this.context.hasOwnProperty(ref.name)) {\n            throw new Error(\"No value provided for @angular/core symbol '\" + ref.name + \"'.\");\n        }\n        return this.context[ref.name];\n    };\n    R3JitReflector.prototype.parameters = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.annotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.shallowAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.tryAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.propMetadata = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.guards = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { throw new Error('Not implemented.'); };\n    return R3JitReflector;\n}());\n/**\n * JIT compiles an expression and returns the result of executing that expression.\n *\n * @param def the definition which will be compiled and executed to get the value to patch\n * @param context an object map of @angular/core symbol names to symbols which will be available in\n * the context of the compiled expression\n * @param sourceUrl a URL to use for the source map of the compiled expression\n * @param constantPool an optional `ConstantPool` which contains constants used in the expression\n */\nexport function jitExpression(def, context, sourceUrl, preStatements) {\n    // The ConstantPool may contain Statements which declare variables used in the final expression.\n    // Therefore, its statements need to precede the actual JIT operation. The final statement is a\n    // declaration of $def which is set to the expression being compiled.\n    var statements = preStatements.concat([\n        new o.DeclareVarStmt('$def', def, undefined, [o.StmtModifier.Exported]),\n    ]);\n    var res = jitStatements(sourceUrl, statements, new R3JitReflector(context), false);\n    return res['$def'];\n}\n//# sourceMappingURL=r3_jit.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { R3FactoryDelegateType, compileFactoryFunction } from './render3/r3_factory';\nimport { mapToMapExpression } from './render3/util';\nexport function compileInjectable(meta) {\n    var result = null;\n    function makeFn(ret) {\n        return o.fn([], [new o.ReturnStatement(ret)], undefined, undefined, meta.name + \"_Factory\");\n    }\n    var factoryMeta = {\n        name: meta.name,\n        type: meta.type,\n        deps: meta.ctorDeps,\n        injectFn: Identifiers.inject,\n    };\n    if (meta.useClass !== undefined) {\n        // meta.useClass has two modes of operation. Either deps are specified, in which case `new` is\n        // used to instantiate the class with dependencies injected, or deps are not specified and\n        // the factory of the class is used to instantiate it.\n        //\n        // A special case exists for useClass: Type where Type is the injectable type itself, in which\n        // case omitting deps just uses the constructor dependencies instead.\n        var useClassOnSelf = meta.useClass.isEquivalent(meta.type);\n        var deps = meta.userDeps || (useClassOnSelf && meta.ctorDeps) || undefined;\n        if (deps !== undefined) {\n            // factory: () => new meta.useClass(...deps)\n            result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { delegate: meta.useClass, delegateDeps: deps, delegateType: R3FactoryDelegateType.Class }));\n        }\n        else {\n            result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { delegate: meta.useClass, delegateType: R3FactoryDelegateType.Factory }));\n        }\n    }\n    else if (meta.useFactory !== undefined) {\n        result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { delegate: meta.useFactory, delegateDeps: meta.userDeps || [], delegateType: R3FactoryDelegateType.Function }));\n    }\n    else if (meta.useValue !== undefined) {\n        // Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for\n        // client code because meta.useValue is an Expression which will be defined even if the actual\n        // value is undefined.\n        result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { expression: meta.useValue }));\n    }\n    else if (meta.useExisting !== undefined) {\n        // useExisting is an `inject` call on the existing token.\n        result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { expression: o.importExpr(Identifiers.inject).callFn([meta.useExisting]) }));\n    }\n    else {\n        result = compileFactoryFunction(factoryMeta);\n    }\n    var token = meta.type;\n    var providedIn = meta.providedIn;\n    var expression = o.importExpr(Identifiers.defineInjectable).callFn([mapToMapExpression({ token: token, factory: result.factory, providedIn: providedIn })]);\n    var type = new o.ExpressionType(o.importExpr(Identifiers.InjectableDef, [new o.ExpressionType(meta.type)]));\n    return {\n        expression: expression,\n        type: type,\n        statements: result.statements,\n    };\n}\n//# sourceMappingURL=injectable_compiler_2.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '@angular/compiler';\n\n/**\n * The range of a span of text in a source file.\n *\n * @experimental\n */\nexport interface Span {\n  /**\n   * The first code-point of the span as an offset relative to the beginning of the source assuming\n   * a UTF-16 encoding.\n   */\n  start: number;\n\n  /**\n   * The first code-point after the span as an offset relative to the beginning of the source\n   * assuming a UTF-16 encoding.\n   */\n  end: number;\n}\n\n/**\n * A file and span.\n */\nexport interface Location {\n  fileName: string;\n  span: Span;\n}\n\n/**\n * A defnition location(s).\n */\nexport type Definition = Location[] | undefined;\n\n/**\n * A symbol describing a language element that can be referenced by expressions\n * in an Angular template.\n *\n * @experimental\n */\nexport interface Symbol {\n  /**\n   * The name of the symbol as it would be referenced in an Angular expression.\n   */\n  readonly name: string;\n\n  /**\n   * The kind of completion this symbol should generate if included.\n   */\n  readonly kind: string;\n\n  /**\n   * The language of the source that defines the symbol. (e.g. typescript for TypeScript,\n   * ng-template for an Angular template, etc.)\n   */\n  readonly language: string;\n\n  /**\n   * A symbol representing type of the symbol.\n   */\n  readonly type: Symbol|undefined;\n\n  /**\n   * A symbol for the container of this symbol. For example, if this is a method, the container\n   * is the class or interface of the method. If no container is appropriate, undefined is\n   * returned.\n   */\n  readonly container: Symbol|undefined;\n\n  /**\n   * The symbol is public in the container.\n   */\n  readonly public: boolean;\n\n  /**\n   * `true` if the symbol can be the target of a call.\n   */\n  readonly callable: boolean;\n\n  /**\n   * The location of the definition of the symbol\n   */\n  readonly definition: Definition|undefined;\n\n  /**\n   * `true` if the symbol is a type that is nullable (can be null or undefined).\n   */\n  readonly nullable: boolean;\n\n  /**\n   * A table of the members of the symbol; that is, the members that can appear\n   * after a `.` in an Angular expression.\n   */\n  members(): SymbolTable;\n\n  /**\n   * The list of overloaded signatures that can be used if the symbol is the\n   * target of a call.\n   */\n  signatures(): Signature[];\n\n  /**\n   * Return which signature of returned by `signatures()` would be used selected\n   * given the `types` supplied. If no signature would match, this method should\n   * return `undefined`.\n   */\n  selectSignature(types: Symbol[]): Signature|undefined;\n\n  /**\n   * Return the type of the expression if this symbol is indexed by `argument`.\n   * If the symbol cannot be indexed, this method should return `undefined`.\n   */\n  indexed(argument: Symbol): Symbol|undefined;\n}\n\n/**\n * A table of `Symbol`s accessible by name.\n *\n * @experimental\n */\nexport interface SymbolTable {\n  /**\n   * The number of symbols in the table.\n   */\n  readonly size: number;\n\n  /**\n   * Get the symbol corresponding to `key` or `undefined` if there is no symbol in the\n   * table by the name `key`.\n   */\n  get(key: string): Symbol|undefined;\n\n  /**\n   * Returns `true` if the table contains a `Symbol` with the name `key`.\n   */\n  has(key: string): boolean;\n\n  /**\n   * Returns all the `Symbol`s in the table. The order should be, but is not required to be,\n   * in declaration order.\n   */\n  values(): Symbol[];\n}\n\n/**\n * A description of a function or method signature.\n *\n * @experimental\n */\nexport interface Signature {\n  /**\n   * The arguments of the signture. The order of `arguments.symbols()` must be in the order\n   * of argument declaration.\n   */\n  readonly arguments: SymbolTable;\n\n  /**\n   * The symbol of the signature result type.\n   */\n  readonly result: Symbol;\n}\n\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nexport enum BuiltinType {\n  /**\n   * The type is a type that can hold any other type.\n   */\n  Any,\n\n  /**\n   * The type of a string literal.\n   */\n  String,\n\n  /**\n   * The type of a numeric literal.\n   */\n  Number,\n\n  /**\n   * The type of the `true` and `false` literals.\n   */\n  Boolean,\n\n  /**\n   * The type of the `undefined` literal.\n   */\n  Undefined,\n\n  /**\n   * the type of the `null` literal.\n   */\n  Null,\n\n  /**\n   * the type is an unbound type parameter.\n   */\n  Unbound,\n\n  /**\n   * Not a built-in type.\n   */\n  Other\n}\n\n/**\n * The kinds of definition.\n *\n * @experimental\n */\nexport type DeclarationKind = 'attribute' | 'html attribute' | 'component' | 'element' | 'entity' |\n    'key' | 'method' | 'pipe' | 'property' | 'type' | 'reference' | 'variable';\n\n/**\n * Describes a symbol to type binding used to build a symbol table.\n *\n * @experimental\n */\nexport interface SymbolDeclaration {\n  /**\n   * The name of the symbol in table.\n   */\n  readonly name: string;\n\n  /**\n   * The kind of symbol to declare.\n   */\n  readonly kind: DeclarationKind;\n\n  /**\n   * Type of the symbol. The type symbol should refer to a symbol for a type.\n   */\n  readonly type: Symbol;\n\n  /**\n   * The definion of the symbol if one exists.\n   */\n  readonly definition?: Definition;\n}\n\n/**\n * Information about the pipes that are available for use in a template.\n *\n * @experimental\n */\nexport interface PipeInfo {\n  /**\n   * The name of the pipe.\n   */\n  name: string;\n\n  /**\n   * The static symbol for the pipe's constructor.\n   */\n  symbol: StaticSymbol;\n}\n\n/**\n * A sequence of pipe information.\n *\n * @experimental\n */\nexport type Pipes = PipeInfo[] | undefined;\n\n/**\n * Describes the language context in which an Angular expression is evaluated.\n *\n * @experimental\n */\nexport interface SymbolQuery {\n  /**\n   * Return the built-in type this symbol represents or Other if it is not a built-in type.\n   */\n  getTypeKind(symbol: Symbol): BuiltinType;\n\n  /**\n   * Return a symbol representing the given built-in type.\n   */\n  getBuiltinType(kind: BuiltinType): Symbol;\n\n  /**\n   * Return the symbol for a type that represents the union of all the types given. Any value\n   * of one of the types given should be assignable to the returned type. If no one type can\n   * be constructed then this should be the Any type.\n   */\n  getTypeUnion(...types: Symbol[]): Symbol;\n\n  /**\n   * Return a symbol for an array type that has the `type` as its element type.\n   */\n  getArrayType(type: Symbol): Symbol;\n\n  /**\n   * Return element type symbol for an array type if the `type` is an array type. Otherwise return\n   * undefined.\n   */\n  getElementType(type: Symbol): Symbol|undefined;\n\n  /**\n   * Return a type that is the non-nullable version of the given type. If `type` is already\n   * non-nullable, return `type`.\n   */\n  getNonNullableType(type: Symbol): Symbol;\n\n  /**\n   * Return a symbol table for the pipes that are in scope.\n   */\n  getPipes(): SymbolTable;\n\n  /**\n   * Return the type symbol for the given static symbol.\n   */\n  getTypeSymbol(type: StaticSymbol): Symbol|undefined;\n\n  /**\n   * Return the members that are in the context of a type's template reference.\n   */\n  getTemplateContext(type: StaticSymbol): SymbolTable|undefined;\n\n  /**\n   * Produce a symbol table with the given symbols. Used to produce a symbol table\n   * for use with mergeSymbolTables().\n   */\n  createSymbolTable(symbols: SymbolDeclaration[]): SymbolTable;\n\n  /**\n   * Produce a merged symbol table. If the symbol tables contain duplicate entries\n   * the entries of the latter symbol tables will obscure the entries in the prior\n   * symbol tables.\n   *\n   * The symbol tables passed to this routine MUST be produces by the same instance\n   * of SymbolQuery that is being called.\n   */\n  mergeSymbolTable(symbolTables: SymbolTable[]): SymbolTable;\n\n  /**\n   * Return the span of the narrowest non-token node at the given location.\n   */\n  getSpanAt(line: number, column: number): Span|undefined;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, AstVisitor, Binary, BindingPipe, Chain, Conditional, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralPrimitive, MethodCall, NonNullAssert, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, visitAstChildren} from '@angular/compiler';\n\nimport {BuiltinType, Signature, Span, Symbol, SymbolQuery, SymbolTable} from './symbols';\n\nexport interface ExpressionDiagnosticsContext { event?: boolean; }\n\nexport enum DiagnosticKind {\n  Error,\n  Warning,\n}\n\nexport class TypeDiagnostic {\n  constructor(public kind: DiagnosticKind, public message: string, public ast: AST) {}\n}\n\n// AstType calculatetype of the ast given AST element.\nexport class AstType implements AstVisitor {\n  // TODO(issue/24571): remove '!'.\n  public diagnostics !: TypeDiagnostic[];\n\n  constructor(\n      private scope: SymbolTable, private query: SymbolQuery,\n      private context: ExpressionDiagnosticsContext) {}\n\n  getType(ast: AST): Symbol { return ast.visit(this); }\n\n  getDiagnostics(ast: AST): TypeDiagnostic[] {\n    this.diagnostics = [];\n    const type: Symbol = ast.visit(this);\n    if (this.context.event && type.callable) {\n      this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n    }\n    return this.diagnostics;\n  }\n\n  visitBinary(ast: Binary): Symbol {\n    // Treat undefined and null as other.\n    function normalize(kind: BuiltinType, other: BuiltinType): BuiltinType {\n      switch (kind) {\n        case BuiltinType.Undefined:\n        case BuiltinType.Null:\n          return normalize(other, BuiltinType.Other);\n      }\n      return kind;\n    }\n\n    const getType = (ast: AST, operation: string): Symbol => {\n      const type = this.getType(ast);\n      if (type.nullable) {\n        switch (operation) {\n          case '&&':\n          case '||':\n          case '==':\n          case '!=':\n          case '===':\n          case '!==':\n            // Nullable allowed.\n            break;\n          default:\n            this.reportError(`The expression might be null`, ast);\n            break;\n        }\n        return this.query.getNonNullableType(type);\n      }\n      return type;\n    };\n\n    const leftType = getType(ast.left, ast.operation);\n    const rightType = getType(ast.right, ast.operation);\n    const leftRawKind = this.query.getTypeKind(leftType);\n    const rightRawKind = this.query.getTypeKind(rightType);\n    const leftKind = normalize(leftRawKind, rightRawKind);\n    const rightKind = normalize(rightRawKind, leftRawKind);\n\n    // The following swtich implements operator typing similar to the\n    // type production tables in the TypeScript specification.\n    // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n    const operKind = leftKind << 8 | rightKind;\n    switch (ast.operation) {\n      case '*':\n      case '/':\n      case '%':\n      case '-':\n      case '<<':\n      case '>>':\n      case '>>>':\n      case '&':\n      case '^':\n      case '|':\n        switch (operKind) {\n          case BuiltinType.Any << 8 | BuiltinType.Any:\n          case BuiltinType.Number << 8 | BuiltinType.Any:\n          case BuiltinType.Any << 8 | BuiltinType.Number:\n          case BuiltinType.Number << 8 | BuiltinType.Number:\n            return this.query.getBuiltinType(BuiltinType.Number);\n          default:\n            let errorAst = ast.left;\n            switch (leftKind) {\n              case BuiltinType.Any:\n              case BuiltinType.Number:\n                errorAst = ast.right;\n                break;\n            }\n            return this.reportError('Expected a numeric type', errorAst);\n        }\n      case '+':\n        switch (operKind) {\n          case BuiltinType.Any << 8 | BuiltinType.Any:\n          case BuiltinType.Any << 8 | BuiltinType.Boolean:\n          case BuiltinType.Any << 8 | BuiltinType.Number:\n          case BuiltinType.Any << 8 | BuiltinType.Other:\n          case BuiltinType.Boolean << 8 | BuiltinType.Any:\n          case BuiltinType.Number << 8 | BuiltinType.Any:\n          case BuiltinType.Other << 8 | BuiltinType.Any:\n            return this.anyType;\n          case BuiltinType.Any << 8 | BuiltinType.String:\n          case BuiltinType.Boolean << 8 | BuiltinType.String:\n          case BuiltinType.Number << 8 | BuiltinType.String:\n          case BuiltinType.String << 8 | BuiltinType.Any:\n          case BuiltinType.String << 8 | BuiltinType.Boolean:\n          case BuiltinType.String << 8 | BuiltinType.Number:\n          case BuiltinType.String << 8 | BuiltinType.String:\n          case BuiltinType.String << 8 | BuiltinType.Other:\n          case BuiltinType.Other << 8 | BuiltinType.String:\n            return this.query.getBuiltinType(BuiltinType.String);\n          case BuiltinType.Number << 8 | BuiltinType.Number:\n            return this.query.getBuiltinType(BuiltinType.Number);\n          case BuiltinType.Boolean << 8 | BuiltinType.Number:\n          case BuiltinType.Other << 8 | BuiltinType.Number:\n            return this.reportError('Expected a number type', ast.left);\n          case BuiltinType.Number << 8 | BuiltinType.Boolean:\n          case BuiltinType.Number << 8 | BuiltinType.Other:\n            return this.reportError('Expected a number type', ast.right);\n          default:\n            return this.reportError('Expected operands to be a string or number type', ast);\n        }\n      case '>':\n      case '<':\n      case '<=':\n      case '>=':\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n        switch (operKind) {\n          case BuiltinType.Any << 8 | BuiltinType.Any:\n          case BuiltinType.Any << 8 | BuiltinType.Boolean:\n          case BuiltinType.Any << 8 | BuiltinType.Number:\n          case BuiltinType.Any << 8 | BuiltinType.String:\n          case BuiltinType.Any << 8 | BuiltinType.Other:\n          case BuiltinType.Boolean << 8 | BuiltinType.Any:\n          case BuiltinType.Boolean << 8 | BuiltinType.Boolean:\n          case BuiltinType.Number << 8 | BuiltinType.Any:\n          case BuiltinType.Number << 8 | BuiltinType.Number:\n          case BuiltinType.String << 8 | BuiltinType.Any:\n          case BuiltinType.String << 8 | BuiltinType.String:\n          case BuiltinType.Other << 8 | BuiltinType.Any:\n          case BuiltinType.Other << 8 | BuiltinType.Other:\n            return this.query.getBuiltinType(BuiltinType.Boolean);\n          default:\n            return this.reportError('Expected the operants to be of similar type or any', ast);\n        }\n      case '&&':\n        return rightType;\n      case '||':\n        return this.query.getTypeUnion(leftType, rightType);\n    }\n\n    return this.reportError(`Unrecognized operator ${ast.operation}`, ast);\n  }\n\n  visitChain(ast: Chain) {\n    if (this.diagnostics) {\n      // If we are producing diagnostics, visit the children\n      visitAstChildren(ast, this);\n    }\n    // The type of a chain is always undefined.\n    return this.query.getBuiltinType(BuiltinType.Undefined);\n  }\n\n  visitConditional(ast: Conditional) {\n    // The type of a conditional is the union of the true and false conditions.\n    if (this.diagnostics) {\n      visitAstChildren(ast, this);\n    }\n    return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n  }\n\n  visitFunctionCall(ast: FunctionCall) {\n    // The type of a function call is the return type of the selected signature.\n    // The signature is selected based on the types of the arguments. Angular doesn't\n    // support contextual typing of arguments so this is simpler than TypeScript's\n    // version.\n    const args = ast.args.map(arg => this.getType(arg));\n    const target = this.getType(ast.target !);\n    if (!target || !target.callable) return this.reportError('Call target is not callable', ast);\n    const signature = target.selectSignature(args);\n    if (signature) return signature.result;\n    // TODO: Consider a better error message here.\n    return this.reportError('Unable no compatible signature found for call', ast);\n  }\n\n  visitImplicitReceiver(ast: ImplicitReceiver): Symbol {\n    const _this = this;\n    // Return a pseudo-symbol for the implicit receiver.\n    // The members of the implicit receiver are what is defined by the\n    // scope passed into this class.\n    return {\n      name: '$implict',\n      kind: 'component',\n      language: 'ng-template',\n      type: undefined,\n      container: undefined,\n      callable: false,\n      nullable: false,\n      public: true,\n      definition: undefined,\n      members(): SymbolTable{return _this.scope;},\n      signatures(): Signature[]{return [];},\n      selectSignature(types): Signature | undefined{return undefined;},\n      indexed(argument): Symbol | undefined{return undefined;}\n    };\n  }\n\n  visitInterpolation(ast: Interpolation): Symbol {\n    // If we are producing diagnostics, visit the children.\n    if (this.diagnostics) {\n      visitAstChildren(ast, this);\n    }\n    return this.undefinedType;\n  }\n\n  visitKeyedRead(ast: KeyedRead): Symbol {\n    const targetType = this.getType(ast.obj);\n    const keyType = this.getType(ast.key);\n    const result = targetType.indexed(keyType);\n    return result || this.anyType;\n  }\n\n  visitKeyedWrite(ast: KeyedWrite): Symbol {\n    // The write of a type is the type of the value being written.\n    return this.getType(ast.value);\n  }\n\n  visitLiteralArray(ast: LiteralArray): Symbol {\n    // A type literal is an array type of the union of the elements\n    return this.query.getArrayType(\n        this.query.getTypeUnion(...ast.expressions.map(element => this.getType(element))));\n  }\n\n  visitLiteralMap(ast: LiteralMap): Symbol {\n    // If we are producing diagnostics, visit the children\n    if (this.diagnostics) {\n      visitAstChildren(ast, this);\n    }\n    // TODO: Return a composite type.\n    return this.anyType;\n  }\n\n  visitLiteralPrimitive(ast: LiteralPrimitive) {\n    // The type of a literal primitive depends on the value of the literal.\n    switch (ast.value) {\n      case true:\n      case false:\n        return this.query.getBuiltinType(BuiltinType.Boolean);\n      case null:\n        return this.query.getBuiltinType(BuiltinType.Null);\n      case undefined:\n        return this.query.getBuiltinType(BuiltinType.Undefined);\n      default:\n        switch (typeof ast.value) {\n          case 'string':\n            return this.query.getBuiltinType(BuiltinType.String);\n          case 'number':\n            return this.query.getBuiltinType(BuiltinType.Number);\n          default:\n            return this.reportError('Unrecognized primitive', ast);\n        }\n    }\n  }\n\n  visitMethodCall(ast: MethodCall) {\n    return this.resolveMethodCall(this.getType(ast.receiver), ast);\n  }\n\n  visitPipe(ast: BindingPipe) {\n    // The type of a pipe node is the return type of the pipe's transform method. The table returned\n    // by getPipes() is expected to contain symbols with the corresponding transform method type.\n    const pipe = this.query.getPipes().get(ast.name);\n    if (!pipe) return this.reportError(`No pipe by the name ${ast.name} found`, ast);\n    const expType = this.getType(ast.exp);\n    const signature =\n        pipe.selectSignature([expType].concat(ast.args.map(arg => this.getType(arg))));\n    if (!signature) return this.reportError('Unable to resolve signature for pipe invocation', ast);\n    return signature.result;\n  }\n\n  visitPrefixNot(ast: PrefixNot) {\n    // The type of a prefix ! is always boolean.\n    return this.query.getBuiltinType(BuiltinType.Boolean);\n  }\n\n  visitNonNullAssert(ast: NonNullAssert) {\n    const expressionType = this.getType(ast.expression);\n    return this.query.getNonNullableType(expressionType);\n  }\n\n  visitPropertyRead(ast: PropertyRead) {\n    return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n  }\n\n  visitPropertyWrite(ast: PropertyWrite) {\n    // The type of a write is the type of the value being written.\n    return this.getType(ast.value);\n  }\n\n  visitQuote(ast: Quote) {\n    // The type of a quoted expression is any.\n    return this.query.getBuiltinType(BuiltinType.Any);\n  }\n\n  visitSafeMethodCall(ast: SafeMethodCall) {\n    return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n  }\n\n  visitSafePropertyRead(ast: SafePropertyRead) {\n    return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n  }\n\n  // TODO(issue/24571): remove '!'.\n  private _anyType !: Symbol;\n  private get anyType(): Symbol {\n    let result = this._anyType;\n    if (!result) {\n      result = this._anyType = this.query.getBuiltinType(BuiltinType.Any);\n    }\n    return result;\n  }\n\n  // TODO(issue/24571): remove '!'.\n  private _undefinedType !: Symbol;\n  private get undefinedType(): Symbol {\n    let result = this._undefinedType;\n    if (!result) {\n      result = this._undefinedType = this.query.getBuiltinType(BuiltinType.Undefined);\n    }\n    return result;\n  }\n\n  private resolveMethodCall(receiverType: Symbol, ast: SafeMethodCall|MethodCall) {\n    if (this.isAny(receiverType)) {\n      return this.anyType;\n    }\n\n    // The type of a method is the selected methods result type.\n    const method = receiverType.members().get(ast.name);\n    if (!method) return this.reportError(`Unknown method '${ast.name}'`, ast);\n    if (!method.type) return this.reportError(`Could not find a type for '${ast.name}'`, ast);\n    if (!method.type.callable) return this.reportError(`Member '${ast.name}' is not callable`, ast);\n    const signature = method.type.selectSignature(ast.args.map(arg => this.getType(arg)));\n    if (!signature)\n      return this.reportError(`Unable to resolve signature for call of method ${ast.name}`, ast);\n    return signature.result;\n  }\n\n  private resolvePropertyRead(receiverType: Symbol, ast: SafePropertyRead|PropertyRead) {\n    if (this.isAny(receiverType)) {\n      return this.anyType;\n    }\n\n    // The type of a property read is the seelcted member's type.\n    const member = receiverType.members().get(ast.name);\n    if (!member) {\n      let receiverInfo = receiverType.name;\n      if (receiverInfo == '$implict') {\n        receiverInfo =\n            'The component declaration, template variable declarations, and element references do';\n      } else if (receiverType.nullable) {\n        return this.reportError(`The expression might be null`, ast.receiver);\n      } else {\n        receiverInfo = `'${receiverInfo}' does`;\n      }\n      return this.reportError(\n          `Identifier '${ast.name}' is not defined. ${receiverInfo} not contain such a member`,\n          ast);\n    }\n    if (!member.public) {\n      let receiverInfo = receiverType.name;\n      if (receiverInfo == '$implict') {\n        receiverInfo = 'the component';\n      } else {\n        receiverInfo = `'${receiverInfo}'`;\n      }\n      this.reportWarning(\n          `Identifier '${ast.name}' refers to a private member of ${receiverInfo}`, ast);\n    }\n    return member.type;\n  }\n\n  private reportError(message: string, ast: AST): Symbol {\n    if (this.diagnostics) {\n      this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n    }\n    return this.anyType;\n  }\n\n  private reportWarning(message: string, ast: AST): Symbol {\n    if (this.diagnostics) {\n      this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n    }\n    return this.anyType;\n  }\n\n  private isAny(symbol: Symbol): boolean {\n    return !symbol || this.query.getTypeKind(symbol) == BuiltinType.Any ||\n        (!!symbol.type && this.isAny(symbol.type));\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, AstPath, Attribute, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, CompileDirectiveSummary, CompileTypeMetadata, DirectiveAst, ElementAst, EmbeddedTemplateAst, Node, ParseSourceSpan, RecursiveTemplateAstVisitor, ReferenceAst, TemplateAst, TemplateAstPath, VariableAst, findNode, identifierName, templateVisitAll, tokenReference} from '@angular/compiler';\n\nimport {AstType, DiagnosticKind, ExpressionDiagnosticsContext, TypeDiagnostic} from './expression_type';\nimport {BuiltinType, Definition, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable} from './symbols';\n\nexport interface DiagnosticTemplateInfo {\n  fileName?: string;\n  offset: number;\n  query: SymbolQuery;\n  members: SymbolTable;\n  htmlAst: Node[];\n  templateAst: TemplateAst[];\n}\n\nexport interface ExpressionDiagnostic {\n  message: string;\n  span: Span;\n  kind: DiagnosticKind;\n}\n\nexport function getTemplateExpressionDiagnostics(info: DiagnosticTemplateInfo):\n    ExpressionDiagnostic[] {\n  const visitor = new ExpressionDiagnosticsVisitor(\n      info, (path: TemplateAstPath, includeEvent: boolean) =>\n                getExpressionScope(info, path, includeEvent));\n  templateVisitAll(visitor, info.templateAst);\n  return visitor.diagnostics;\n}\n\nexport function getExpressionDiagnostics(\n    scope: SymbolTable, ast: AST, query: SymbolQuery,\n    context: ExpressionDiagnosticsContext = {}): TypeDiagnostic[] {\n  const analyzer = new AstType(scope, query, context);\n  analyzer.getDiagnostics(ast);\n  return analyzer.diagnostics;\n}\n\nfunction getReferences(info: DiagnosticTemplateInfo): SymbolDeclaration[] {\n  const result: SymbolDeclaration[] = [];\n\n  function processReferences(references: ReferenceAst[]) {\n    for (const reference of references) {\n      let type: Symbol|undefined = undefined;\n      if (reference.value) {\n        type = info.query.getTypeSymbol(tokenReference(reference.value));\n      }\n      result.push({\n        name: reference.name,\n        kind: 'reference',\n        type: type || info.query.getBuiltinType(BuiltinType.Any),\n        get definition() { return getDefinitionOf(info, reference); }\n      });\n    }\n  }\n\n  const visitor = new class extends RecursiveTemplateAstVisitor {\n    visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n      super.visitEmbeddedTemplate(ast, context);\n      processReferences(ast.references);\n    }\n    visitElement(ast: ElementAst, context: any): any {\n      super.visitElement(ast, context);\n      processReferences(ast.references);\n    }\n  };\n\n  templateVisitAll(visitor, info.templateAst);\n\n  return result;\n}\n\nfunction getDefinitionOf(info: DiagnosticTemplateInfo, ast: TemplateAst): Definition|undefined {\n  if (info.fileName) {\n    const templateOffset = info.offset;\n    return [{\n      fileName: info.fileName,\n      span: {\n        start: ast.sourceSpan.start.offset + templateOffset,\n        end: ast.sourceSpan.end.offset + templateOffset\n      }\n    }];\n  }\n}\n\nfunction getVarDeclarations(\n    info: DiagnosticTemplateInfo, path: TemplateAstPath): SymbolDeclaration[] {\n  const result: SymbolDeclaration[] = [];\n\n  let current = path.tail;\n  while (current) {\n    if (current instanceof EmbeddedTemplateAst) {\n      for (const variable of current.variables) {\n        const name = variable.name;\n\n        // Find the first directive with a context.\n        const context =\n            current.directives.map(d => info.query.getTemplateContext(d.directive.type.reference))\n                .find(c => !!c);\n\n        // Determine the type of the context field referenced by variable.value.\n        let type: Symbol|undefined = undefined;\n        if (context) {\n          const value = context.get(variable.value);\n          if (value) {\n            type = value.type !;\n            let kind = info.query.getTypeKind(type);\n            if (kind === BuiltinType.Any || kind == BuiltinType.Unbound) {\n              // The any type is not very useful here. For special cases, such as ngFor, we can do\n              // better.\n              type = refinedVariableType(type, info, current);\n            }\n          }\n        }\n        if (!type) {\n          type = info.query.getBuiltinType(BuiltinType.Any);\n        }\n        result.push({\n          name,\n          kind: 'variable', type, get definition() { return getDefinitionOf(info, variable); }\n        });\n      }\n    }\n    current = path.parentOf(current);\n  }\n\n  return result;\n}\n\nfunction refinedVariableType(\n    type: Symbol, info: DiagnosticTemplateInfo, templateElement: EmbeddedTemplateAst): Symbol {\n  // Special case the ngFor directive\n  const ngForDirective = templateElement.directives.find(d => {\n    const name = identifierName(d.directive.type);\n    return name == 'NgFor' || name == 'NgForOf';\n  });\n  if (ngForDirective) {\n    const ngForOfBinding = ngForDirective.inputs.find(i => i.directiveName == 'ngForOf');\n    if (ngForOfBinding) {\n      const bindingType = new AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n      if (bindingType) {\n        const result = info.query.getElementType(bindingType);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n\n  // We can't do better, return any\n  return info.query.getBuiltinType(BuiltinType.Any);\n}\n\nfunction getEventDeclaration(info: DiagnosticTemplateInfo, includeEvent?: boolean) {\n  let result: SymbolDeclaration[] = [];\n  if (includeEvent) {\n    // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n    // of the event.\n    result = [{name: '$event', kind: 'variable', type: info.query.getBuiltinType(BuiltinType.Any)}];\n  }\n  return result;\n}\n\nexport function getExpressionScope(\n    info: DiagnosticTemplateInfo, path: TemplateAstPath, includeEvent: boolean): SymbolTable {\n  let result = info.members;\n  const references = getReferences(info);\n  const variables = getVarDeclarations(info, path);\n  const events = getEventDeclaration(info, includeEvent);\n  if (references.length || variables.length || events.length) {\n    const referenceTable = info.query.createSymbolTable(references);\n    const variableTable = info.query.createSymbolTable(variables);\n    const eventsTable = info.query.createSymbolTable(events);\n    result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n  }\n  return result;\n}\n\nclass ExpressionDiagnosticsVisitor extends RecursiveTemplateAstVisitor {\n  private path: TemplateAstPath;\n  // TODO(issue/24571): remove '!'.\n  private directiveSummary !: CompileDirectiveSummary;\n\n  diagnostics: ExpressionDiagnostic[] = [];\n\n  constructor(\n      private info: DiagnosticTemplateInfo,\n      private getExpressionScope: (path: TemplateAstPath, includeEvent: boolean) => SymbolTable) {\n    super();\n    this.path = new AstPath<TemplateAst>([]);\n  }\n\n  visitDirective(ast: DirectiveAst, context: any): any {\n    // Override the default child visitor to ignore the host properties of a directive.\n    if (ast.inputs && ast.inputs.length) {\n      templateVisitAll(this, ast.inputs, context);\n    }\n  }\n\n  visitBoundText(ast: BoundTextAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n    this.pop();\n  }\n\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n    this.pop();\n  }\n\n  visitElementProperty(ast: BoundElementPropertyAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n    this.pop();\n  }\n\n  visitEvent(ast: BoundEventAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n    this.pop();\n  }\n\n  visitVariable(ast: VariableAst): void {\n    const directive = this.directiveSummary;\n    if (directive && ast.value) {\n      const context = this.info.query.getTemplateContext(directive.type.reference) !;\n      if (context && !context.has(ast.value)) {\n        if (ast.value === '$implicit') {\n          this.reportError(\n              'The template context does not have an implicit value', spanOf(ast.sourceSpan));\n        } else {\n          this.reportError(\n              `The template context does not defined a member called '${ast.value}'`,\n              spanOf(ast.sourceSpan));\n        }\n      }\n    }\n  }\n\n  visitElement(ast: ElementAst, context: any): void {\n    this.push(ast);\n    super.visitElement(ast, context);\n    this.pop();\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    const previousDirectiveSummary = this.directiveSummary;\n\n    this.push(ast);\n\n    // Find directive that references this template\n    this.directiveSummary =\n        ast.directives.map(d => d.directive).find(d => hasTemplateReference(d.type)) !;\n\n    // Process children\n    super.visitEmbeddedTemplate(ast, context);\n\n    this.pop();\n\n    this.directiveSummary = previousDirectiveSummary;\n  }\n\n  private attributeValueLocation(ast: TemplateAst) {\n    const path = findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n    const last = path.tail;\n    if (last instanceof Attribute && last.valueSpan) {\n      // Add 1 for the quote.\n      return last.valueSpan.start.offset + 1;\n    }\n    return ast.sourceSpan.start.offset;\n  }\n\n  private diagnoseExpression(ast: AST, offset: number, includeEvent: boolean) {\n    const scope = this.getExpressionScope(this.path, includeEvent);\n    this.diagnostics.push(...getExpressionDiagnostics(scope, ast, this.info.query, {\n                            event: includeEvent\n                          }).map(d => ({\n                                   span: offsetSpan(d.ast.span, offset + this.info.offset),\n                                   kind: d.kind,\n                                   message: d.message\n                                 })));\n  }\n\n  private push(ast: TemplateAst) { this.path.push(ast); }\n\n  private pop() { this.path.pop(); }\n\n  private reportError(message: string, span: Span|undefined) {\n    if (span) {\n      this.diagnostics.push(\n          {span: offsetSpan(span, this.info.offset), kind: DiagnosticKind.Error, message});\n    }\n  }\n\n  private reportWarning(message: string, span: Span) {\n    this.diagnostics.push(\n        {span: offsetSpan(span, this.info.offset), kind: DiagnosticKind.Warning, message});\n  }\n}\n\nfunction hasTemplateReference(type: CompileTypeMetadata): boolean {\n  if (type.diDeps) {\n    for (let diDep of type.diDeps) {\n      if (diDep.token && diDep.token.identifier &&\n          identifierName(diDep.token !.identifier !) == 'TemplateRef')\n        return true;\n    }\n  }\n  return false;\n}\n\nfunction offsetSpan(span: Span, amount: number): Span {\n  return {start: span.start + amount, end: span.end + amount};\n}\n\nfunction spanOf(sourceSpan: ParseSourceSpan): Span {\n  return {start: sourceSpan.start.offset, end: sourceSpan.end.offset};\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Converts a `string` version into an array of numbers\n * @example\n * toNumbers('2.0.1'); // returns [2, 0, 1]\n */\nexport function toNumbers(value: string): number[] {\n  return value.split('.').map(Number);\n}\n\n/**\n * Compares two arrays of positive numbers with lexicographical order in mind.\n *\n * However - unlike lexicographical order - for arrays of different length we consider:\n * [1, 2, 3] = [1, 2, 3, 0] instead of [1, 2, 3] < [1, 2, 3, 0]\n *\n * @param a The 'left hand' array in the comparison test\n * @param b The 'right hand' in the comparison test\n * @returns {-1|0|1} The comparison result: 1 if a is greater, -1 if b is greater, 0 is the two\n * arrays are equals\n */\nexport function compareNumbers(a: number[], b: number[]): -1|0|1 {\n  const max = Math.max(a.length, b.length);\n  const min = Math.min(a.length, b.length);\n\n  for (let i = 0; i < min; i++) {\n    if (a[i] > b[i]) return 1;\n    if (a[i] < b[i]) return -1;\n  }\n\n  if (min !== max) {\n    const longestArray = a.length === max ? a : b;\n\n    // The result to return in case the to arrays are considered different (1 if a is greater,\n    // -1 if b is greater)\n    const comparisonResult = a.length === max ? 1 : -1;\n\n    // Check that at least one of the remaining elements is greater than 0 to consider that the two\n    // arrays are different (e.g. [1, 0] and [1] are considered the same but not [1, 0, 1] and [1])\n    for (let i = min; i < max; i++) {\n      if (longestArray[i] > 0) {\n        return comparisonResult;\n      }\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Checks if a TypeScript version is:\n * - greater or equal than the provided `low` version,\n * - lower or equal than an optional `high` version.\n *\n * @param version The TypeScript version\n * @param low The minimum version\n * @param high The maximum version\n */\nexport function isVersionBetween(version: string, low: string, high?: string): boolean {\n  const tsNumbers = toNumbers(version);\n  if (high !== undefined) {\n    return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n        compareNumbers(toNumbers(high), tsNumbers) >= 0;\n  }\n  return compareNumbers(toNumbers(low), tsNumbers) <= 0;\n}\n\n/**\n * Compares two versions\n *\n * @param v1 The 'left hand' version in the comparison test\n * @param v2 The 'right hand' version in the comparison test\n * @returns {-1|0|1} The comparison result: 1 if v1 is greater, -1 if v2 is greater, 0 is the two\n * versions are equals\n */\nexport function compareVersions(v1: string, v2: string): -1|0|1 {\n  return compareNumbers(toNumbers(v1), toNumbers(v2));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AotSummaryResolver, CompileMetadataResolver, CompilePipeSummary, CompilerConfig, DEFAULT_INTERPOLATION_CONFIG, DirectiveNormalizer, DirectiveResolver, DomElementSchemaRegistry, HtmlParser, InterpolationConfig, NgAnalyzedModules, NgModuleResolver, ParseTreeResult, PipeResolver, ResourceLoader, StaticReflector, StaticSymbol, StaticSymbolCache, StaticSymbolResolver, SummaryResolver} from '@angular/compiler';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {BuiltinType, DeclarationKind, Definition, PipeInfo, Pipes, Signature, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable} from './symbols';\nimport {isVersionBetween} from './typescript_version';\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nconst isPrivate = (ts as any).ModifierFlags ?\n    ((node: ts.Node) =>\n         !!((ts as any).getCombinedModifierFlags(node) & (ts as any).ModifierFlags.Private)) :\n    ((node: ts.Node) => !!(node.flags & (ts as any).NodeFlags.Private));\n\nconst isReferenceType = (ts as any).ObjectFlags ?\n    ((type: ts.Type) =>\n         !!(type.flags & (ts as any).TypeFlags.Object &&\n            (type as any).objectFlags & (ts as any).ObjectFlags.Reference)) :\n    ((type: ts.Type) => !!(type.flags & (ts as any).TypeFlags.Reference));\n\ninterface TypeContext {\n  node: ts.Node;\n  program: ts.Program;\n  checker: ts.TypeChecker;\n}\n\nexport function getSymbolQuery(\n    program: ts.Program, checker: ts.TypeChecker, source: ts.SourceFile,\n    fetchPipes: () => SymbolTable): SymbolQuery {\n  return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\n\nexport function getClassMembers(\n    program: ts.Program, checker: ts.TypeChecker, staticSymbol: StaticSymbol): SymbolTable|\n    undefined {\n  const declaration = getClassFromStaticSymbol(program, staticSymbol);\n  if (declaration) {\n    const type = checker.getTypeAtLocation(declaration);\n    const node = program.getSourceFile(staticSymbol.filePath);\n    if (node) {\n      return new TypeWrapper(type, {node, program, checker}).members();\n    }\n  }\n}\n\nexport function getClassMembersFromDeclaration(\n    program: ts.Program, checker: ts.TypeChecker, source: ts.SourceFile,\n    declaration: ts.ClassDeclaration) {\n  const type = checker.getTypeAtLocation(declaration);\n  return new TypeWrapper(type, {node: source, program, checker}).members();\n}\n\nexport function getClassFromStaticSymbol(\n    program: ts.Program, type: StaticSymbol): ts.ClassDeclaration|undefined {\n  const source = program.getSourceFile(type.filePath);\n  if (source) {\n    return ts.forEachChild(source, child => {\n      if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n        const classDeclaration = child as ts.ClassDeclaration;\n        if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n          return classDeclaration;\n        }\n      }\n    }) as(ts.ClassDeclaration | undefined);\n  }\n\n  return undefined;\n}\n\nexport function getPipesTable(\n    source: ts.SourceFile, program: ts.Program, checker: ts.TypeChecker,\n    pipes: CompilePipeSummary[]): SymbolTable {\n  return new PipesTable(pipes, {program, checker, node: source});\n}\n\nclass TypeScriptSymbolQuery implements SymbolQuery {\n  private typeCache = new Map<BuiltinType, Symbol>();\n  // TODO(issue/24571): remove '!'.\n  private pipesCache !: SymbolTable;\n\n  constructor(\n      private program: ts.Program, private checker: ts.TypeChecker, private source: ts.SourceFile,\n      private fetchPipes: () => SymbolTable) {}\n\n  getTypeKind(symbol: Symbol): BuiltinType { return typeKindOf(this.getTsTypeOf(symbol)); }\n\n  getBuiltinType(kind: BuiltinType): Symbol {\n    let result = this.typeCache.get(kind);\n    if (!result) {\n      const type = getBuiltinTypeFromTs(\n          kind, {checker: this.checker, node: this.source, program: this.program});\n      result =\n          new TypeWrapper(type, {program: this.program, checker: this.checker, node: this.source});\n      this.typeCache.set(kind, result);\n    }\n    return result;\n  }\n\n  getTypeUnion(...types: Symbol[]): Symbol {\n    // No API exists so return any if the types are not all the same type.\n    let result: Symbol|undefined = undefined;\n    if (types.length) {\n      result = types[0];\n      for (let i = 1; i < types.length; i++) {\n        if (types[i] != result) {\n          result = undefined;\n          break;\n        }\n      }\n    }\n    return result || this.getBuiltinType(BuiltinType.Any);\n  }\n\n  getArrayType(type: Symbol): Symbol { return this.getBuiltinType(BuiltinType.Any); }\n\n  getElementType(type: Symbol): Symbol|undefined {\n    if (type instanceof TypeWrapper) {\n      const elementType = getTypeParameterOf(type.tsType, 'Array');\n      if (elementType) {\n        return new TypeWrapper(elementType, type.context);\n      }\n    }\n  }\n\n  getNonNullableType(symbol: Symbol): Symbol {\n    if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n      const tsType = symbol.tsType;\n      const nonNullableType = this.checker.getNonNullableType(tsType);\n      if (nonNullableType != tsType) {\n        return new TypeWrapper(nonNullableType, symbol.context);\n      } else if (nonNullableType == tsType) {\n        return symbol;\n      }\n    }\n    return this.getBuiltinType(BuiltinType.Any);\n  }\n\n  getPipes(): SymbolTable {\n    let result = this.pipesCache;\n    if (!result) {\n      result = this.pipesCache = this.fetchPipes();\n    }\n    return result;\n  }\n\n  getTemplateContext(type: StaticSymbol): SymbolTable|undefined {\n    const context: TypeContext = {node: this.source, program: this.program, checker: this.checker};\n    const typeSymbol = findClassSymbolInContext(type, context);\n    if (typeSymbol) {\n      const contextType = this.getTemplateRefContextType(typeSymbol);\n      if (contextType) return new SymbolWrapper(contextType, context).members();\n    }\n  }\n\n  getTypeSymbol(type: StaticSymbol): Symbol|undefined {\n    const context: TypeContext = {node: this.source, program: this.program, checker: this.checker};\n    const typeSymbol = findClassSymbolInContext(type, context);\n    return typeSymbol && new SymbolWrapper(typeSymbol, context);\n  }\n\n  createSymbolTable(symbols: SymbolDeclaration[]): SymbolTable {\n    const result = new MapSymbolTable();\n    result.addAll(symbols.map(s => new DeclaredSymbol(s)));\n    return result;\n  }\n\n  mergeSymbolTable(symbolTables: SymbolTable[]): SymbolTable {\n    const result = new MapSymbolTable();\n    for (const symbolTable of symbolTables) {\n      result.addAll(symbolTable.values());\n    }\n    return result;\n  }\n\n  getSpanAt(line: number, column: number): Span|undefined {\n    return spanAt(this.source, line, column);\n  }\n\n  private getTemplateRefContextType(typeSymbol: ts.Symbol): ts.Symbol|undefined {\n    const type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n    const constructor = type.symbol && type.symbol.members &&\n        getFromSymbolTable(type.symbol.members !, '__constructor');\n\n    if (constructor) {\n      const constructorDeclaration = constructor.declarations ![0] as ts.ConstructorTypeNode;\n      for (const parameter of constructorDeclaration.parameters) {\n        const type = this.checker.getTypeAtLocation(parameter.type !);\n        if (type.symbol !.name == 'TemplateRef' && isReferenceType(type)) {\n          const typeReference = type as ts.TypeReference;\n          if (typeReference.typeArguments && typeReference.typeArguments.length === 1) {\n            return typeReference.typeArguments[0].symbol;\n          }\n        }\n      }\n    }\n  }\n\n  private getTsTypeOf(symbol: Symbol): ts.Type|undefined {\n    const type = this.getTypeWrapper(symbol);\n    return type && type.tsType;\n  }\n\n  private getTypeWrapper(symbol: Symbol): TypeWrapper|undefined {\n    let type: TypeWrapper|undefined = undefined;\n    if (symbol instanceof TypeWrapper) {\n      type = symbol;\n    } else if (symbol.type instanceof TypeWrapper) {\n      type = symbol.type;\n    }\n    return type;\n  }\n}\n\nfunction typeCallable(type: ts.Type): boolean {\n  const signatures = type.getCallSignatures();\n  return signatures && signatures.length != 0;\n}\n\nfunction signaturesOf(type: ts.Type, context: TypeContext): Signature[] {\n  return type.getCallSignatures().map(s => new SignatureWrapper(s, context));\n}\n\nfunction selectSignature(type: ts.Type, context: TypeContext, types: Symbol[]): Signature|\n    undefined {\n  // TODO: Do a better job of selecting the right signature.\n  const signatures = type.getCallSignatures();\n  return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\n\nclass TypeWrapper implements Symbol {\n  constructor(public tsType: ts.Type, public context: TypeContext) {\n    if (!tsType) {\n      throw Error('Internal: null type');\n    }\n  }\n\n  get name(): string {\n    const symbol = this.tsType.symbol;\n    return (symbol && symbol.name) || '<anonymous>';\n  }\n\n  public readonly kind: DeclarationKind = 'type';\n\n  public readonly language: string = 'typescript';\n\n  public readonly type: Symbol|undefined = undefined;\n\n  public readonly container: Symbol|undefined = undefined;\n\n  public readonly public: boolean = true;\n\n  get callable(): boolean { return typeCallable(this.tsType); }\n\n  get nullable(): boolean {\n    return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n  }\n\n  get definition(): Definition|undefined {\n    const symbol = this.tsType.getSymbol();\n    return symbol ? definitionFromTsSymbol(symbol) : undefined;\n  }\n\n  members(): SymbolTable {\n    return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n  }\n\n  signatures(): Signature[] { return signaturesOf(this.tsType, this.context); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    return selectSignature(this.tsType, this.context, types);\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n}\n\nclass SymbolWrapper implements Symbol {\n  private symbol: ts.Symbol;\n  // TODO(issue/24571): remove '!'.\n  private _tsType !: ts.Type;\n  // TODO(issue/24571): remove '!'.\n  private _members !: SymbolTable;\n\n  public readonly nullable: boolean = false;\n  public readonly language: string = 'typescript';\n\n  constructor(symbol: ts.Symbol, private context: TypeContext) {\n    this.symbol = symbol && context && (symbol.flags & ts.SymbolFlags.Alias) ?\n        context.checker.getAliasedSymbol(symbol) :\n        symbol;\n  }\n\n  get name(): string { return this.symbol.name; }\n\n  get kind(): DeclarationKind { return this.callable ? 'method' : 'property'; }\n\n  get type(): Symbol|undefined { return new TypeWrapper(this.tsType, this.context); }\n\n  get container(): Symbol|undefined { return getContainerOf(this.symbol, this.context); }\n\n  get public(): boolean {\n    // Symbols that are not explicitly made private are public.\n    return !isSymbolPrivate(this.symbol);\n  }\n\n  get callable(): boolean { return typeCallable(this.tsType); }\n\n  get definition(): Definition { return definitionFromTsSymbol(this.symbol); }\n\n  members(): SymbolTable {\n    if (!this._members) {\n      if ((this.symbol.flags & (ts.SymbolFlags.Class | ts.SymbolFlags.Interface)) != 0) {\n        const declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n        const typeWrapper = new TypeWrapper(declaredType, this.context);\n        this._members = typeWrapper.members();\n      } else {\n        this._members = new SymbolTableWrapper(this.symbol.members !, this.context);\n      }\n    }\n    return this._members;\n  }\n\n  signatures(): Signature[] { return signaturesOf(this.tsType, this.context); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    return selectSignature(this.tsType, this.context, types);\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n\n  private get tsType(): ts.Type {\n    let type = this._tsType;\n    if (!type) {\n      type = this._tsType =\n          this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n    }\n    return type;\n  }\n}\n\nclass DeclaredSymbol implements Symbol {\n  public readonly language: string = 'ng-template';\n\n  public readonly nullable: boolean = false;\n\n  public readonly public: boolean = true;\n\n  constructor(private declaration: SymbolDeclaration) {}\n\n  get name() { return this.declaration.name; }\n\n  get kind() { return this.declaration.kind; }\n\n  get container(): Symbol|undefined { return undefined; }\n\n  get type() { return this.declaration.type; }\n\n  get callable(): boolean { return this.declaration.type.callable; }\n\n\n  get definition(): Definition { return this.declaration.definition; }\n\n  members(): SymbolTable { return this.declaration.type.members(); }\n\n  signatures(): Signature[] { return this.declaration.type.signatures(); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    return this.declaration.type.selectSignature(types);\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n}\n\nclass SignatureWrapper implements Signature {\n  constructor(private signature: ts.Signature, private context: TypeContext) {}\n\n  get arguments(): SymbolTable {\n    return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n  }\n\n  get result(): Symbol { return new TypeWrapper(this.signature.getReturnType(), this.context); }\n}\n\nclass SignatureResultOverride implements Signature {\n  constructor(private signature: Signature, private resultType: Symbol) {}\n\n  get arguments(): SymbolTable { return this.signature.arguments; }\n\n  get result(): Symbol { return this.resultType; }\n}\n\n/**\n * Indicates the lower bound TypeScript version supporting `SymbolTable` as an ES6 `Map`.\n * For lower versions, `SymbolTable` is implemented as a dictionary\n */\nconst MIN_TS_VERSION_SUPPORTING_MAP = '2.2';\n\nexport const toSymbolTableFactory = (tsVersion: string) => (symbols: ts.Symbol[]) => {\n  if (isVersionBetween(tsVersion, MIN_TS_VERSION_SUPPORTING_MAP)) {\n    // ∀ Typescript version >= 2.2, `SymbolTable` is implemented as an ES6 `Map`\n    const result = new Map<string, ts.Symbol>();\n    for (const symbol of symbols) {\n      result.set(symbol.name, symbol);\n    }\n    // First, tell the compiler that `result` is of type `any`. Then, use a second type assertion\n    // to `ts.SymbolTable`.\n    // Otherwise, `Map<string, ts.Symbol>` and `ts.SymbolTable` will be considered as incompatible\n    // types by the compiler\n    return <ts.SymbolTable>(<any>result);\n  }\n\n  // ∀ Typescript version < 2.2, `SymbolTable` is implemented as a dictionary\n  const result: {[name: string]: ts.Symbol} = {};\n  for (const symbol of symbols) {\n    result[symbol.name] = symbol;\n  }\n  return <ts.SymbolTable>(<any>result);\n};\n\nfunction toSymbols(symbolTable: ts.SymbolTable | undefined): ts.Symbol[] {\n  if (!symbolTable) return [];\n\n  const table = symbolTable as any;\n\n  if (typeof table.values === 'function') {\n    return Array.from(table.values()) as ts.Symbol[];\n  }\n\n  const result: ts.Symbol[] = [];\n\n  const own = typeof table.hasOwnProperty === 'function' ?\n      (name: string) => table.hasOwnProperty(name) :\n      (name: string) => !!table[name];\n\n  for (const name in table) {\n    if (own(name)) {\n      result.push(table[name]);\n    }\n  }\n  return result;\n}\n\nclass SymbolTableWrapper implements SymbolTable {\n  private symbols: ts.Symbol[];\n  private symbolTable: ts.SymbolTable;\n\n  constructor(symbols: ts.SymbolTable|ts.Symbol[]|undefined, private context: TypeContext) {\n    symbols = symbols || [];\n\n    if (Array.isArray(symbols)) {\n      this.symbols = symbols;\n      const toSymbolTable = toSymbolTableFactory(ts.version);\n      this.symbolTable = toSymbolTable(symbols);\n    } else {\n      this.symbols = toSymbols(symbols);\n      this.symbolTable = symbols;\n    }\n  }\n\n  get size(): number { return this.symbols.length; }\n\n  get(key: string): Symbol|undefined {\n    const symbol = getFromSymbolTable(this.symbolTable, key);\n    return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n  }\n\n  has(key: string): boolean {\n    const table: any = this.symbolTable;\n    return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n  }\n\n  values(): Symbol[] { return this.symbols.map(s => new SymbolWrapper(s, this.context)); }\n}\n\nclass MapSymbolTable implements SymbolTable {\n  private map = new Map<string, Symbol>();\n  private _values: Symbol[] = [];\n\n  get size(): number { return this.map.size; }\n\n  get(key: string): Symbol|undefined { return this.map.get(key); }\n\n  add(symbol: Symbol) {\n    if (this.map.has(symbol.name)) {\n      const previous = this.map.get(symbol.name) !;\n      this._values[this._values.indexOf(previous)] = symbol;\n    }\n    this.map.set(symbol.name, symbol);\n    this._values.push(symbol);\n  }\n\n  addAll(symbols: Symbol[]) {\n    for (const symbol of symbols) {\n      this.add(symbol);\n    }\n  }\n\n  has(key: string): boolean { return this.map.has(key); }\n\n  values(): Symbol[] {\n    // Switch to this.map.values once iterables are supported by the target language.\n    return this._values;\n  }\n}\n\nclass PipesTable implements SymbolTable {\n  constructor(private pipes: CompilePipeSummary[], private context: TypeContext) {}\n\n  get size() { return this.pipes.length; }\n\n  get(key: string): Symbol|undefined {\n    const pipe = this.pipes.find(pipe => pipe.name == key);\n    if (pipe) {\n      return new PipeSymbol(pipe, this.context);\n    }\n  }\n\n  has(key: string): boolean { return this.pipes.find(pipe => pipe.name == key) != null; }\n\n  values(): Symbol[] { return this.pipes.map(pipe => new PipeSymbol(pipe, this.context)); }\n}\n\n// This matches .d.ts files that look like \".../<package-name>/<package-name>.d.ts\",\nconst INDEX_PATTERN = /[\\\\/]([^\\\\/]+)[\\\\/]\\1\\.d\\.ts$/;\n\nclass PipeSymbol implements Symbol {\n  // TODO(issue/24571): remove '!'.\n  private _tsType !: ts.Type;\n  public readonly kind: DeclarationKind = 'pipe';\n  public readonly language: string = 'typescript';\n  public readonly container: Symbol|undefined = undefined;\n  public readonly callable: boolean = true;\n  public readonly nullable: boolean = false;\n  public readonly public: boolean = true;\n\n  constructor(private pipe: CompilePipeSummary, private context: TypeContext) {}\n\n  get name(): string { return this.pipe.name; }\n\n  get type(): Symbol|undefined { return new TypeWrapper(this.tsType, this.context); }\n\n  get definition(): Definition|undefined {\n    const symbol = this.tsType.getSymbol();\n    return symbol ? definitionFromTsSymbol(symbol) : undefined;\n  }\n\n  members(): SymbolTable { return EmptyTable.instance; }\n\n  signatures(): Signature[] { return signaturesOf(this.tsType, this.context); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    let signature = selectSignature(this.tsType, this.context, types) !;\n    if (types.length == 1) {\n      const parameterType = types[0];\n      if (parameterType instanceof TypeWrapper) {\n        let resultType: ts.Type|undefined = undefined;\n        switch (this.name) {\n          case 'async':\n            switch (parameterType.name) {\n              case 'Observable':\n              case 'Promise':\n              case 'EventEmitter':\n                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                break;\n              default:\n                resultType = getBuiltinTypeFromTs(BuiltinType.Any, this.context);\n                break;\n            }\n            break;\n          case 'slice':\n            resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n            break;\n        }\n        if (resultType) {\n          signature = new SignatureResultOverride(\n              signature, new TypeWrapper(resultType, parameterType.context));\n        }\n      }\n    }\n    return signature;\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n\n  private get tsType(): ts.Type {\n    let type = this._tsType;\n    if (!type) {\n      const classSymbol = this.findClassSymbol(this.pipe.type.reference);\n      if (classSymbol) {\n        type = this._tsType = this.findTransformMethodType(classSymbol) !;\n      }\n      if (!type) {\n        type = this._tsType = getBuiltinTypeFromTs(BuiltinType.Any, this.context);\n      }\n    }\n    return type;\n  }\n\n  private findClassSymbol(type: StaticSymbol): ts.Symbol|undefined {\n    return findClassSymbolInContext(type, this.context);\n  }\n\n  private findTransformMethodType(classSymbol: ts.Symbol): ts.Type|undefined {\n    const classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n    if (classType) {\n      const transform = classType.getProperty('transform');\n      if (transform) {\n        return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n      }\n    }\n  }\n}\n\nfunction findClassSymbolInContext(type: StaticSymbol, context: TypeContext): ts.Symbol|undefined {\n  let sourceFile = context.program.getSourceFile(type.filePath);\n  if (!sourceFile) {\n    // This handles a case where an <packageName>/index.d.ts and a <packageName>/<packageName>.d.ts\n    // are in the same directory. If we are looking for <packageName>/<packageName> and didn't\n    // find it, look for <packageName>/index.d.ts as the program might have found that instead.\n    const p = type.filePath as string;\n    const m = p.match(INDEX_PATTERN);\n    if (m) {\n      const indexVersion = path.join(path.dirname(p), 'index.d.ts');\n      sourceFile = context.program.getSourceFile(indexVersion);\n    }\n  }\n  if (sourceFile) {\n    const moduleSymbol = (sourceFile as any).module || (sourceFile as any).symbol;\n    const exports = context.checker.getExportsOfModule(moduleSymbol);\n    return (exports || []).find(symbol => symbol.name == type.name);\n  }\n}\n\nclass EmptyTable implements SymbolTable {\n  public readonly size: number = 0;\n  get(key: string): Symbol|undefined { return undefined; }\n  has(key: string): boolean { return false; }\n  values(): Symbol[] { return []; }\n  static instance = new EmptyTable();\n}\n\nfunction findTsConfig(fileName: string): string|undefined {\n  let dir = path.dirname(fileName);\n  while (fs.existsSync(dir)) {\n    const candidate = path.join(dir, 'tsconfig.json');\n    if (fs.existsSync(candidate)) return candidate;\n    const parentDir = path.dirname(dir);\n    if (parentDir === dir) break;\n    dir = parentDir;\n  }\n}\n\nfunction isBindingPattern(node: ts.Node): node is ts.BindingPattern {\n  return !!node && (node.kind === ts.SyntaxKind.ArrayBindingPattern ||\n                    node.kind === ts.SyntaxKind.ObjectBindingPattern);\n}\n\nfunction walkUpBindingElementsAndPatterns(node: ts.Node): ts.Node {\n  while (node && (node.kind === ts.SyntaxKind.BindingElement || isBindingPattern(node))) {\n    node = node.parent !;\n  }\n\n  return node;\n}\n\nfunction getCombinedNodeFlags(node: ts.Node): ts.NodeFlags {\n  node = walkUpBindingElementsAndPatterns(node);\n\n  let flags = node.flags;\n  if (node.kind === ts.SyntaxKind.VariableDeclaration) {\n    node = node.parent !;\n  }\n\n  if (node && node.kind === ts.SyntaxKind.VariableDeclarationList) {\n    flags |= node.flags;\n    node = node.parent !;\n  }\n\n  if (node && node.kind === ts.SyntaxKind.VariableStatement) {\n    flags |= node.flags;\n  }\n\n  return flags;\n}\n\nfunction isSymbolPrivate(s: ts.Symbol): boolean {\n  return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\n\nfunction getBuiltinTypeFromTs(kind: BuiltinType, context: TypeContext): ts.Type {\n  let type: ts.Type;\n  const checker = context.checker;\n  const node = context.node;\n  switch (kind) {\n    case BuiltinType.Any:\n      type = checker.getTypeAtLocation(setParents(\n          <ts.Node><any>{\n            kind: ts.SyntaxKind.AsExpression,\n            expression: <ts.Node>{kind: ts.SyntaxKind.TrueKeyword},\n            type: <ts.Node>{kind: ts.SyntaxKind.AnyKeyword}\n          },\n          node));\n      break;\n    case BuiltinType.Boolean:\n      type =\n          checker.getTypeAtLocation(setParents(<ts.Node>{kind: ts.SyntaxKind.TrueKeyword}, node));\n      break;\n    case BuiltinType.Null:\n      type =\n          checker.getTypeAtLocation(setParents(<ts.Node>{kind: ts.SyntaxKind.NullKeyword}, node));\n      break;\n    case BuiltinType.Number:\n      const numeric = <ts.Node>{kind: ts.SyntaxKind.NumericLiteral};\n      setParents(<any>{kind: ts.SyntaxKind.ExpressionStatement, expression: numeric}, node);\n      type = checker.getTypeAtLocation(numeric);\n      break;\n    case BuiltinType.String:\n      type = checker.getTypeAtLocation(\n          setParents(<ts.Node>{kind: ts.SyntaxKind.NoSubstitutionTemplateLiteral}, node));\n      break;\n    case BuiltinType.Undefined:\n      type = checker.getTypeAtLocation(setParents(\n          <ts.Node><any>{\n            kind: ts.SyntaxKind.VoidExpression,\n            expression: <ts.Node>{kind: ts.SyntaxKind.NumericLiteral}\n          },\n          node));\n      break;\n    default:\n      throw new Error(`Internal error, unhandled literal kind ${kind}:${BuiltinType[kind]}`);\n  }\n  return type;\n}\n\nfunction setParents<T extends ts.Node>(node: T, parent: ts.Node): T {\n  node.parent = parent;\n  ts.forEachChild(node, child => setParents(child, node));\n  return node;\n}\n\nfunction spanOf(node: ts.Node): Span {\n  return {start: node.getStart(), end: node.getEnd()};\n}\n\nfunction shrink(span: Span, offset?: number) {\n  if (offset == null) offset = 1;\n  return {start: span.start + offset, end: span.end - offset};\n}\n\nfunction spanAt(sourceFile: ts.SourceFile, line: number, column: number): Span|undefined {\n  if (line != null && column != null) {\n    const position = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n    const findChild = function findChild(node: ts.Node): ts.Node | undefined {\n      if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position && node.end > position) {\n        const betterNode = ts.forEachChild(node, findChild);\n        return betterNode || node;\n      }\n    };\n\n    const node = ts.forEachChild(sourceFile, findChild);\n    if (node) {\n      return {start: node.getStart(), end: node.getEnd()};\n    }\n  }\n}\n\nfunction definitionFromTsSymbol(symbol: ts.Symbol): Definition {\n  const declarations = symbol.declarations;\n  if (declarations) {\n    return declarations.map(declaration => {\n      const sourceFile = declaration.getSourceFile();\n      return {\n        fileName: sourceFile.fileName,\n        span: {start: declaration.getStart(), end: declaration.getEnd()}\n      };\n    });\n  }\n}\n\nfunction parentDeclarationOf(node: ts.Node): ts.Node|undefined {\n  while (node) {\n    switch (node.kind) {\n      case ts.SyntaxKind.ClassDeclaration:\n      case ts.SyntaxKind.InterfaceDeclaration:\n        return node;\n      case ts.SyntaxKind.SourceFile:\n        return undefined;\n    }\n    node = node.parent !;\n  }\n}\n\nfunction getContainerOf(symbol: ts.Symbol, context: TypeContext): Symbol|undefined {\n  if (symbol.getFlags() & ts.SymbolFlags.ClassMember && symbol.declarations) {\n    for (const declaration of symbol.declarations) {\n      const parent = parentDeclarationOf(declaration);\n      if (parent) {\n        const type = context.checker.getTypeAtLocation(parent);\n        if (type) {\n          return new TypeWrapper(type, context);\n        }\n      }\n    }\n  }\n}\n\nfunction getTypeParameterOf(type: ts.Type, name: string): ts.Type|undefined {\n  if (type && type.symbol && type.symbol.name == name) {\n    const typeArguments: ts.Type[] = (type as any).typeArguments;\n    if (typeArguments && typeArguments.length <= 1) {\n      return typeArguments[0];\n    }\n  }\n}\n\nfunction typeKindOf(type: ts.Type | undefined): BuiltinType {\n  if (type) {\n    if (type.flags & ts.TypeFlags.Any) {\n      return BuiltinType.Any;\n    } else if (\n        type.flags & (ts.TypeFlags.String | ts.TypeFlags.StringLike | ts.TypeFlags.StringLiteral)) {\n      return BuiltinType.String;\n    } else if (type.flags & (ts.TypeFlags.Number | ts.TypeFlags.NumberLike)) {\n      return BuiltinType.Number;\n    } else if (type.flags & (ts.TypeFlags.Undefined)) {\n      return BuiltinType.Undefined;\n    } else if (type.flags & (ts.TypeFlags.Null)) {\n      return BuiltinType.Null;\n    } else if (type.flags & ts.TypeFlags.Union) {\n      // If all the constituent types of a union are the same kind, it is also that kind.\n      let candidate: BuiltinType|null = null;\n      const unionType = type as ts.UnionType;\n      if (unionType.types.length > 0) {\n        candidate = typeKindOf(unionType.types[0]);\n        for (const subType of unionType.types) {\n          if (candidate != typeKindOf(subType)) {\n            return BuiltinType.Other;\n          }\n        }\n      }\n      if (candidate != null) {\n        return candidate;\n      }\n    } else if (type.flags & ts.TypeFlags.TypeParameter) {\n      return BuiltinType.Unbound;\n    }\n  }\n  return BuiltinType.Other;\n}\n\n\n\nfunction getFromSymbolTable(symbolTable: ts.SymbolTable, key: string): ts.Symbol|undefined {\n  const table = symbolTable as any;\n  let symbol: ts.Symbol|undefined;\n\n  if (typeof table.get === 'function') {\n    // TS 2.2 uses a Map\n    symbol = table.get(key);\n  } else {\n    // TS pre-2.2 uses an object\n    symbol = table[key];\n  }\n\n  return symbol;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Metadata Schema\n\n// If you make a backwards incompatible change to the schema, increment the METADTA_VERSION number.\n\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave METADATA_VERSION the same. If possible, supply as many versions of the metadata that can\n// represent the semantics of the file in an array. For example, when generating a version 2 file,\n// if version 1 can accurately represent the metadata, generate both version 1 and version 2 in\n// an array.\n\nexport const METADATA_VERSION = 4;\n\nexport type MetadataEntry = ClassMetadata | InterfaceMetadata | FunctionMetadata | MetadataValue;\n\nexport interface ModuleMetadata {\n  __symbolic: 'module';\n  version: number;\n  exports?: ModuleExportMetadata[];\n  importAs?: string;\n  metadata: {[name: string]: MetadataEntry};\n  origins?: {[name: string]: string};\n}\nexport function isModuleMetadata(value: any): value is ModuleMetadata {\n  return value && value.__symbolic === 'module';\n}\n\nexport interface ModuleExportMetadata {\n  export?: (string|{name: string, as: string})[];\n  from: string;\n}\n\nexport interface ClassMetadata {\n  __symbolic: 'class';\n  extends?: MetadataSymbolicExpression|MetadataError;\n  arity?: number;\n  decorators?: (MetadataSymbolicExpression|MetadataError)[];\n  members?: MetadataMap;\n  statics?: {[name: string]: MetadataValue | FunctionMetadata};\n}\nexport function isClassMetadata(value: any): value is ClassMetadata {\n  return value && value.__symbolic === 'class';\n}\n\nexport interface InterfaceMetadata { __symbolic: 'interface'; }\nexport function isInterfaceMetadata(value: any): value is InterfaceMetadata {\n  return value && value.__symbolic === 'interface';\n}\n\nexport interface MetadataMap { [name: string]: MemberMetadata[]; }\n\nexport interface MemberMetadata {\n  __symbolic: 'constructor'|'method'|'property';\n  decorators?: (MetadataSymbolicExpression|MetadataError)[];\n}\nexport function isMemberMetadata(value: any): value is MemberMetadata {\n  if (value) {\n    switch (value.__symbolic) {\n      case 'constructor':\n      case 'method':\n      case 'property':\n        return true;\n    }\n  }\n  return false;\n}\n\nexport interface MethodMetadata extends MemberMetadata {\n  __symbolic: 'constructor'|'method';\n  parameterDecorators?: ((MetadataSymbolicExpression | MetadataError)[]|undefined)[];\n}\nexport function isMethodMetadata(value: any): value is MethodMetadata {\n  return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\n\nexport interface ConstructorMetadata extends MethodMetadata {\n  __symbolic: 'constructor';\n  parameters?: (MetadataSymbolicExpression|MetadataError|null|undefined)[];\n}\nexport function isConstructorMetadata(value: any): value is ConstructorMetadata {\n  return value && value.__symbolic === 'constructor';\n}\n\nexport interface FunctionMetadata {\n  __symbolic: 'function';\n  parameters: string[];\n  defaults?: MetadataValue[];\n  value: MetadataValue;\n}\nexport function isFunctionMetadata(value: any): value is FunctionMetadata {\n  return value && value.__symbolic === 'function';\n}\n\nexport type MetadataValue = string | number | boolean | undefined | null | MetadataObject |\n    MetadataArray | MetadataSymbolicExpression | MetadataSymbolicReferenceExpression |\n    MetadataSymbolicBinaryExpression | MetadataSymbolicIndexExpression |\n    MetadataSymbolicCallExpression | MetadataSymbolicPrefixExpression |\n    MetadataSymbolicIfExpression | MetadataSymbolicSpreadExpression |\n    MetadataSymbolicSelectExpression | MetadataError;\n\nexport interface MetadataObject { [name: string]: MetadataValue; }\n\nexport interface MetadataArray { [name: number]: MetadataValue; }\n\nexport type MetadataSymbolicExpression = MetadataSymbolicBinaryExpression |\n    MetadataSymbolicIndexExpression | MetadataSymbolicIndexExpression |\n    MetadataSymbolicCallExpression | MetadataSymbolicCallExpression |\n    MetadataSymbolicPrefixExpression | MetadataSymbolicIfExpression |\n    MetadataGlobalReferenceExpression | MetadataModuleReferenceExpression |\n    MetadataImportedSymbolReferenceExpression | MetadataImportedDefaultReferenceExpression |\n    MetadataSymbolicSelectExpression | MetadataSymbolicSpreadExpression;\n\nexport function isMetadataSymbolicExpression(value: any): value is MetadataSymbolicExpression {\n  if (value) {\n    switch (value.__symbolic) {\n      case 'binary':\n      case 'call':\n      case 'index':\n      case 'new':\n      case 'pre':\n      case 'reference':\n      case 'select':\n      case 'spread':\n      case 'if':\n        return true;\n    }\n  }\n  return false;\n}\n\nexport interface MetadataSymbolicBinaryExpression {\n  __symbolic: 'binary';\n  operator: '&&'|'||'|'|'|'^'|'&'|'=='|'!='|'==='|'!=='|'<'|'>'|'<='|'>='|'instanceof'|'in'|'as'|\n      '<<'|'>>'|'>>>'|'+'|'-'|'*'|'/'|'%'|'**';\n  left: MetadataValue;\n  right: MetadataValue;\n}\nexport function isMetadataSymbolicBinaryExpression(value: any):\n    value is MetadataSymbolicBinaryExpression {\n  return value && value.__symbolic === 'binary';\n}\n\nexport interface MetadataSymbolicIndexExpression {\n  __symbolic: 'index';\n  expression: MetadataValue;\n  index: MetadataValue;\n}\nexport function isMetadataSymbolicIndexExpression(value: any):\n    value is MetadataSymbolicIndexExpression {\n  return value && value.__symbolic === 'index';\n}\n\nexport interface MetadataSymbolicCallExpression {\n  __symbolic: 'call'|'new';\n  expression: MetadataValue;\n  arguments?: MetadataValue[];\n}\nexport function isMetadataSymbolicCallExpression(value: any):\n    value is MetadataSymbolicCallExpression {\n  return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\n\nexport interface MetadataSymbolicPrefixExpression {\n  __symbolic: 'pre';\n  operator: '+'|'-'|'~'|'!';\n  operand: MetadataValue;\n}\nexport function isMetadataSymbolicPrefixExpression(value: any):\n    value is MetadataSymbolicPrefixExpression {\n  return value && value.__symbolic === 'pre';\n}\n\nexport interface MetadataSymbolicIfExpression {\n  __symbolic: 'if';\n  condition: MetadataValue;\n  thenExpression: MetadataValue;\n  elseExpression: MetadataValue;\n}\nexport function isMetadataSymbolicIfExpression(value: any): value is MetadataSymbolicIfExpression {\n  return value && value.__symbolic === 'if';\n}\n\nexport interface MetadataSourceLocationInfo {\n  /**\n   * The line number of the error in the .ts file the metadata was created for.\n   */\n  line?: number;\n\n  /**\n   * The number of utf8 code-units from the beginning of the file of the error.\n   */\n  character?: number;\n}\n\nexport interface MetadataGlobalReferenceExpression extends MetadataSourceLocationInfo {\n  __symbolic: 'reference';\n  name: string;\n  arguments?: MetadataValue[];\n}\nexport function isMetadataGlobalReferenceExpression(value: any):\n    value is MetadataGlobalReferenceExpression {\n  return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\n\nexport interface MetadataModuleReferenceExpression extends MetadataSourceLocationInfo {\n  __symbolic: 'reference';\n  module: string;\n}\nexport function isMetadataModuleReferenceExpression(value: any):\n    value is MetadataModuleReferenceExpression {\n  return value && value.module && !value.name && !value.default &&\n      isMetadataSymbolicReferenceExpression(value);\n}\n\nexport interface MetadataImportedSymbolReferenceExpression extends MetadataSourceLocationInfo {\n  __symbolic: 'reference';\n  module: string;\n  name: string;\n  arguments?: MetadataValue[];\n}\nexport function isMetadataImportedSymbolReferenceExpression(value: any):\n    value is MetadataImportedSymbolReferenceExpression {\n  return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\n\nexport interface MetadataImportedDefaultReferenceExpression extends MetadataSourceLocationInfo {\n  __symbolic: 'reference';\n  module: string;\n  default:\n    boolean;\n    arguments?: MetadataValue[];\n}\nexport function isMetadataImportDefaultReference(value: any):\n    value is MetadataImportedDefaultReferenceExpression {\n  return value && value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\n\nexport type MetadataSymbolicReferenceExpression = MetadataGlobalReferenceExpression |\n    MetadataModuleReferenceExpression | MetadataImportedSymbolReferenceExpression |\n    MetadataImportedDefaultReferenceExpression;\nexport function isMetadataSymbolicReferenceExpression(value: any):\n    value is MetadataSymbolicReferenceExpression {\n  return value && value.__symbolic === 'reference';\n}\n\nexport interface MetadataSymbolicSelectExpression {\n  __symbolic: 'select';\n  expression: MetadataValue;\n  member: string;\n}\nexport function isMetadataSymbolicSelectExpression(value: any):\n    value is MetadataSymbolicSelectExpression {\n  return value && value.__symbolic === 'select';\n}\n\nexport interface MetadataSymbolicSpreadExpression {\n  __symbolic: 'spread';\n  expression: MetadataValue;\n}\nexport function isMetadataSymbolicSpreadExpression(value: any):\n    value is MetadataSymbolicSpreadExpression {\n  return value && value.__symbolic === 'spread';\n}\n\nexport interface MetadataError extends MetadataSourceLocationInfo {\n  __symbolic: 'error';\n\n  /**\n   * This message should be short and relatively discriptive and should be fixed once it is created.\n   * If the reader doesn't recognize the message, it will display the message unmodified. If the\n   * reader recognizes the error message is it free to use substitute message the is more\n   * descriptive and/or localized.\n   */\n  message: string;\n\n  /**\n   * The module of the error (only used in bundled metadata)\n   */\n  module?: string;\n\n  /**\n   * Context information that can be used to generate a more descriptive error message. The content\n   * of the context is dependent on the error message.\n   */\n  context?: {[name: string]: string};\n}\n\nexport function isMetadataError(value: any): value is MetadataError {\n  return value && value.__symbolic === 'error';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {CollectorOptions} from './collector';\nimport {ClassMetadata, FunctionMetadata, InterfaceMetadata, MetadataEntry, MetadataError, MetadataImportedSymbolReferenceExpression, MetadataSourceLocationInfo, MetadataSymbolicCallExpression, MetadataValue, isMetadataError, isMetadataGlobalReferenceExpression, isMetadataImportDefaultReference, isMetadataImportedSymbolReferenceExpression, isMetadataModuleReferenceExpression, isMetadataSymbolicReferenceExpression, isMetadataSymbolicSpreadExpression} from './schema';\nimport {Symbols} from './symbols';\n\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nconst spreadElementSyntaxKind: ts.SyntaxKind =\n    (ts.SyntaxKind as any).SpreadElement || (ts.SyntaxKind as any).SpreadElementExpression;\n\nfunction isMethodCallOf(callExpression: ts.CallExpression, memberName: string): boolean {\n  const expression = callExpression.expression;\n  if (expression.kind === ts.SyntaxKind.PropertyAccessExpression) {\n    const propertyAccessExpression = <ts.PropertyAccessExpression>expression;\n    const name = propertyAccessExpression.name;\n    if (name.kind == ts.SyntaxKind.Identifier) {\n      return name.text === memberName;\n    }\n  }\n  return false;\n}\n\nfunction isCallOf(callExpression: ts.CallExpression, ident: string): boolean {\n  const expression = callExpression.expression;\n  if (expression.kind === ts.SyntaxKind.Identifier) {\n    const identifier = <ts.Identifier>expression;\n    return identifier.text === ident;\n  }\n  return false;\n}\n\n/* @internal */\nexport function recordMapEntry<T extends MetadataEntry>(\n    entry: T, node: ts.Node,\n    nodeMap: Map<MetadataValue|ClassMetadata|InterfaceMetadata|FunctionMetadata, ts.Node>,\n    sourceFile?: ts.SourceFile) {\n  if (!nodeMap.has(entry)) {\n    nodeMap.set(entry, node);\n    if (node && (isMetadataImportedSymbolReferenceExpression(entry) ||\n                 isMetadataImportDefaultReference(entry)) &&\n        entry.line == null) {\n      const info = sourceInfo(node, sourceFile);\n      if (info.line != null) entry.line = info.line;\n      if (info.character != null) entry.character = info.character;\n    }\n  }\n  return entry;\n}\n\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node: ts.Node, cb: (node: ts.Node) => boolean) {\n  return !ts.forEachChild(node, node => !cb(node));\n}\n\nexport function isPrimitive(value: any): boolean {\n  return Object(value) !== value;\n}\n\nfunction isDefined(obj: any): boolean {\n  return obj !== undefined;\n}\n\n// import {propertyName as name} from 'place'\n// import {name} from 'place'\nexport interface ImportSpecifierMetadata {\n  name: string;\n  propertyName?: string;\n}\nexport interface ImportMetadata {\n  defaultName?: string;                      // import d from 'place'\n  namespace?: string;                        // import * as d from 'place'\n  namedImports?: ImportSpecifierMetadata[];  // import {a} from 'place'\n  from: string;                              // from 'place'\n}\n\n\nfunction getSourceFileOfNode(node: ts.Node | undefined): ts.SourceFile {\n  while (node && node.kind != ts.SyntaxKind.SourceFile) {\n    node = node.parent;\n  }\n  return <ts.SourceFile>node;\n}\n\n/* @internal */\nexport function sourceInfo(\n    node: ts.Node | undefined, sourceFile: ts.SourceFile | undefined): MetadataSourceLocationInfo {\n  if (node) {\n    sourceFile = sourceFile || getSourceFileOfNode(node);\n    if (sourceFile) {\n      return ts.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile));\n    }\n  }\n  return {};\n}\n\n/* @internal */\nexport function errorSymbol(\n    message: string, node?: ts.Node, context?: {[name: string]: string},\n    sourceFile?: ts.SourceFile): MetadataError {\n  const result: MetadataError = {__symbolic: 'error', message, ...sourceInfo(node, sourceFile)};\n  if (context) {\n    result.context = context;\n  }\n  return result;\n}\n\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nexport class Evaluator {\n  constructor(\n      private symbols: Symbols, private nodeMap: Map<MetadataEntry, ts.Node>,\n      private options: CollectorOptions = {},\n      private recordExport?: (name: string, value: MetadataValue) => void) {}\n\n  nameOf(node: ts.Node|undefined): string|MetadataError {\n    if (node && node.kind == ts.SyntaxKind.Identifier) {\n      return (<ts.Identifier>node).text;\n    }\n    const result = node && this.evaluateNode(node);\n    if (isMetadataError(result) || typeof result === 'string') {\n      return result;\n    } else {\n      return errorSymbol(\n          'Name expected', node, {received: (node && node.getText()) || '<missing>'});\n    }\n  }\n\n  /**\n   * Returns true if the expression represented by `node` can be folded into a literal expression.\n   *\n   * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n   * `\"Some value\"` `true` `false` are foldable.\n   *\n   * - An object literal is foldable if all the properties in the literal are foldable.\n   * - An array literal is foldable if all the elements are foldable.\n   * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n   * - A property access is foldable if the object is foldable.\n   * - A array index is foldable if index expression is foldable and the array is foldable.\n   * - Binary operator expressions are foldable if the left and right expressions are foldable and\n   *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n   * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n   *   table.\n   */\n  public isFoldable(node: ts.Node): boolean {\n    return this.isFoldableWorker(node, new Map<ts.Node, boolean>());\n  }\n\n  private isFoldableWorker(node: ts.Node|undefined, folding: Map<ts.Node, boolean>): boolean {\n    if (node) {\n      switch (node.kind) {\n        case ts.SyntaxKind.ObjectLiteralExpression:\n          return everyNodeChild(node, child => {\n            if (child.kind === ts.SyntaxKind.PropertyAssignment) {\n              const propertyAssignment = <ts.PropertyAssignment>child;\n              return this.isFoldableWorker(propertyAssignment.initializer, folding);\n            }\n            return false;\n          });\n        case ts.SyntaxKind.ArrayLiteralExpression:\n          return everyNodeChild(node, child => this.isFoldableWorker(child, folding));\n        case ts.SyntaxKind.CallExpression:\n          const callExpression = <ts.CallExpression>node;\n          // We can fold a <array>.concat(<v>).\n          if (isMethodCallOf(callExpression, 'concat') &&\n              arrayOrEmpty(callExpression.arguments).length === 1) {\n            const arrayNode = (<ts.PropertyAccessExpression>callExpression.expression).expression;\n            if (this.isFoldableWorker(arrayNode, folding) &&\n                this.isFoldableWorker(callExpression.arguments[0], folding)) {\n              // It needs to be an array.\n              const arrayValue = this.evaluateNode(arrayNode);\n              if (arrayValue && Array.isArray(arrayValue)) {\n                return true;\n              }\n            }\n          }\n\n          // We can fold a call to CONST_EXPR\n          if (isCallOf(callExpression, 'CONST_EXPR') &&\n              arrayOrEmpty(callExpression.arguments).length === 1)\n            return this.isFoldableWorker(callExpression.arguments[0], folding);\n          return false;\n        case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n        case ts.SyntaxKind.StringLiteral:\n        case ts.SyntaxKind.NumericLiteral:\n        case ts.SyntaxKind.NullKeyword:\n        case ts.SyntaxKind.TrueKeyword:\n        case ts.SyntaxKind.FalseKeyword:\n        case ts.SyntaxKind.TemplateHead:\n        case ts.SyntaxKind.TemplateMiddle:\n        case ts.SyntaxKind.TemplateTail:\n          return true;\n        case ts.SyntaxKind.ParenthesizedExpression:\n          const parenthesizedExpression = <ts.ParenthesizedExpression>node;\n          return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n        case ts.SyntaxKind.BinaryExpression:\n          const binaryExpression = <ts.BinaryExpression>node;\n          switch (binaryExpression.operatorToken.kind) {\n            case ts.SyntaxKind.PlusToken:\n            case ts.SyntaxKind.MinusToken:\n            case ts.SyntaxKind.AsteriskToken:\n            case ts.SyntaxKind.SlashToken:\n            case ts.SyntaxKind.PercentToken:\n            case ts.SyntaxKind.AmpersandAmpersandToken:\n            case ts.SyntaxKind.BarBarToken:\n              return this.isFoldableWorker(binaryExpression.left, folding) &&\n                  this.isFoldableWorker(binaryExpression.right, folding);\n            default:\n              return false;\n          }\n        case ts.SyntaxKind.PropertyAccessExpression:\n          const propertyAccessExpression = <ts.PropertyAccessExpression>node;\n          return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n        case ts.SyntaxKind.ElementAccessExpression:\n          const elementAccessExpression = <ts.ElementAccessExpression>node;\n          return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n              this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n        case ts.SyntaxKind.Identifier:\n          let identifier = <ts.Identifier>node;\n          let reference = this.symbols.resolve(identifier.text);\n          if (reference !== undefined && isPrimitive(reference)) {\n            return true;\n          }\n          break;\n        case ts.SyntaxKind.TemplateExpression:\n          const templateExpression = <ts.TemplateExpression>node;\n          return templateExpression.templateSpans.every(\n              span => this.isFoldableWorker(span.expression, folding));\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n   * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n   */\n  public evaluateNode(node: ts.Node, preferReference?: boolean): MetadataValue {\n    const t = this;\n    let error: MetadataError|undefined;\n\n    function recordEntry(entry: MetadataValue, node: ts.Node): MetadataValue {\n      if (t.options.substituteExpression) {\n        const newEntry = t.options.substituteExpression(entry, node);\n        if (t.recordExport && newEntry != entry && isMetadataGlobalReferenceExpression(newEntry)) {\n          t.recordExport(newEntry.name, entry);\n        }\n        entry = newEntry;\n      }\n      return recordMapEntry(entry, node, t.nodeMap);\n    }\n\n    function isFoldableError(value: any): value is MetadataError {\n      return !t.options.verboseInvalidExpression && isMetadataError(value);\n    }\n\n    const resolveName = (name: string, preferReference?: boolean): MetadataValue => {\n      const reference = this.symbols.resolve(name, preferReference);\n      if (reference === undefined) {\n        // Encode as a global reference. StaticReflector will check the reference.\n        return recordEntry({__symbolic: 'reference', name}, node);\n      }\n      if (reference && isMetadataSymbolicReferenceExpression(reference)) {\n        return recordEntry({...reference}, node);\n      }\n      return reference;\n    };\n\n    switch (node.kind) {\n      case ts.SyntaxKind.ObjectLiteralExpression:\n        let obj: {[name: string]: any} = {};\n        let quoted: string[] = [];\n        ts.forEachChild(node, child => {\n          switch (child.kind) {\n            case ts.SyntaxKind.ShorthandPropertyAssignment:\n            case ts.SyntaxKind.PropertyAssignment:\n              const assignment = <ts.PropertyAssignment|ts.ShorthandPropertyAssignment>child;\n              if (assignment.name.kind == ts.SyntaxKind.StringLiteral) {\n                const name = (assignment.name as ts.StringLiteral).text;\n                quoted.push(name);\n              }\n              const propertyName = this.nameOf(assignment.name);\n              if (isFoldableError(propertyName)) {\n                error = propertyName;\n                return true;\n              }\n              const propertyValue = isPropertyAssignment(assignment) ?\n                  this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                  resolveName(propertyName, /* preferReference */ true);\n              if (isFoldableError(propertyValue)) {\n                error = propertyValue;\n                return true;  // Stop the forEachChild.\n              } else {\n                obj[<string>propertyName] = isPropertyAssignment(assignment) ?\n                    recordEntry(propertyValue, assignment.initializer) :\n                    propertyValue;\n              }\n          }\n        });\n        if (error) return error;\n        if (this.options.quotedNames && quoted.length) {\n          obj['$quoted$'] = quoted;\n        }\n        return recordEntry(obj, node);\n      case ts.SyntaxKind.ArrayLiteralExpression:\n        let arr: MetadataValue[] = [];\n        ts.forEachChild(node, child => {\n          const value = this.evaluateNode(child, /* preferReference */ true);\n\n          // Check for error\n          if (isFoldableError(value)) {\n            error = value;\n            return true;  // Stop the forEachChild.\n          }\n\n          // Handle spread expressions\n          if (isMetadataSymbolicSpreadExpression(value)) {\n            if (Array.isArray(value.expression)) {\n              for (const spreadValue of value.expression) {\n                arr.push(spreadValue);\n              }\n              return;\n            }\n          }\n\n          arr.push(value);\n        });\n        if (error) return error;\n        return recordEntry(arr, node);\n      case spreadElementSyntaxKind:\n        let spreadExpression = this.evaluateNode((node as any).expression);\n        return recordEntry({__symbolic: 'spread', expression: spreadExpression}, node);\n      case ts.SyntaxKind.CallExpression:\n        const callExpression = <ts.CallExpression>node;\n        if (isCallOf(callExpression, 'forwardRef') &&\n            arrayOrEmpty(callExpression.arguments).length === 1) {\n          const firstArgument = callExpression.arguments[0];\n          if (firstArgument.kind == ts.SyntaxKind.ArrowFunction) {\n            const arrowFunction = <ts.ArrowFunction>firstArgument;\n            return recordEntry(this.evaluateNode(arrowFunction.body), node);\n          }\n        }\n        const args = arrayOrEmpty(callExpression.arguments).map(arg => this.evaluateNode(arg));\n        if (this.isFoldable(callExpression)) {\n          if (isMethodCallOf(callExpression, 'concat')) {\n            const arrayValue = <MetadataValue[]>this.evaluateNode(\n                (<ts.PropertyAccessExpression>callExpression.expression).expression);\n            if (isFoldableError(arrayValue)) return arrayValue;\n            return arrayValue.concat(args[0]);\n          }\n        }\n        // Always fold a CONST_EXPR even if the argument is not foldable.\n        if (isCallOf(callExpression, 'CONST_EXPR') &&\n            arrayOrEmpty(callExpression.arguments).length === 1) {\n          return recordEntry(args[0], node);\n        }\n        const expression = this.evaluateNode(callExpression.expression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        let result: MetadataSymbolicCallExpression = {__symbolic: 'call', expression: expression};\n        if (args && args.length) {\n          result.arguments = args;\n        }\n        return recordEntry(result, node);\n      case ts.SyntaxKind.NewExpression:\n        const newExpression = <ts.NewExpression>node;\n        const newArgs = arrayOrEmpty(newExpression.arguments).map(arg => this.evaluateNode(arg));\n        const newTarget = this.evaluateNode(newExpression.expression);\n        if (isMetadataError(newTarget)) {\n          return recordEntry(newTarget, node);\n        }\n        const call: MetadataSymbolicCallExpression = {__symbolic: 'new', expression: newTarget};\n        if (newArgs.length) {\n          call.arguments = newArgs;\n        }\n        return recordEntry(call, node);\n      case ts.SyntaxKind.PropertyAccessExpression: {\n        const propertyAccessExpression = <ts.PropertyAccessExpression>node;\n        const expression = this.evaluateNode(propertyAccessExpression.expression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        const member = this.nameOf(propertyAccessExpression.name);\n        if (isFoldableError(member)) {\n          return recordEntry(member, node);\n        }\n        if (expression && this.isFoldable(propertyAccessExpression.expression))\n          return (<any>expression)[<string>member];\n        if (isMetadataModuleReferenceExpression(expression)) {\n          // A select into a module reference and be converted into a reference to the symbol\n          // in the module\n          return recordEntry(\n              {__symbolic: 'reference', module: expression.module, name: member}, node);\n        }\n        return recordEntry({__symbolic: 'select', expression, member}, node);\n      }\n      case ts.SyntaxKind.ElementAccessExpression: {\n        const elementAccessExpression = <ts.ElementAccessExpression>node;\n        const expression = this.evaluateNode(elementAccessExpression.expression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        if (!elementAccessExpression.argumentExpression) {\n          return recordEntry(errorSymbol('Expression form not supported', node), node);\n        }\n        const index = this.evaluateNode(elementAccessExpression.argumentExpression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        if (this.isFoldable(elementAccessExpression.expression) &&\n            this.isFoldable(elementAccessExpression.argumentExpression))\n          return (<any>expression)[<string|number>index];\n        return recordEntry({__symbolic: 'index', expression, index}, node);\n      }\n      case ts.SyntaxKind.Identifier:\n        const identifier = <ts.Identifier>node;\n        const name = identifier.text;\n        return resolveName(name, preferReference);\n      case ts.SyntaxKind.TypeReference:\n        const typeReferenceNode = <ts.TypeReferenceNode>node;\n        const typeNameNode = typeReferenceNode.typeName;\n        const getReference: (typeNameNode: ts.Identifier | ts.QualifiedName) => MetadataValue =\n            node => {\n              if (typeNameNode.kind === ts.SyntaxKind.QualifiedName) {\n                const qualifiedName = <ts.QualifiedName>node;\n                const left = this.evaluateNode(qualifiedName.left);\n                if (isMetadataModuleReferenceExpression(left)) {\n                  return recordEntry(\n                      <MetadataImportedSymbolReferenceExpression>{\n                        __symbolic: 'reference',\n                        module: left.module,\n                        name: qualifiedName.right.text\n                      },\n                      node);\n                }\n                // Record a type reference to a declared type as a select.\n                return {__symbolic: 'select', expression: left, member: qualifiedName.right.text};\n              } else {\n                const identifier = <ts.Identifier>typeNameNode;\n                const symbol = this.symbols.resolve(identifier.text);\n                if (isFoldableError(symbol) || isMetadataSymbolicReferenceExpression(symbol)) {\n                  return recordEntry(symbol, node);\n                }\n                return recordEntry(\n                    errorSymbol('Could not resolve type', node, {typeName: identifier.text}), node);\n              }\n            };\n        const typeReference = getReference(typeNameNode);\n        if (isFoldableError(typeReference)) {\n          return recordEntry(typeReference, node);\n        }\n        if (!isMetadataModuleReferenceExpression(typeReference) &&\n            typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n          const args = typeReferenceNode.typeArguments.map(element => this.evaluateNode(element));\n          // TODO: Remove typecast when upgraded to 2.0 as it will be correctly inferred.\n          // Some versions of 1.9 do not infer this correctly.\n          (<MetadataImportedSymbolReferenceExpression>typeReference).arguments = args;\n        }\n        return recordEntry(typeReference, node);\n      case ts.SyntaxKind.UnionType:\n        const unionType = <ts.UnionTypeNode>node;\n\n        // Remove null and undefined from the list of unions.\n        const references = unionType.types\n                               .filter(\n                                   n => n.kind != ts.SyntaxKind.NullKeyword &&\n                                       n.kind != ts.SyntaxKind.UndefinedKeyword)\n                               .map(n => this.evaluateNode(n));\n\n        // The remmaining reference must be the same. If two have type arguments consider them\n        // different even if the type arguments are the same.\n        let candidate: any = null;\n        for (let i = 0; i < references.length; i++) {\n          const reference = references[i];\n          if (isMetadataSymbolicReferenceExpression(reference)) {\n            if (candidate) {\n              if ((reference as any).name == candidate.name &&\n                  (reference as any).module == candidate.module && !(reference as any).arguments) {\n                candidate = reference;\n              }\n            } else {\n              candidate = reference;\n            }\n          } else {\n            return reference;\n          }\n        }\n        if (candidate) return candidate;\n        break;\n      case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n      case ts.SyntaxKind.StringLiteral:\n      case ts.SyntaxKind.TemplateHead:\n      case ts.SyntaxKind.TemplateTail:\n      case ts.SyntaxKind.TemplateMiddle:\n        return (<ts.LiteralLikeNode>node).text;\n      case ts.SyntaxKind.NumericLiteral:\n        return parseFloat((<ts.LiteralExpression>node).text);\n      case ts.SyntaxKind.AnyKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'any'}, node);\n      case ts.SyntaxKind.StringKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'string'}, node);\n      case ts.SyntaxKind.NumberKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'number'}, node);\n      case ts.SyntaxKind.BooleanKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'boolean'}, node);\n      case ts.SyntaxKind.ArrayType:\n        const arrayTypeNode = <ts.ArrayTypeNode>node;\n        return recordEntry(\n            {\n              __symbolic: 'reference',\n              name: 'Array',\n              arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n            },\n            node);\n      case ts.SyntaxKind.NullKeyword:\n        return null;\n      case ts.SyntaxKind.TrueKeyword:\n        return true;\n      case ts.SyntaxKind.FalseKeyword:\n        return false;\n      case ts.SyntaxKind.ParenthesizedExpression:\n        const parenthesizedExpression = <ts.ParenthesizedExpression>node;\n        return this.evaluateNode(parenthesizedExpression.expression);\n      case ts.SyntaxKind.TypeAssertionExpression:\n        const typeAssertion = <ts.TypeAssertion>node;\n        return this.evaluateNode(typeAssertion.expression);\n      case ts.SyntaxKind.PrefixUnaryExpression:\n        const prefixUnaryExpression = <ts.PrefixUnaryExpression>node;\n        const operand = this.evaluateNode(prefixUnaryExpression.operand);\n        if (isDefined(operand) && isPrimitive(operand)) {\n          switch (prefixUnaryExpression.operator) {\n            case ts.SyntaxKind.PlusToken:\n              return +(operand as any);\n            case ts.SyntaxKind.MinusToken:\n              return -(operand as any);\n            case ts.SyntaxKind.TildeToken:\n              return ~(operand as any);\n            case ts.SyntaxKind.ExclamationToken:\n              return !operand;\n          }\n        }\n        let operatorText: string;\n        switch (prefixUnaryExpression.operator) {\n          case ts.SyntaxKind.PlusToken:\n            operatorText = '+';\n            break;\n          case ts.SyntaxKind.MinusToken:\n            operatorText = '-';\n            break;\n          case ts.SyntaxKind.TildeToken:\n            operatorText = '~';\n            break;\n          case ts.SyntaxKind.ExclamationToken:\n            operatorText = '!';\n            break;\n          default:\n            return undefined;\n        }\n        return recordEntry({__symbolic: 'pre', operator: operatorText, operand: operand}, node);\n      case ts.SyntaxKind.BinaryExpression:\n        const binaryExpression = <ts.BinaryExpression>node;\n        const left = this.evaluateNode(binaryExpression.left);\n        const right = this.evaluateNode(binaryExpression.right);\n        if (isDefined(left) && isDefined(right)) {\n          if (isPrimitive(left) && isPrimitive(right))\n            switch (binaryExpression.operatorToken.kind) {\n              case ts.SyntaxKind.BarBarToken:\n                return <any>left || <any>right;\n              case ts.SyntaxKind.AmpersandAmpersandToken:\n                return <any>left && <any>right;\n              case ts.SyntaxKind.AmpersandToken:\n                return <any>left & <any>right;\n              case ts.SyntaxKind.BarToken:\n                return <any>left | <any>right;\n              case ts.SyntaxKind.CaretToken:\n                return <any>left ^ <any>right;\n              case ts.SyntaxKind.EqualsEqualsToken:\n                return <any>left == <any>right;\n              case ts.SyntaxKind.ExclamationEqualsToken:\n                return <any>left != <any>right;\n              case ts.SyntaxKind.EqualsEqualsEqualsToken:\n                return <any>left === <any>right;\n              case ts.SyntaxKind.ExclamationEqualsEqualsToken:\n                return <any>left !== <any>right;\n              case ts.SyntaxKind.LessThanToken:\n                return <any>left < <any>right;\n              case ts.SyntaxKind.GreaterThanToken:\n                return <any>left > <any>right;\n              case ts.SyntaxKind.LessThanEqualsToken:\n                return <any>left <= <any>right;\n              case ts.SyntaxKind.GreaterThanEqualsToken:\n                return <any>left >= <any>right;\n              case ts.SyntaxKind.LessThanLessThanToken:\n                return (<any>left) << (<any>right);\n              case ts.SyntaxKind.GreaterThanGreaterThanToken:\n                return <any>left >> <any>right;\n              case ts.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                return <any>left >>> <any>right;\n              case ts.SyntaxKind.PlusToken:\n                return <any>left + <any>right;\n              case ts.SyntaxKind.MinusToken:\n                return <any>left - <any>right;\n              case ts.SyntaxKind.AsteriskToken:\n                return <any>left * <any>right;\n              case ts.SyntaxKind.SlashToken:\n                return <any>left / <any>right;\n              case ts.SyntaxKind.PercentToken:\n                return <any>left % <any>right;\n            }\n          return recordEntry(\n              {\n                __symbolic: 'binop',\n                operator: binaryExpression.operatorToken.getText(),\n                left: left,\n                right: right\n              },\n              node);\n        }\n        break;\n      case ts.SyntaxKind.ConditionalExpression:\n        const conditionalExpression = <ts.ConditionalExpression>node;\n        const condition = this.evaluateNode(conditionalExpression.condition);\n        const thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n        const elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n        if (isPrimitive(condition)) {\n          return condition ? thenExpression : elseExpression;\n        }\n        return recordEntry({__symbolic: 'if', condition, thenExpression, elseExpression}, node);\n      case ts.SyntaxKind.FunctionExpression:\n      case ts.SyntaxKind.ArrowFunction:\n        return recordEntry(errorSymbol('Lambda not supported', node), node);\n      case ts.SyntaxKind.TaggedTemplateExpression:\n        return recordEntry(\n            errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n      case ts.SyntaxKind.TemplateExpression:\n        const templateExpression = <ts.TemplateExpression>node;\n        if (this.isFoldable(node)) {\n          return templateExpression.templateSpans.reduce(\n              (previous, current) => previous + <string>this.evaluateNode(current.expression) +\n                  <string>this.evaluateNode(current.literal),\n              this.evaluateNode(templateExpression.head));\n        } else {\n          return templateExpression.templateSpans.reduce((previous, current) => {\n            const expr = this.evaluateNode(current.expression);\n            const literal = this.evaluateNode(current.literal);\n            if (isFoldableError(expr)) return expr;\n            if (isFoldableError(literal)) return literal;\n            if (typeof previous === 'string' && typeof expr === 'string' &&\n                typeof literal === 'string') {\n              return previous + expr + literal;\n            }\n            let result = expr;\n            if (previous !== '') {\n              result = {__symbolic: 'binop', operator: '+', left: previous, right: expr};\n            }\n            if (literal != '') {\n              result = {__symbolic: 'binop', operator: '+', left: result, right: literal};\n            }\n            return result;\n          }, this.evaluateNode(templateExpression.head));\n        }\n      case ts.SyntaxKind.AsExpression:\n        const asExpression = <ts.AsExpression>node;\n        return this.evaluateNode(asExpression.expression);\n      case ts.SyntaxKind.ClassExpression:\n        return {__symbolic: 'class'};\n    }\n    return recordEntry(errorSymbol('Expression form not supported', node), node);\n  }\n}\n\nfunction isPropertyAssignment(node: ts.Node): node is ts.PropertyAssignment {\n  return node.kind == ts.SyntaxKind.PropertyAssignment;\n}\n\nconst empty = ts.createNodeArray<any>();\n\nfunction arrayOrEmpty<T extends ts.Node>(v: ts.NodeArray<T>| undefined): ts.NodeArray<T> {\n  return v || empty;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {MetadataSymbolicReferenceExpression, MetadataValue} from './schema';\n\nexport class Symbols {\n  // TODO(issue/24571): remove '!'.\n  private _symbols !: Map<string, MetadataValue>;\n  private references = new Map<string, MetadataSymbolicReferenceExpression>();\n\n  constructor(private sourceFile: ts.SourceFile) {}\n\n  resolve(name: string, preferReference?: boolean): MetadataValue|undefined {\n    return (preferReference && this.references.get(name)) || this.symbols.get(name);\n  }\n\n  define(name: string, value: MetadataValue) { this.symbols.set(name, value); }\n  defineReference(name: string, value: MetadataSymbolicReferenceExpression) {\n    this.references.set(name, value);\n  }\n\n  has(name: string): boolean { return this.symbols.has(name); }\n\n  private get symbols(): Map<string, MetadataValue> {\n    let result = this._symbols;\n    if (!result) {\n      result = this._symbols = new Map<string, MetadataValue>();\n      populateBuiltins(result);\n      this.buildImports();\n    }\n    return result;\n  }\n\n  private buildImports(): void {\n    const symbols = this._symbols;\n    // Collect the imported symbols into this.symbols\n    const stripQuotes = (s: string) => s.replace(/^['\"]|['\"]$/g, '');\n    const visit = (node: ts.Node) => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ImportEqualsDeclaration:\n          const importEqualsDeclaration = <ts.ImportEqualsDeclaration>node;\n          if (importEqualsDeclaration.moduleReference.kind ===\n              ts.SyntaxKind.ExternalModuleReference) {\n            const externalReference =\n                <ts.ExternalModuleReference>importEqualsDeclaration.moduleReference;\n            if (externalReference.expression) {\n              // An `import <identifier> = require(<module-specifier>);\n              if (!externalReference.expression.parent) {\n                // The `parent` field of a node is set by the TypeScript binder (run as\n                // part of the type checker). Setting it here allows us to call `getText()`\n                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                // sets the parent.\n                externalReference.expression.parent = externalReference;\n                externalReference.parent = this.sourceFile as any;\n              }\n              const from = stripQuotes(externalReference.expression.getText());\n              symbols.set(\n                  importEqualsDeclaration.name.text, {__symbolic: 'reference', module: from});\n              break;\n            }\n          }\n          symbols.set(\n              importEqualsDeclaration.name.text,\n              {__symbolic: 'error', message: `Unsupported import syntax`});\n          break;\n        case ts.SyntaxKind.ImportDeclaration:\n          const importDecl = <ts.ImportDeclaration>node;\n          if (!importDecl.importClause) {\n            // An `import <module-specifier>` clause which does not bring symbols into scope.\n            break;\n          }\n          if (!importDecl.moduleSpecifier.parent) {\n            // See note above in the `ImportEqualDeclaration` case.\n            importDecl.moduleSpecifier.parent = importDecl;\n            importDecl.parent = this.sourceFile;\n          }\n          const from = stripQuotes(importDecl.moduleSpecifier.getText());\n          if (importDecl.importClause.name) {\n            // An `import <identifier> form <module-specifier>` clause. Record the default symbol.\n            symbols.set(\n                importDecl.importClause.name.text,\n                {__symbolic: 'reference', module: from, default: true});\n          }\n          const bindings = importDecl.importClause.namedBindings;\n          if (bindings) {\n            switch (bindings.kind) {\n              case ts.SyntaxKind.NamedImports:\n                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                for (const binding of (<ts.NamedImports>bindings).elements) {\n                  symbols.set(binding.name.text, {\n                    __symbolic: 'reference',\n                    module: from,\n                    name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                  });\n                }\n                break;\n              case ts.SyntaxKind.NamespaceImport:\n                // An `input * as <identifier> from <module-specifier>` clause.\n                symbols.set(\n                    (<ts.NamespaceImport>bindings).name.text,\n                    {__symbolic: 'reference', module: from});\n                break;\n            }\n          }\n          break;\n      }\n      ts.forEachChild(node, visit);\n    };\n    if (this.sourceFile) {\n      ts.forEachChild(this.sourceFile, visit);\n    }\n  }\n}\n\nfunction populateBuiltins(symbols: Map<string, MetadataValue>) {\n  // From lib.core.d.ts (all \"define const\")\n  ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n   'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n   'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n   'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n   'Float64Array']\n      .forEach(name => symbols.set(name, {__symbolic: 'reference', name}));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {Evaluator, errorSymbol, recordMapEntry} from './evaluator';\nimport {ClassMetadata, ConstructorMetadata, FunctionMetadata, InterfaceMetadata, METADATA_VERSION, MemberMetadata, MetadataEntry, MetadataError, MetadataMap, MetadataSymbolicBinaryExpression, MetadataSymbolicCallExpression, MetadataSymbolicExpression, MetadataSymbolicIfExpression, MetadataSymbolicIndexExpression, MetadataSymbolicPrefixExpression, MetadataSymbolicReferenceExpression, MetadataSymbolicSelectExpression, MetadataSymbolicSpreadExpression, MetadataValue, MethodMetadata, ModuleExportMetadata, ModuleMetadata, isClassMetadata, isConstructorMetadata, isFunctionMetadata, isMetadataError, isMetadataGlobalReferenceExpression, isMetadataImportDefaultReference, isMetadataImportedSymbolReferenceExpression, isMetadataSymbolicExpression, isMetadataSymbolicReferenceExpression, isMetadataSymbolicSelectExpression, isMethodMetadata} from './schema';\nimport {Symbols} from './symbols';\n\nconst isStatic = (node: ts.Declaration) =>\n    ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Static;\n\n/**\n * A set of collector options to use when collecting metadata.\n */\nexport interface CollectorOptions {\n  /**\n   * Version of the metadata to collect.\n   */\n  version?: number;\n\n  /**\n   * Collect a hidden field \"$quoted$\" in objects literals that record when the key was quoted in\n   * the source.\n   */\n  quotedNames?: boolean;\n\n  /**\n   * Do not simplify invalid expressions.\n   */\n  verboseInvalidExpression?: boolean;\n\n  /**\n   * An expression substitution callback.\n   */\n  substituteExpression?: (value: MetadataValue, node: ts.Node) => MetadataValue;\n}\n\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nexport class MetadataCollector {\n  constructor(private options: CollectorOptions = {}) {}\n\n  /**\n   * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n   * the source file that is expected to correspond to a module.\n   */\n  public getMetadata(\n      sourceFile: ts.SourceFile, strict: boolean = false,\n      substituteExpression?: (value: MetadataValue, node: ts.Node) => MetadataValue): ModuleMetadata\n      |undefined {\n    const locals = new Symbols(sourceFile);\n    const nodeMap =\n        new Map<MetadataValue|ClassMetadata|InterfaceMetadata|FunctionMetadata, ts.Node>();\n    const composedSubstituter = substituteExpression && this.options.substituteExpression ?\n        (value: MetadataValue, node: ts.Node) =>\n            this.options.substituteExpression !(substituteExpression(value, node), node) :\n        substituteExpression;\n    const evaluatorOptions = substituteExpression ?\n        {...this.options, substituteExpression: composedSubstituter} :\n        this.options;\n    let metadata: {[name: string]: MetadataValue | ClassMetadata | FunctionMetadata}|undefined;\n    const evaluator = new Evaluator(locals, nodeMap, evaluatorOptions, (name, value) => {\n      if (!metadata) metadata = {};\n      metadata[name] = value;\n    });\n    let exports: ModuleExportMetadata[]|undefined = undefined;\n\n    function objFromDecorator(decoratorNode: ts.Decorator): MetadataSymbolicExpression {\n      return <MetadataSymbolicExpression>evaluator.evaluateNode(decoratorNode.expression);\n    }\n\n    function recordEntry<T extends MetadataEntry>(entry: T, node: ts.Node): T {\n      if (composedSubstituter) {\n        entry = composedSubstituter(entry as MetadataValue, node) as T;\n      }\n      return recordMapEntry(entry, node, nodeMap, sourceFile);\n    }\n\n    function errorSym(\n        message: string, node?: ts.Node, context?: {[name: string]: string}): MetadataError {\n      return errorSymbol(message, node, context, sourceFile);\n    }\n\n    function maybeGetSimpleFunction(\n        functionDeclaration: ts.FunctionDeclaration |\n        ts.MethodDeclaration): {func: FunctionMetadata, name: string}|undefined {\n      if (functionDeclaration.name && functionDeclaration.name.kind == ts.SyntaxKind.Identifier) {\n        const nameNode = <ts.Identifier>functionDeclaration.name;\n        const functionName = nameNode.text;\n        const functionBody = functionDeclaration.body;\n        if (functionBody && functionBody.statements.length == 1) {\n          const statement = functionBody.statements[0];\n          if (statement.kind === ts.SyntaxKind.ReturnStatement) {\n            const returnStatement = <ts.ReturnStatement>statement;\n            if (returnStatement.expression) {\n              const func: FunctionMetadata = {\n                __symbolic: 'function',\n                parameters: namesOf(functionDeclaration.parameters),\n                value: evaluator.evaluateNode(returnStatement.expression)\n              };\n              if (functionDeclaration.parameters.some(p => p.initializer != null)) {\n                func.defaults = functionDeclaration.parameters.map(\n                    p => p.initializer && evaluator.evaluateNode(p.initializer));\n              }\n              return recordEntry({func, name: functionName}, functionDeclaration);\n            }\n          }\n        }\n      }\n    }\n\n    function classMetadataOf(classDeclaration: ts.ClassDeclaration): ClassMetadata {\n      const result: ClassMetadata = {__symbolic: 'class'};\n\n      function getDecorators(decorators: ReadonlyArray<ts.Decorator>| undefined):\n          MetadataSymbolicExpression[]|undefined {\n        if (decorators && decorators.length)\n          return decorators.map(decorator => objFromDecorator(decorator));\n        return undefined;\n      }\n\n      function referenceFrom(node: ts.Node): MetadataSymbolicReferenceExpression|MetadataError|\n          MetadataSymbolicSelectExpression {\n        const result = evaluator.evaluateNode(node);\n        if (isMetadataError(result) || isMetadataSymbolicReferenceExpression(result) ||\n            isMetadataSymbolicSelectExpression(result)) {\n          return result;\n        } else {\n          return errorSym('Symbol reference expected', node);\n        }\n      }\n\n      // Add class parents\n      if (classDeclaration.heritageClauses) {\n        classDeclaration.heritageClauses.forEach((hc) => {\n          if (hc.token === ts.SyntaxKind.ExtendsKeyword && hc.types) {\n            hc.types.forEach(type => result.extends = referenceFrom(type.expression));\n          }\n        });\n      }\n\n      // Add arity if the type is generic\n      const typeParameters = classDeclaration.typeParameters;\n      if (typeParameters && typeParameters.length) {\n        result.arity = typeParameters.length;\n      }\n\n      // Add class decorators\n      if (classDeclaration.decorators) {\n        result.decorators = getDecorators(classDeclaration.decorators);\n      }\n\n      // member decorators\n      let members: MetadataMap|null = null;\n      function recordMember(name: string, metadata: MemberMetadata) {\n        if (!members) members = {};\n        const data = members.hasOwnProperty(name) ? members[name] : [];\n        data.push(metadata);\n        members[name] = data;\n      }\n\n      // static member\n      let statics: {[name: string]: MetadataValue | FunctionMetadata}|null = null;\n      function recordStaticMember(name: string, value: MetadataValue | FunctionMetadata) {\n        if (!statics) statics = {};\n        statics[name] = value;\n      }\n\n      for (const member of classDeclaration.members) {\n        let isConstructor = false;\n        switch (member.kind) {\n          case ts.SyntaxKind.Constructor:\n          case ts.SyntaxKind.MethodDeclaration:\n            isConstructor = member.kind === ts.SyntaxKind.Constructor;\n            const method = <ts.MethodDeclaration|ts.ConstructorDeclaration>member;\n            if (isStatic(method)) {\n              const maybeFunc = maybeGetSimpleFunction(<ts.MethodDeclaration>method);\n              if (maybeFunc) {\n                recordStaticMember(maybeFunc.name, maybeFunc.func);\n              }\n              continue;\n            }\n            const methodDecorators = getDecorators(method.decorators);\n            const parameters = method.parameters;\n            const parameterDecoratorData:\n                ((MetadataSymbolicExpression | MetadataError)[] | undefined)[] = [];\n            const parametersData:\n                (MetadataSymbolicReferenceExpression | MetadataError |\n                 MetadataSymbolicSelectExpression | null)[] = [];\n            let hasDecoratorData: boolean = false;\n            let hasParameterData: boolean = false;\n            for (const parameter of parameters) {\n              const parameterData = getDecorators(parameter.decorators);\n              parameterDecoratorData.push(parameterData);\n              hasDecoratorData = hasDecoratorData || !!parameterData;\n              if (isConstructor) {\n                if (parameter.type) {\n                  parametersData.push(referenceFrom(parameter.type));\n                } else {\n                  parametersData.push(null);\n                }\n                hasParameterData = true;\n              }\n            }\n            const data: MethodMetadata = {__symbolic: isConstructor ? 'constructor' : 'method'};\n            const name = isConstructor ? '__ctor__' : evaluator.nameOf(member.name);\n            if (methodDecorators) {\n              data.decorators = methodDecorators;\n            }\n            if (hasDecoratorData) {\n              data.parameterDecorators = parameterDecoratorData;\n            }\n            if (hasParameterData) {\n              (<ConstructorMetadata>data).parameters = parametersData;\n            }\n            if (!isMetadataError(name)) {\n              recordMember(name, data);\n            }\n            break;\n          case ts.SyntaxKind.PropertyDeclaration:\n          case ts.SyntaxKind.GetAccessor:\n          case ts.SyntaxKind.SetAccessor:\n            const property = <ts.PropertyDeclaration>member;\n            if (isStatic(property)) {\n              const name = evaluator.nameOf(property.name);\n              if (!isMetadataError(name)) {\n                if (property.initializer) {\n                  const value = evaluator.evaluateNode(property.initializer);\n                  recordStaticMember(name, value);\n                } else {\n                  recordStaticMember(name, errorSym('Variable not initialized', property.name));\n                }\n              }\n            }\n            const propertyDecorators = getDecorators(property.decorators);\n            if (propertyDecorators) {\n              const name = evaluator.nameOf(property.name);\n              if (!isMetadataError(name)) {\n                recordMember(name, {__symbolic: 'property', decorators: propertyDecorators});\n              }\n            }\n            break;\n        }\n      }\n      if (members) {\n        result.members = members;\n      }\n      if (statics) {\n        result.statics = statics;\n      }\n\n      return recordEntry(result, classDeclaration);\n    }\n\n    // Collect all exported symbols from an exports clause.\n    const exportMap = new Map<string, string>();\n    ts.forEachChild(sourceFile, node => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ExportDeclaration:\n          const exportDeclaration = <ts.ExportDeclaration>node;\n          const {moduleSpecifier, exportClause} = exportDeclaration;\n\n          if (!moduleSpecifier) {\n            // If there is a module specifier there is also an exportClause\n            exportClause !.elements.forEach(spec => {\n              const exportedAs = spec.name.text;\n              const name = (spec.propertyName || spec.name).text;\n              exportMap.set(name, exportedAs);\n            });\n          }\n      }\n    });\n\n    const isExport = (node: ts.Node) => sourceFile.isDeclarationFile ||\n        ts.getCombinedModifierFlags(node as ts.Declaration) & ts.ModifierFlags.Export;\n    const isExportedIdentifier = (identifier?: ts.Identifier) =>\n        identifier && exportMap.has(identifier.text);\n    const isExported =\n        (node: ts.FunctionDeclaration | ts.ClassDeclaration | ts.TypeAliasDeclaration |\n         ts.InterfaceDeclaration | ts.EnumDeclaration) =>\n            isExport(node) || isExportedIdentifier(node.name);\n    const exportedIdentifierName = (identifier?: ts.Identifier) =>\n        identifier && (exportMap.get(identifier.text) || identifier.text);\n    const exportedName =\n        (node: ts.FunctionDeclaration | ts.ClassDeclaration | ts.InterfaceDeclaration |\n         ts.TypeAliasDeclaration | ts.EnumDeclaration) => exportedIdentifierName(node.name);\n\n\n    // Pre-declare classes and functions\n    ts.forEachChild(sourceFile, node => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ClassDeclaration:\n          const classDeclaration = <ts.ClassDeclaration>node;\n          if (classDeclaration.name) {\n            const className = classDeclaration.name.text;\n            if (isExported(classDeclaration)) {\n              locals.define(\n                  className, {__symbolic: 'reference', name: exportedName(classDeclaration)});\n            } else {\n              locals.define(\n                  className, errorSym('Reference to non-exported class', node, {className}));\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.InterfaceDeclaration:\n          const interfaceDeclaration = <ts.InterfaceDeclaration>node;\n          if (interfaceDeclaration.name) {\n            const interfaceName = interfaceDeclaration.name.text;\n            // All references to interfaces should be converted to references to `any`.\n            locals.define(interfaceName, {__symbolic: 'reference', name: 'any'});\n          }\n          break;\n\n        case ts.SyntaxKind.FunctionDeclaration:\n          const functionDeclaration = <ts.FunctionDeclaration>node;\n          if (!isExported(functionDeclaration)) {\n            // Report references to this function as an error.\n            const nameNode = functionDeclaration.name;\n            if (nameNode && nameNode.text) {\n              locals.define(\n                  nameNode.text,\n                  errorSym(\n                      'Reference to a non-exported function', nameNode, {name: nameNode.text}));\n            }\n          }\n          break;\n      }\n    });\n\n    ts.forEachChild(sourceFile, node => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ExportDeclaration:\n          // Record export declarations\n          const exportDeclaration = <ts.ExportDeclaration>node;\n          const {moduleSpecifier, exportClause} = exportDeclaration;\n\n          if (!moduleSpecifier) {\n            // no module specifier -> export {propName as name};\n            if (exportClause) {\n              exportClause.elements.forEach(spec => {\n                const name = spec.name.text;\n                // If the symbol was not already exported, export a reference since it is a\n                // reference to an import\n                if (!metadata || !metadata[name]) {\n                  const propNode = spec.propertyName || spec.name;\n                  const value: MetadataValue = evaluator.evaluateNode(propNode);\n                  if (!metadata) metadata = {};\n                  metadata[name] = recordEntry(value, node);\n                }\n              });\n            }\n          }\n\n          if (moduleSpecifier && moduleSpecifier.kind == ts.SyntaxKind.StringLiteral) {\n            // Ignore exports that don't have string literals as exports.\n            // This is allowed by the syntax but will be flagged as an error by the type checker.\n            const from = (<ts.StringLiteral>moduleSpecifier).text;\n            const moduleExport: ModuleExportMetadata = {from};\n            if (exportClause) {\n              moduleExport.export = exportClause.elements.map(\n                  spec => spec.propertyName ? {name: spec.propertyName.text, as: spec.name.text} :\n                                              spec.name.text);\n            }\n            if (!exports) exports = [];\n            exports.push(moduleExport);\n          }\n          break;\n        case ts.SyntaxKind.ClassDeclaration:\n          const classDeclaration = <ts.ClassDeclaration>node;\n          if (classDeclaration.name) {\n            if (isExported(classDeclaration)) {\n              const name = exportedName(classDeclaration);\n              if (name) {\n                if (!metadata) metadata = {};\n                metadata[name] = classMetadataOf(classDeclaration);\n              }\n            }\n          }\n          // Otherwise don't record metadata for the class.\n          break;\n\n        case ts.SyntaxKind.TypeAliasDeclaration:\n          const typeDeclaration = <ts.TypeAliasDeclaration>node;\n          if (typeDeclaration.name && isExported(typeDeclaration)) {\n            const name = exportedName(typeDeclaration);\n            if (name) {\n              if (!metadata) metadata = {};\n              metadata[name] = {__symbolic: 'interface'};\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.InterfaceDeclaration:\n          const interfaceDeclaration = <ts.InterfaceDeclaration>node;\n          if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n            const name = exportedName(interfaceDeclaration);\n            if (name) {\n              if (!metadata) metadata = {};\n              metadata[name] = {__symbolic: 'interface'};\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.FunctionDeclaration:\n          // Record functions that return a single value. Record the parameter\n          // names substitution will be performed by the StaticReflector.\n          const functionDeclaration = <ts.FunctionDeclaration>node;\n          if (isExported(functionDeclaration) && functionDeclaration.name) {\n            const name = exportedName(functionDeclaration);\n            const maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n            if (name) {\n              if (!metadata) metadata = {};\n              metadata[name] =\n                  maybeFunc ? recordEntry(maybeFunc.func, node) : {__symbolic: 'function'};\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.EnumDeclaration:\n          const enumDeclaration = <ts.EnumDeclaration>node;\n          if (isExported(enumDeclaration)) {\n            const enumValueHolder: {[name: string]: MetadataValue} = {};\n            const enumName = exportedName(enumDeclaration);\n            let nextDefaultValue: MetadataValue = 0;\n            let writtenMembers = 0;\n            for (const member of enumDeclaration.members) {\n              let enumValue: MetadataValue;\n              if (!member.initializer) {\n                enumValue = nextDefaultValue;\n              } else {\n                enumValue = evaluator.evaluateNode(member.initializer);\n              }\n              let name: string|undefined = undefined;\n              if (member.name.kind == ts.SyntaxKind.Identifier) {\n                const identifier = <ts.Identifier>member.name;\n                name = identifier.text;\n                enumValueHolder[name] = enumValue;\n                writtenMembers++;\n              }\n              if (typeof enumValue === 'number') {\n                nextDefaultValue = enumValue + 1;\n              } else if (name) {\n                nextDefaultValue = {\n                  __symbolic: 'binary',\n                  operator: '+',\n                  left: {\n                    __symbolic: 'select',\n                    expression: recordEntry({__symbolic: 'reference', name: enumName}, node), name\n                  }\n                };\n              } else {\n                nextDefaultValue =\n                    recordEntry(errorSym('Unsupported enum member name', member.name), node);\n              }\n            }\n            if (writtenMembers) {\n              if (enumName) {\n                if (!metadata) metadata = {};\n                metadata[enumName] = recordEntry(enumValueHolder, node);\n              }\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.VariableStatement:\n          const variableStatement = <ts.VariableStatement>node;\n          for (const variableDeclaration of variableStatement.declarationList.declarations) {\n            if (variableDeclaration.name.kind == ts.SyntaxKind.Identifier) {\n              const nameNode = <ts.Identifier>variableDeclaration.name;\n              let varValue: MetadataValue;\n              if (variableDeclaration.initializer) {\n                varValue = evaluator.evaluateNode(variableDeclaration.initializer);\n              } else {\n                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n              }\n              let exported = false;\n              if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                  isExportedIdentifier(nameNode)) {\n                const name = exportedIdentifierName(nameNode);\n                if (name) {\n                  if (!metadata) metadata = {};\n                  metadata[name] = recordEntry(varValue, node);\n                }\n                exported = true;\n              }\n              if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                  typeof varValue == 'boolean') {\n                locals.define(nameNode.text, varValue);\n                if (exported) {\n                  locals.defineReference(\n                      nameNode.text, {__symbolic: 'reference', name: nameNode.text});\n                }\n              } else if (!exported) {\n                if (varValue && !isMetadataError(varValue)) {\n                  locals.define(nameNode.text, recordEntry(varValue, node));\n                } else {\n                  locals.define(\n                      nameNode.text,\n                      recordEntry(\n                          errorSym('Reference to a local symbol', nameNode, {name: nameNode.text}),\n                          node));\n                }\n              }\n            } else {\n              // Destructuring (or binding) declarations are not supported,\n              // var {<identifier>[, <identifier>]+} = <expression>;\n              //   or\n              // var [<identifier>[, <identifier}+] = <expression>;\n              // are not supported.\n              const report: (nameNode: ts.Node) => void = (nameNode: ts.Node) => {\n                switch (nameNode.kind) {\n                  case ts.SyntaxKind.Identifier:\n                    const name = <ts.Identifier>nameNode;\n                    const varValue = errorSym('Destructuring not supported', name);\n                    locals.define(name.text, varValue);\n                    if (isExport(node)) {\n                      if (!metadata) metadata = {};\n                      metadata[name.text] = varValue;\n                    }\n                    break;\n                  case ts.SyntaxKind.BindingElement:\n                    const bindingElement = <ts.BindingElement>nameNode;\n                    report(bindingElement.name);\n                    break;\n                  case ts.SyntaxKind.ObjectBindingPattern:\n                  case ts.SyntaxKind.ArrayBindingPattern:\n                    const bindings = <ts.BindingPattern>nameNode;\n                    (bindings as any).elements.forEach(report);\n                    break;\n                }\n              };\n              report(variableDeclaration.name);\n            }\n          }\n          break;\n      }\n    });\n\n    if (metadata || exports) {\n      if (!metadata)\n        metadata = {};\n      else if (strict) {\n        validateMetadata(sourceFile, nodeMap, metadata);\n      }\n      const result: ModuleMetadata = {\n        __symbolic: 'module',\n        version: this.options.version || METADATA_VERSION, metadata\n      };\n      if (sourceFile.moduleName) result.importAs = sourceFile.moduleName;\n      if (exports) result.exports = exports;\n      return result;\n    }\n  }\n}\n\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(\n    sourceFile: ts.SourceFile, nodeMap: Map<MetadataEntry, ts.Node>,\n    metadata: {[name: string]: MetadataEntry}) {\n  let locals: Set<string> = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n\n  function validateExpression(\n      expression: MetadataValue | MetadataSymbolicExpression | MetadataError) {\n    if (!expression) {\n      return;\n    } else if (Array.isArray(expression)) {\n      expression.forEach(validateExpression);\n    } else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n      Object.getOwnPropertyNames(expression).forEach(v => validateExpression((<any>expression)[v]));\n    } else if (isMetadataError(expression)) {\n      reportError(expression);\n    } else if (isMetadataGlobalReferenceExpression(expression)) {\n      if (!locals.has(expression.name)) {\n        const reference = <MetadataValue>metadata[expression.name];\n        if (reference) {\n          validateExpression(reference);\n        }\n      }\n    } else if (isFunctionMetadata(expression)) {\n      validateFunction(<any>expression);\n    } else if (isMetadataSymbolicExpression(expression)) {\n      switch (expression.__symbolic) {\n        case 'binary':\n          const binaryExpression = <MetadataSymbolicBinaryExpression>expression;\n          validateExpression(binaryExpression.left);\n          validateExpression(binaryExpression.right);\n          break;\n        case 'call':\n        case 'new':\n          const callExpression = <MetadataSymbolicCallExpression>expression;\n          validateExpression(callExpression.expression);\n          if (callExpression.arguments) callExpression.arguments.forEach(validateExpression);\n          break;\n        case 'index':\n          const indexExpression = <MetadataSymbolicIndexExpression>expression;\n          validateExpression(indexExpression.expression);\n          validateExpression(indexExpression.index);\n          break;\n        case 'pre':\n          const prefixExpression = <MetadataSymbolicPrefixExpression>expression;\n          validateExpression(prefixExpression.operand);\n          break;\n        case 'select':\n          const selectExpression = <MetadataSymbolicSelectExpression>expression;\n          validateExpression(selectExpression.expression);\n          break;\n        case 'spread':\n          const spreadExpression = <MetadataSymbolicSpreadExpression>expression;\n          validateExpression(spreadExpression.expression);\n          break;\n        case 'if':\n          const ifExpression = <MetadataSymbolicIfExpression>expression;\n          validateExpression(ifExpression.condition);\n          validateExpression(ifExpression.elseExpression);\n          validateExpression(ifExpression.thenExpression);\n          break;\n      }\n    }\n  }\n\n  function validateMember(classData: ClassMetadata, member: MemberMetadata) {\n    if (member.decorators) {\n      member.decorators.forEach(validateExpression);\n    }\n    if (isMethodMetadata(member) && member.parameterDecorators) {\n      member.parameterDecorators.forEach(validateExpression);\n    }\n    // Only validate parameters of classes for which we know that are used with our DI\n    if (classData.decorators && isConstructorMetadata(member) && member.parameters) {\n      member.parameters.forEach(validateExpression);\n    }\n  }\n\n  function validateClass(classData: ClassMetadata) {\n    if (classData.decorators) {\n      classData.decorators.forEach(validateExpression);\n    }\n    if (classData.members) {\n      Object.getOwnPropertyNames(classData.members)\n          .forEach(name => classData.members ![name].forEach((m) => validateMember(classData, m)));\n    }\n    if (classData.statics) {\n      Object.getOwnPropertyNames(classData.statics).forEach(name => {\n        const staticMember = classData.statics ![name];\n        if (isFunctionMetadata(staticMember)) {\n          validateExpression(staticMember.value);\n        } else {\n          validateExpression(staticMember);\n        }\n      });\n    }\n  }\n\n  function validateFunction(functionDeclaration: FunctionMetadata) {\n    if (functionDeclaration.value) {\n      const oldLocals = locals;\n      if (functionDeclaration.parameters) {\n        locals = new Set(oldLocals.values());\n        if (functionDeclaration.parameters)\n          functionDeclaration.parameters.forEach(n => locals.add(n));\n      }\n      validateExpression(functionDeclaration.value);\n      locals = oldLocals;\n    }\n  }\n\n  function shouldReportNode(node: ts.Node | undefined) {\n    if (node) {\n      const nodeStart = node.getStart();\n      return !(\n          node.pos != nodeStart &&\n          sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n    }\n    return true;\n  }\n\n  function reportError(error: MetadataError) {\n    const node = nodeMap.get(error);\n    if (shouldReportNode(node)) {\n      const lineInfo = error.line != undefined ?\n          error.character != undefined ? `:${error.line + 1}:${error.character + 1}` :\n                                         `:${error.line + 1}` :\n          '';\n      throw new Error(\n          `${sourceFile.fileName}${lineInfo}: Metadata collected contains an error that will be reported at runtime: ${expandedMessage(error)}.\\n  ${JSON.stringify(error)}`);\n    }\n  }\n\n  Object.getOwnPropertyNames(metadata).forEach(name => {\n    const entry = metadata[name];\n    try {\n      if (isClassMetadata(entry)) {\n        validateClass(entry);\n      }\n    } catch (e) {\n      const node = nodeMap.get(entry);\n      if (shouldReportNode(node)) {\n        if (node) {\n          const {line, character} = sourceFile.getLineAndCharacterOfPosition(node.getStart());\n          throw new Error(\n              `${sourceFile.fileName}:${line + 1}:${character + 1}: Error encountered in metadata generated for exported symbol '${name}': \\n ${e.message}`);\n        }\n        throw new Error(\n            `Error encountered in metadata generated for exported symbol ${name}: \\n ${e.message}`);\n      }\n    }\n  });\n}\n\n// Collect parameter names from a function.\nfunction namesOf(parameters: ts.NodeArray<ts.ParameterDeclaration>): string[] {\n  const result: string[] = [];\n\n  function addNamesOf(name: ts.Identifier | ts.BindingPattern) {\n    if (name.kind == ts.SyntaxKind.Identifier) {\n      const identifier = <ts.Identifier>name;\n      result.push(identifier.text);\n    } else {\n      const bindingPattern = <ts.BindingPattern>name;\n      for (const element of bindingPattern.elements) {\n        const name = (element as any).name;\n        if (name) {\n          addNamesOf(name);\n        }\n      }\n    }\n  }\n\n  for (const parameter of parameters) {\n    addNamesOf(parameter.name);\n  }\n\n  return result;\n}\n\nfunction expandedMessage(error: any): string {\n  switch (error.message) {\n    case 'Reference to non-exported class':\n      if (error.context && error.context.className) {\n        return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n      }\n      break;\n    case 'Variable not initialized':\n      return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n    case 'Destructuring not supported':\n      return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n    case 'Could not resolve type':\n      if (error.context && error.context.typeName) {\n        return `Could not resolve type ${error.context.typeName}`;\n      }\n      break;\n    case 'Function call not supported':\n      let prefix =\n          error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n      return prefix +\n          'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n    case 'Reference to a local symbol':\n      if (error.context && error.context.name) {\n        return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n      }\n  }\n  return error.message;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {MetadataCache} from '../transformers/metadata_cache';\n\nimport {MetadataCollector} from './collector';\nimport {ClassMetadata, ConstructorMetadata, FunctionMetadata, METADATA_VERSION, MemberMetadata, MetadataEntry, MetadataError, MetadataImportedSymbolReferenceExpression, MetadataMap, MetadataObject, MetadataSymbolicExpression, MetadataSymbolicReferenceExpression, MetadataValue, MethodMetadata, ModuleExportMetadata, ModuleMetadata, isClassMetadata, isConstructorMetadata, isFunctionMetadata, isInterfaceMetadata, isMetadataError, isMetadataGlobalReferenceExpression, isMetadataImportedSymbolReferenceExpression, isMetadataModuleReferenceExpression, isMetadataSymbolicExpression, isMethodMetadata} from './schema';\n\n\n\n// The character set used to produce private names.\nconst PRIVATE_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\n\ninterface Symbol {\n  module: string;\n  name: string;\n\n  // Produced by indirectly by exportAll() for symbols re-export another symbol.\n  exports?: Symbol;\n\n  // Produced by indirectly by exportAll() for symbols are re-exported by another symbol.\n  reexportedAs?: Symbol;\n\n  // Produced by canonicalizeSymbols() for all symbols. A symbol is private if it is not\n  // exported by the index.\n  isPrivate?: boolean;\n\n  // Produced by canonicalizeSymbols() for all symbols. This is the one symbol that\n  // respresents all other symbols and is the only symbol that, among all the re-exported\n  // aliases, whose fields can be trusted to contain the correct information.\n  // For private symbols this is the declaration symbol. For public symbols this is the\n  // symbol that is exported.\n  canonicalSymbol?: Symbol;\n\n  // Produced by canonicalizeSymbols() for all symbols. This the symbol that originally\n  // declared the value and should be used to fetch the value.\n  declaration?: Symbol;\n\n  // A symbol is referenced if it is exported from index or referenced by the value of\n  // a referenced symbol's value.\n  referenced?: boolean;\n\n  // A symbol is marked as a re-export the symbol was rexported from a module that is\n  // not part of the flat module bundle.\n  reexport?: boolean;\n\n  // Only valid for referenced canonical symbols. Produces by convertSymbols().\n  value?: MetadataEntry;\n\n  // Only valid for referenced private symbols. It is the name to use to import the symbol from\n  // the bundle index. Produce by assignPrivateNames();\n  privateName?: string;\n}\n\nexport interface BundleEntries { [name: string]: MetadataEntry; }\n\nexport interface BundlePrivateEntry {\n  privateName: string;\n  name: string;\n  module: string;\n}\n\nexport interface BundledModule {\n  metadata: ModuleMetadata;\n  privates: BundlePrivateEntry[];\n}\n\nexport interface MetadataBundlerHost {\n  getMetadataFor(moduleName: string, containingFile: string): ModuleMetadata|undefined;\n}\n\ntype StaticsMetadata = {\n  [name: string]: MetadataValue | FunctionMetadata;\n};\n\nexport class MetadataBundler {\n  private symbolMap = new Map<string, Symbol>();\n  private metadataCache = new Map<string, ModuleMetadata|undefined>();\n  private exports = new Map<string, Symbol[]>();\n  private rootModule: string;\n  private privateSymbolPrefix: string;\n  // TODO(issue/24571): remove '!'.\n  private exported !: Set<Symbol>;\n\n  constructor(\n      private root: string, private importAs: string|undefined, private host: MetadataBundlerHost,\n      privateSymbolPrefix?: string) {\n    this.rootModule = `./${path.basename(root)}`;\n    this.privateSymbolPrefix = (privateSymbolPrefix || '').replace(/\\W/g, '_');\n  }\n\n  getMetadataBundle(): BundledModule {\n    // Export the root module. This also collects the transitive closure of all values referenced by\n    // the exports.\n    const exportedSymbols = this.exportAll(this.rootModule);\n    this.canonicalizeSymbols(exportedSymbols);\n    // TODO: exports? e.g. a module re-exports a symbol from another bundle\n    const metadata = this.getEntries(exportedSymbols);\n    const privates = Array.from(this.symbolMap.values())\n                         .filter(s => s.referenced && s.isPrivate)\n                         .map(s => ({\n                                privateName: s.privateName !,\n                                name: s.declaration !.name,\n                                module: s.declaration !.module\n                              }));\n    const origins = Array.from(this.symbolMap.values())\n                        .filter(s => s.referenced && !s.reexport)\n                        .reduce<{[name: string]: string}>((p, s) => {\n                          p[s.isPrivate ? s.privateName ! : s.name] = s.declaration !.module;\n                          return p;\n                        }, {});\n    const exports = this.getReExports(exportedSymbols);\n    return {\n      metadata: {\n        __symbolic: 'module',\n        version: METADATA_VERSION,\n        exports: exports.length ? exports : undefined, metadata, origins,\n        importAs: this.importAs !\n      },\n      privates\n    };\n  }\n\n  static resolveModule(importName: string, from: string): string {\n    return resolveModule(importName, from);\n  }\n\n  private getMetadata(moduleName: string): ModuleMetadata|undefined {\n    let result = this.metadataCache.get(moduleName);\n    if (!result) {\n      if (moduleName.startsWith('.')) {\n        const fullModuleName = resolveModule(moduleName, this.root);\n        result = this.host.getMetadataFor(fullModuleName, this.root);\n      }\n      this.metadataCache.set(moduleName, result);\n    }\n    return result;\n  }\n\n  private exportAll(moduleName: string): Symbol[] {\n    const module = this.getMetadata(moduleName);\n    let result = this.exports.get(moduleName);\n\n    if (result) {\n      return result;\n    }\n\n    result = [];\n\n    const exportSymbol = (exportedSymbol: Symbol, exportAs: string) => {\n      const symbol = this.symbolOf(moduleName, exportAs);\n      result !.push(symbol);\n      exportedSymbol.reexportedAs = symbol;\n      symbol.exports = exportedSymbol;\n    };\n\n    // Export all the symbols defined in this module.\n    if (module && module.metadata) {\n      for (let key in module.metadata) {\n        const data = module.metadata[key];\n        if (isMetadataImportedSymbolReferenceExpression(data)) {\n          // This is a re-export of an imported symbol. Record this as a re-export.\n          const exportFrom = resolveModule(data.module, moduleName);\n          this.exportAll(exportFrom);\n          const symbol = this.symbolOf(exportFrom, data.name);\n          exportSymbol(symbol, key);\n        } else {\n          // Record that this symbol is exported by this module.\n          result.push(this.symbolOf(moduleName, key));\n        }\n      }\n    }\n\n    // Export all the re-exports from this module\n    if (module && module.exports) {\n      for (const exportDeclaration of module.exports) {\n        const exportFrom = resolveModule(exportDeclaration.from, moduleName);\n        // Record all the exports from the module even if we don't use it directly.\n        const exportedSymbols = this.exportAll(exportFrom);\n        if (exportDeclaration.export) {\n          // Re-export all the named exports from a module.\n          for (const exportItem of exportDeclaration.export) {\n            const name = typeof exportItem == 'string' ? exportItem : exportItem.name;\n            const exportAs = typeof exportItem == 'string' ? exportItem : exportItem.as;\n            const symbol = this.symbolOf(exportFrom, name);\n            if (exportedSymbols && exportedSymbols.length == 1 && exportedSymbols[0].reexport &&\n                exportedSymbols[0].name == '*') {\n              // This is a named export from a module we have no metadata about. Record the named\n              // export as a re-export.\n              symbol.reexport = true;\n            }\n            exportSymbol(this.symbolOf(exportFrom, name), exportAs);\n          }\n        } else {\n          // Re-export all the symbols from the module\n          const exportedSymbols = this.exportAll(exportFrom);\n          for (const exportedSymbol of exportedSymbols) {\n            const name = exportedSymbol.name;\n            exportSymbol(exportedSymbol, name);\n          }\n        }\n      }\n    }\n\n    if (!module) {\n      // If no metadata is found for this import then it is considered external to the\n      // library and should be recorded as a re-export in the final metadata if it is\n      // eventually re-exported.\n      const symbol = this.symbolOf(moduleName, '*');\n      symbol.reexport = true;\n      result.push(symbol);\n    }\n    this.exports.set(moduleName, result);\n\n    return result;\n  }\n\n  /**\n   * Fill in the canonicalSymbol which is the symbol that should be imported by factories.\n   * The canonical symbol is the one exported by the index file for the bundle or definition\n   * symbol for private symbols that are not exported by bundle index.\n   */\n  private canonicalizeSymbols(exportedSymbols: Symbol[]) {\n    const symbols = Array.from(this.symbolMap.values());\n    this.exported = new Set(exportedSymbols);\n    symbols.forEach(this.canonicalizeSymbol, this);\n  }\n\n  private canonicalizeSymbol(symbol: Symbol) {\n    const rootExport = getRootExport(symbol);\n    const declaration = getSymbolDeclaration(symbol);\n    const isPrivate = !this.exported.has(rootExport);\n    const canonicalSymbol = isPrivate ? declaration : rootExport;\n    symbol.isPrivate = isPrivate;\n    symbol.declaration = declaration;\n    symbol.canonicalSymbol = canonicalSymbol;\n    symbol.reexport = declaration.reexport;\n  }\n\n  private getEntries(exportedSymbols: Symbol[]): BundleEntries {\n    const result: BundleEntries = {};\n\n    const exportedNames = new Set(exportedSymbols.map(s => s.name));\n    let privateName = 0;\n\n    function newPrivateName(prefix: string): string {\n      while (true) {\n        let digits: string[] = [];\n        let index = privateName++;\n        let base = PRIVATE_NAME_CHARS;\n        while (!digits.length || index > 0) {\n          digits.unshift(base[index % base.length]);\n          index = Math.floor(index / base.length);\n        }\n        const result = `\\u0275${prefix}${digits.join('')}`;\n        if (!exportedNames.has(result)) return result;\n      }\n    }\n\n    exportedSymbols.forEach(symbol => this.convertSymbol(symbol));\n\n    const symbolsMap = new Map<string, string[]>();\n    Array.from(this.symbolMap.values()).forEach(symbol => {\n      if (symbol.referenced && !symbol.reexport) {\n        let name = symbol.name;\n        const identifier = `${symbol.declaration!.module}:${symbol.declaration !.name}`;\n        if (symbol.isPrivate && !symbol.privateName) {\n          name = newPrivateName(this.privateSymbolPrefix);\n          symbol.privateName = name;\n        }\n        if (symbolsMap.has(identifier)) {\n          const names = symbolsMap.get(identifier);\n          names !.push(name);\n        } else {\n          symbolsMap.set(identifier, [name]);\n        }\n        result[name] = symbol.value !;\n      }\n    });\n\n    // check for duplicated entries\n    symbolsMap.forEach((names: string[], identifier: string) => {\n      if (names.length > 1) {\n        const [module, declaredName] = identifier.split(':');\n        // prefer the export that uses the declared name (if any)\n        let reference = names.indexOf(declaredName);\n        if (reference === -1) {\n          reference = 0;\n        }\n\n        // keep one entry and replace the others by references\n        names.forEach((name: string, i: number) => {\n          if (i !== reference) {\n            result[name] = {__symbolic: 'reference', name: names[reference]};\n          }\n        });\n      }\n    });\n\n    return result;\n  }\n\n  private getReExports(exportedSymbols: Symbol[]): ModuleExportMetadata[] {\n    type ExportClause = {name: string, as: string}[];\n    const modules = new Map<string, ExportClause>();\n    const exportAlls = new Set<string>();\n    for (const symbol of exportedSymbols) {\n      if (symbol.reexport) {\n        // symbol.declaration is guaranteed to be defined during the phase this method is called.\n        const declaration = symbol.declaration !;\n        const module = declaration.module;\n        if (declaration !.name == '*') {\n          // Reexport all the symbols.\n          exportAlls.add(declaration.module);\n        } else {\n          // Re-export the symbol as the exported name.\n          let entry = modules.get(module);\n          if (!entry) {\n            entry = [];\n            modules.set(module, entry);\n          }\n          const as = symbol.name;\n          const name = declaration.name;\n          entry.push({name, as});\n        }\n      }\n    }\n    return [\n      ...Array.from(exportAlls.values()).map(from => ({from})),\n      ...Array.from(modules.entries()).map(([from, exports]) => ({export: exports, from}))\n    ];\n  }\n\n  private convertSymbol(symbol: Symbol) {\n    // canonicalSymbol is ensured to be defined before this is called.\n    const canonicalSymbol = symbol.canonicalSymbol !;\n\n    if (!canonicalSymbol.referenced) {\n      canonicalSymbol.referenced = true;\n      // declaration is ensured to be definded before this method is called.\n      const declaration = canonicalSymbol.declaration !;\n      const module = this.getMetadata(declaration.module);\n      if (module) {\n        const value = module.metadata[declaration.name];\n        if (value && !declaration.name.startsWith('___')) {\n          canonicalSymbol.value = this.convertEntry(declaration.module, value);\n        }\n      }\n    }\n  }\n\n  private convertEntry(moduleName: string, value: MetadataEntry): MetadataEntry {\n    if (isClassMetadata(value)) {\n      return this.convertClass(moduleName, value);\n    }\n    if (isFunctionMetadata(value)) {\n      return this.convertFunction(moduleName, value);\n    }\n    if (isInterfaceMetadata(value)) {\n      return value;\n    }\n    return this.convertValue(moduleName, value);\n  }\n\n  private convertClass(moduleName: string, value: ClassMetadata): ClassMetadata {\n    return {\n      __symbolic: 'class',\n      arity: value.arity,\n      extends: this.convertExpression(moduleName, value.extends) !,\n      decorators:\n          value.decorators && value.decorators.map(d => this.convertExpression(moduleName, d) !),\n      members: this.convertMembers(moduleName, value.members !),\n      statics: value.statics && this.convertStatics(moduleName, value.statics)\n    };\n  }\n\n  private convertMembers(moduleName: string, members: MetadataMap): MetadataMap {\n    const result: MetadataMap = {};\n    for (const name in members) {\n      const value = members[name];\n      result[name] = value.map(v => this.convertMember(moduleName, v));\n    }\n    return result;\n  }\n\n  private convertMember(moduleName: string, member: MemberMetadata) {\n    const result: MemberMetadata = {__symbolic: member.__symbolic};\n    result.decorators =\n        member.decorators && member.decorators.map(d => this.convertExpression(moduleName, d) !);\n    if (isMethodMetadata(member)) {\n      (result as MethodMetadata).parameterDecorators = member.parameterDecorators &&\n          member.parameterDecorators.map(\n              d => d && d.map(p => this.convertExpression(moduleName, p) !));\n      if (isConstructorMetadata(member)) {\n        if (member.parameters) {\n          (result as ConstructorMetadata).parameters =\n              member.parameters.map(p => this.convertExpression(moduleName, p));\n        }\n      }\n    }\n    return result;\n  }\n\n  private convertStatics(moduleName: string, statics: StaticsMetadata): StaticsMetadata {\n    let result: StaticsMetadata = {};\n    for (const key in statics) {\n      const value = statics[key];\n      result[key] = isFunctionMetadata(value) ? this.convertFunction(moduleName, value) : value;\n    }\n    return result;\n  }\n\n  private convertFunction(moduleName: string, value: FunctionMetadata): FunctionMetadata {\n    return {\n      __symbolic: 'function',\n      parameters: value.parameters,\n      defaults: value.defaults && value.defaults.map(v => this.convertValue(moduleName, v)),\n      value: this.convertValue(moduleName, value.value)\n    };\n  }\n\n  private convertValue(moduleName: string, value: MetadataValue): MetadataValue {\n    if (isPrimitive(value)) {\n      return value;\n    }\n    if (isMetadataError(value)) {\n      return this.convertError(moduleName, value);\n    }\n    if (isMetadataSymbolicExpression(value)) {\n      return this.convertExpression(moduleName, value) !;\n    }\n    if (Array.isArray(value)) {\n      return value.map(v => this.convertValue(moduleName, v));\n    }\n\n    // Otherwise it is a metadata object.\n    const object = value as MetadataObject;\n    const result: MetadataObject = {};\n    for (const key in object) {\n      result[key] = this.convertValue(moduleName, object[key]);\n    }\n    return result;\n  }\n\n  private convertExpression(\n      moduleName: string, value: MetadataSymbolicExpression|MetadataError|null|\n      undefined): MetadataSymbolicExpression|MetadataError|undefined|null {\n    if (value) {\n      switch (value.__symbolic) {\n        case 'error':\n          return this.convertError(moduleName, value as MetadataError);\n        case 'reference':\n          return this.convertReference(moduleName, value as MetadataSymbolicReferenceExpression);\n        default:\n          return this.convertExpressionNode(moduleName, value);\n      }\n    }\n    return value;\n  }\n\n  private convertError(module: string, value: MetadataError): MetadataError {\n    return {\n      __symbolic: 'error',\n      message: value.message,\n      line: value.line,\n      character: value.character,\n      context: value.context, module\n    };\n  }\n\n  private convertReference(moduleName: string, value: MetadataSymbolicReferenceExpression):\n      MetadataSymbolicReferenceExpression|MetadataError|undefined {\n    const createReference = (symbol: Symbol): MetadataSymbolicReferenceExpression => {\n      const declaration = symbol.declaration !;\n      if (declaration.module.startsWith('.')) {\n        // Reference to a symbol defined in the module. Ensure it is converted then return a\n        // references to the final symbol.\n        this.convertSymbol(symbol);\n        return {\n          __symbolic: 'reference',\n          get name() {\n            // Resolved lazily because private names are assigned late.\n            const canonicalSymbol = symbol.canonicalSymbol !;\n            if (canonicalSymbol.isPrivate == null) {\n              throw Error('Invalid state: isPrivate was not initialized');\n            }\n            return canonicalSymbol.isPrivate ? canonicalSymbol.privateName ! : canonicalSymbol.name;\n          }\n        };\n      } else {\n        // The symbol was a re-exported symbol from another module. Return a reference to the\n        // original imported symbol.\n        return {__symbolic: 'reference', name: declaration.name, module: declaration.module};\n      }\n    };\n\n    if (isMetadataGlobalReferenceExpression(value)) {\n      const metadata = this.getMetadata(moduleName);\n      if (metadata && metadata.metadata && metadata.metadata[value.name]) {\n        // Reference to a symbol defined in the module\n        return createReference(this.canonicalSymbolOf(moduleName, value.name));\n      }\n\n      // If a reference has arguments, the arguments need to be converted.\n      if (value.arguments) {\n        return {\n          __symbolic: 'reference',\n          name: value.name,\n          arguments: value.arguments.map(a => this.convertValue(moduleName, a))\n        };\n      }\n\n      // Global references without arguments (such as to Math or JSON) are unmodified.\n      return value;\n    }\n\n    if (isMetadataImportedSymbolReferenceExpression(value)) {\n      // References to imported symbols are separated into two, references to bundled modules and\n      // references to modules external to the bundle. If the module reference is relative it is\n      // assumed to be in the bundle. If it is Global it is assumed to be outside the bundle.\n      // References to symbols outside the bundle are left unmodified. References to symbol inside\n      // the bundle need to be converted to a bundle import reference reachable from the bundle\n      // index.\n\n      if (value.module.startsWith('.')) {\n        // Reference is to a symbol defined inside the module. Convert the reference to a reference\n        // to the canonical symbol.\n        const referencedModule = resolveModule(value.module, moduleName);\n        const referencedName = value.name;\n        return createReference(this.canonicalSymbolOf(referencedModule, referencedName));\n      }\n\n      // Value is a reference to a symbol defined outside the module.\n      if (value.arguments) {\n        // If a reference has arguments the arguments need to be converted.\n        return {\n          __symbolic: 'reference',\n          name: value.name,\n          module: value.module,\n          arguments: value.arguments.map(a => this.convertValue(moduleName, a))\n        };\n      }\n      return value;\n    }\n\n    if (isMetadataModuleReferenceExpression(value)) {\n      // Cannot support references to bundled modules as the internal modules of a bundle are erased\n      // by the bundler.\n      if (value.module.startsWith('.')) {\n        return {\n          __symbolic: 'error',\n          message: 'Unsupported bundled module reference',\n          context: {module: value.module}\n        };\n      }\n\n      // References to unbundled modules are unmodified.\n      return value;\n    }\n  }\n\n  private convertExpressionNode(moduleName: string, value: MetadataSymbolicExpression):\n      MetadataSymbolicExpression {\n    const result: MetadataSymbolicExpression = { __symbolic: value.__symbolic } as any;\n    for (const key in value) {\n      (result as any)[key] = this.convertValue(moduleName, (value as any)[key]);\n    }\n    return result;\n  }\n\n  private symbolOf(module: string, name: string): Symbol {\n    const symbolKey = `${module}:${name}`;\n    let symbol = this.symbolMap.get(symbolKey);\n    if (!symbol) {\n      symbol = {module, name};\n      this.symbolMap.set(symbolKey, symbol);\n    }\n    return symbol;\n  }\n\n  private canonicalSymbolOf(module: string, name: string): Symbol {\n    // Ensure the module has been seen.\n    this.exportAll(module);\n    const symbol = this.symbolOf(module, name);\n    if (!symbol.canonicalSymbol) {\n      this.canonicalizeSymbol(symbol);\n    }\n    return symbol;\n  }\n}\n\nexport class CompilerHostAdapter implements MetadataBundlerHost {\n  private collector = new MetadataCollector();\n\n  constructor(\n      private host: ts.CompilerHost, private cache: MetadataCache|null,\n      private options: ts.CompilerOptions) {}\n\n  getMetadataFor(fileName: string, containingFile: string): ModuleMetadata|undefined {\n    const {resolvedModule} =\n        ts.resolveModuleName(fileName, containingFile, this.options, this.host);\n\n    let sourceFile: ts.SourceFile|undefined;\n    if (resolvedModule) {\n      let {resolvedFileName} = resolvedModule;\n      if (resolvedModule.extension !== '.ts') {\n        resolvedFileName = resolvedFileName.replace(/(\\.d\\.ts|\\.js)$/, '.ts');\n      }\n      sourceFile = this.host.getSourceFile(resolvedFileName, ts.ScriptTarget.Latest);\n    } else {\n      // If typescript is unable to resolve the file, fallback on old behavior\n      if (!this.host.fileExists(fileName + '.ts')) return undefined;\n      sourceFile = this.host.getSourceFile(fileName + '.ts', ts.ScriptTarget.Latest);\n    }\n\n    // If there is a metadata cache, use it to get the metadata for this source file. Otherwise,\n    // fall back on the locally created MetadataCollector.\n    if (!sourceFile) {\n      return undefined;\n    } else if (this.cache) {\n      return this.cache.getMetadata(sourceFile);\n    } else {\n      return this.collector.getMetadata(sourceFile);\n    }\n  }\n}\n\nfunction resolveModule(importName: string, from: string): string {\n  if (importName.startsWith('.') && from) {\n    let normalPath = path.normalize(path.join(path.dirname(from), importName));\n    if (!normalPath.startsWith('.') && from.startsWith('.')) {\n      // path.normalize() preserves leading '../' but not './'. This adds it back.\n      normalPath = `.${path.sep}${normalPath}`;\n    }\n    // Replace windows path delimiters with forward-slashes. Otherwise the paths are not\n    // TypeScript compatible when building the bundle.\n    return normalPath.replace(/\\\\/g, '/');\n  }\n  return importName;\n}\n\nfunction isPrimitive(o: any): o is boolean|string|number {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n\nfunction getRootExport(symbol: Symbol): Symbol {\n  return symbol.reexportedAs ? getRootExport(symbol.reexportedAs) : symbol;\n}\n\nfunction getSymbolDeclaration(symbol: Symbol): Symbol {\n  return symbol.exports ? getSymbolDeclaration(symbol.exports) : symbol;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BundlePrivateEntry} from './bundler';\n\nconst INDEX_HEADER = `/**\n * Generated bundle index. Do not edit.\n */\n`;\n\ntype MapEntry = [string, BundlePrivateEntry[]];\n\nexport function privateEntriesToIndex(index: string, privates: BundlePrivateEntry[]): string {\n  const results: string[] = [INDEX_HEADER];\n\n  // Export all of the index symbols.\n  results.push(`export * from '${index}';`, '');\n\n  // Simplify the exports\n  const exports = new Map<string, BundlePrivateEntry[]>();\n\n  for (const entry of privates) {\n    let entries = exports.get(entry.module);\n    if (!entries) {\n      entries = [];\n      exports.set(entry.module, entries);\n    }\n    entries.push(entry);\n  }\n\n\n  const compareEntries = compare((e: BundlePrivateEntry) => e.name);\n  const compareModules = compare((e: MapEntry) => e[0]);\n  const orderedExports =\n      Array.from(exports)\n          .map(([module, entries]) => <MapEntry>[module, entries.sort(compareEntries)])\n          .sort(compareModules);\n\n  for (const [module, entries] of orderedExports) {\n    let symbols = entries.map(e => `${e.name} as ${e.privateName}`);\n    results.push(`export {${symbols}} from '${module}';`);\n  }\n\n  return results.join('\\n');\n}\n\nfunction compare<E, T>(select: (e: E) => T): (a: E, b: E) => number {\n  return (a, b) => {\n    const ak = select(a);\n    const bk = select(b);\n    return ak > bk ? 1 : ak < bk ? -1 : 0;\n  };\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {CompilerOptions} from '../transformers/api';\nimport {MetadataCache} from '../transformers/metadata_cache';\n\nimport {CompilerHostAdapter, MetadataBundler} from './bundler';\nimport {privateEntriesToIndex} from './index_writer';\n\nconst DTS = /\\.d\\.ts$/;\nconst JS_EXT = /(\\.js|)$/;\n\nfunction createSyntheticIndexHost<H extends ts.CompilerHost>(\n    delegate: H, syntheticIndex: {name: string, content: string, getMetadata: () => string}): H {\n  const normalSyntheticIndexName = path.normalize(syntheticIndex.name);\n\n  const newHost = Object.create(delegate);\n  newHost.fileExists = (fileName: string): boolean => {\n    return path.normalize(fileName) == normalSyntheticIndexName || delegate.fileExists(fileName);\n  };\n\n  newHost.readFile = (fileName: string) => {\n    return path.normalize(fileName) == normalSyntheticIndexName ? syntheticIndex.content :\n                                                                  delegate.readFile(fileName);\n  };\n\n  newHost.getSourceFile =\n      (fileName: string, languageVersion: ts.ScriptTarget, onError?: (message: string) => void) => {\n        if (path.normalize(fileName) == normalSyntheticIndexName) {\n          const sf = ts.createSourceFile(fileName, syntheticIndex.content, languageVersion, true);\n          if ((delegate as any).fileNameToModuleName) {\n            sf.moduleName = (delegate as any).fileNameToModuleName(fileName);\n          }\n          return sf;\n        }\n        return delegate.getSourceFile(fileName, languageVersion, onError);\n      };\n\n  newHost.writeFile =\n      (fileName: string, data: string, writeByteOrderMark: boolean,\n       onError: ((message: string) => void) | undefined,\n       sourceFiles: Readonly<ts.SourceFile>[]) => {\n        delegate.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n        if (fileName.match(DTS) && sourceFiles && sourceFiles.length == 1 &&\n            path.normalize(sourceFiles[0].fileName) === normalSyntheticIndexName) {\n          // If we are writing the synthetic index, write the metadata along side.\n          const metadataName = fileName.replace(DTS, '.metadata.json');\n          const indexMetadata = syntheticIndex.getMetadata();\n          delegate.writeFile(metadataName, indexMetadata, writeByteOrderMark, onError, []);\n        }\n      };\n  return newHost;\n}\n\nexport function createBundleIndexHost<H extends ts.CompilerHost>(\n    ngOptions: CompilerOptions, rootFiles: ReadonlyArray<string>, host: H,\n    getMetadataCache: () =>\n        MetadataCache): {host: H, indexName?: string, errors?: ts.Diagnostic[]} {\n  const files = rootFiles.filter(f => !DTS.test(f));\n  let indexFile: string|undefined;\n  if (files.length === 1) {\n    indexFile = files[0];\n  } else {\n    for (const f of files) {\n      // Assume the shortest file path called index.ts is the entry point\n      if (f.endsWith(path.sep + 'index.ts')) {\n        if (!indexFile || indexFile.length > f.length) {\n          indexFile = f;\n        }\n      }\n    }\n  }\n  if (!indexFile) {\n    return {\n      host,\n      errors: [{\n        file: null as any as ts.SourceFile,\n        start: null as any as number,\n        length: null as any as number,\n        messageText:\n            'Angular compiler option \"flatModuleIndex\" requires one and only one .ts file in the \"files\" field.',\n        category: ts.DiagnosticCategory.Error,\n        code: 0\n      }]\n    };\n  }\n\n  const indexModule = indexFile.replace(/\\.ts$/, '');\n\n  // The operation of producing a metadata bundle happens twice - once during setup and once during\n  // the emit phase. The first time, the bundle is produced without a metadata cache, to compute the\n  // contents of the flat module index. The bundle produced during emit does use the metadata cache\n  // with associated transforms, so the metadata will have lowered expressions, resource inlining,\n  // etc.\n  const getMetadataBundle = (cache: MetadataCache | null) => {\n    const bundler = new MetadataBundler(\n        indexModule, ngOptions.flatModuleId, new CompilerHostAdapter(host, cache, ngOptions),\n        ngOptions.flatModulePrivateSymbolPrefix);\n    return bundler.getMetadataBundle();\n  };\n\n  // First, produce the bundle with no MetadataCache.\n  const metadataBundle = getMetadataBundle(/* MetadataCache */ null);\n  const name =\n      path.join(path.dirname(indexModule), ngOptions.flatModuleOutFile !.replace(JS_EXT, '.ts'));\n  const libraryIndex = `./${path.basename(indexModule)}`;\n  const content = privateEntriesToIndex(libraryIndex, metadataBundle.privates);\n\n  host = createSyntheticIndexHost(host, {\n    name,\n    content,\n    getMetadata: () => {\n      // The second metadata bundle production happens on-demand, and uses the getMetadataCache\n      // closure to retrieve an up-to-date MetadataCache which is configured with whatever metadata\n      // transforms were used to produce the JS output.\n      const metadataBundle = getMetadataBundle(getMetadataCache());\n      return JSON.stringify(metadataBundle.metadata);\n    }\n  });\n  return {host, indexName: name};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GeneratedFile, ParseSourceSpan, Position} from '@angular/compiler';\nimport * as ts from 'typescript';\n\nexport const DEFAULT_ERROR_CODE = 100;\nexport const UNKNOWN_ERROR_CODE = 500;\nexport const SOURCE = 'angular' as 'angular';\n\nexport interface DiagnosticMessageChain {\n  messageText: string;\n  position?: Position;\n  next?: DiagnosticMessageChain;\n}\n\nexport interface Diagnostic {\n  messageText: string;\n  span?: ParseSourceSpan;\n  position?: Position;\n  chain?: DiagnosticMessageChain;\n  category: ts.DiagnosticCategory;\n  code: number;\n  source: 'angular';\n}\n\nexport function isTsDiagnostic(diagnostic: any): diagnostic is ts.Diagnostic {\n  return diagnostic != null && diagnostic.source !== 'angular';\n}\n\nexport function isNgDiagnostic(diagnostic: any): diagnostic is Diagnostic {\n  return diagnostic != null && diagnostic.source === 'angular';\n}\n\nexport interface CompilerOptions extends ts.CompilerOptions {\n  // NOTE: These comments and aio/content/guides/aot-compiler.md should be kept in sync.\n\n  // Write statistics about compilation (e.g. total time, ...)\n  // Note: this is the --diagnostics command line option from TS (which is @internal\n  // on ts.CompilerOptions interface).\n  diagnostics?: boolean;\n\n  // Absolute path to a directory where generated file structure is written.\n  // If unspecified, generated files will be written alongside sources.\n  // @deprecated - no effect\n  genDir?: string;\n\n  // Path to the directory containing the tsconfig.json file.\n  basePath?: string;\n\n  // Don't produce .metadata.json files (they don't work for bundled emit with --out)\n  skipMetadataEmit?: boolean;\n\n  // Produce an error if the metadata written for a class would produce an error if used.\n  strictMetadataEmit?: boolean;\n\n  // Don't produce .ngfactory.js or .ngstyle.js files\n  skipTemplateCodegen?: boolean;\n\n  // Always report errors when the type of a parameter supplied whose injection type cannot\n  // be determined. When this value option is not provided or is `false`, constructor\n  // parameters of classes marked with `@Injectable` whose type cannot be resolved will\n  // produce a warning. With this option `true`, they produce an error. When this option is\n  // not provided is treated as if it were `false`. In Angular 6.0, if this option is not\n  // provided, it will be treated as `true`.\n  strictInjectionParameters?: boolean;\n\n  // Whether to generate a flat module index of the given name and the corresponding\n  // flat module metadata. This option is intended to be used when creating flat\n  // modules similar to how `@angular/core` and `@angular/common` are packaged.\n  // When this option is used the `package.json` for the library should referred to the\n  // generated flat module index instead of the library index file. When using this\n  // option only one .metadata.json file is produced that contains all the metadata\n  // necessary for symbols exported from the library index.\n  // In the generated .ngfactory.ts files flat module index is used to import symbols\n  // includes both the public API from the library index as well as shrowded internal\n  // symbols.\n  // By default the .ts file supplied in the `files` files field is assumed to be\n  // library index. If more than one is specified, uses `libraryIndex` to select the\n  // file to use. If more than on .ts file is supplied and no `libraryIndex` is supplied\n  // an error is produced.\n  // A flat module index .d.ts and .js will be created with the given `flatModuleOutFile`\n  // name in the same location as the library index .d.ts file is emitted.\n  // For example, if a library uses `public_api.ts` file as the library index of the\n  // module the `tsconfig.json` `files` field would be `[\"public_api.ts\"]`. The\n  // `flatModuleOutFile` options could then be set to, for example `\"index.js\"`, which\n  // produces `index.d.ts` and  `index.metadata.json` files. The library's\n  // `package.json`'s `module` field would be `\"index.js\"` and the `typings` field would\n  // be `\"index.d.ts\"`.\n  flatModuleOutFile?: string;\n\n  // Preferred module id to use for importing flat module. References generated by `ngc`\n  // will use this module name when importing symbols from the flat module. This is only\n  // meaningful when `flatModuleOutFile` is also supplied. It is otherwise ignored.\n  flatModuleId?: string;\n\n  // A prefix to insert in generated private symbols, e.g. for \"my_prefix_\" we\n  // would generate private symbols named like `ɵmy_prefix_a`.\n  flatModulePrivateSymbolPrefix?: string;\n\n  // Whether to generate code for library code.\n  // If true, produce .ngfactory.ts and .ngstyle.ts files for .d.ts inputs.\n  // Default is true.\n  generateCodeForLibraries?: boolean;\n\n  // Whether to enable all type checks for templates.\n  // This will be true be default in Angular 6.\n  fullTemplateTypeCheck?: boolean;\n\n  // Insert JSDoc type annotations needed by Closure Compiler\n  annotateForClosureCompiler?: boolean;\n\n  // Modify how angular annotations are emitted to improve tree-shaking.\n  // Default is static fields.\n  // decorators: Leave the Decorators in-place. This makes compilation faster.\n  //             TypeScript will emit calls to the __decorate helper.\n  //             `--emitDecoratorMetadata` can be used for runtime reflection.\n  //             However, the resulting code will not properly tree-shake.\n  // static fields: Replace decorators with a static field in the class.\n  //                Allows advanced tree-shakers like Closure Compiler to remove\n  //                unused classes.\n  annotationsAs?: 'decorators'|'static fields';\n\n  // Print extra information while running the compiler\n  trace?: boolean;\n\n  // Whether to enable lowering expressions lambdas and expressions in a reference value\n  // position.\n  disableExpressionLowering?: boolean;\n\n  // Disable TypeScript Version Check.\n  disableTypeScriptVersionCheck?: boolean;\n\n  // Locale of the application\n  i18nOutLocale?: string;\n  // Export format (xlf, xlf2 or xmb)\n  i18nOutFormat?: string;\n  // Path to the extracted message file\n  i18nOutFile?: string;\n\n  // Import format if different from `i18nFormat`\n  i18nInFormat?: string;\n  // Locale of the imported translations\n  i18nInLocale?: string;\n  // Path to the translation file\n  i18nInFile?: string;\n  // How to handle missing messages\n  i18nInMissingTranslations?: 'error'|'warning'|'ignore';\n\n  // Whether to remove blank text nodes from compiled templates. It is `false` by default starting\n  // from Angular 6.\n  preserveWhitespaces?: boolean;\n\n  /** generate all possible generated files  */\n  allowEmptyCodegenFiles?: boolean;\n\n  /**\n   * Whether to generate .ngsummary.ts files that allow to use AOTed artifacts\n   * in JIT mode. This is off by default.\n   */\n  enableSummariesForJit?: boolean;\n\n  /**\n   * Whether to replace the `templateUrl` and `styleUrls` property in all\n   * @Component decorators with inlined contents in `template` and `styles`\n   * properties.\n   * When enabled, the .js output of ngc will have no lazy-loaded `templateUrl`\n   * or `styleUrl`s. Note that this requires that resources be available to\n   * load statically at compile-time.\n   */\n  enableResourceInlining?: boolean;\n\n  /**\n   * Tells the compiler to generate definitions using the Render3 style code generation.\n   * This option defaults to `false`.\n   *\n   * Not all features are supported with this option enabled. It is only supported\n   * for experimentation and testing of Render3 style code generation.\n   *\n   * Acceptable values are as follows:\n   *\n   * `false` - run ngc normally\n   * `true` - run ngc with its usual global analysis, but compile decorators to Ivy fields instead\n   *  of running the View Engine compilers\n   * `ngtsc` - run the ngtsc compiler instead of the normal ngc compiler\n   * `tsc` - behave like plain tsc as much as possible (used for testing JIT code)\n   *\n   * @experimental\n   */\n  enableIvy?: boolean|'ngtsc'|'tsc';\n\n  /** @internal */\n  collectAllErrors?: boolean;\n}\n\nexport interface CompilerHost extends ts.CompilerHost {\n  /**\n   * Converts a module name that is used in an `import` to a file path.\n   * I.e. `path/to/containingFile.ts` containing `import {...} from 'module-name'`.\n   */\n  moduleNameToFileName?(moduleName: string, containingFile: string): string|null;\n  /**\n   * Converts a file path to a module name that can be used as an `import ...`\n   * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n   */\n  fileNameToModuleName?(importedFilePath: string, containingFilePath: string): string;\n  /**\n   * Converts a file path for a resource that is used in a source file or another resource\n   * into a filepath.\n   */\n  resourceNameToFileName?(resourceName: string, containingFilePath: string): string|null;\n  /**\n   * Converts a file name into a representation that should be stored in a summary file.\n   * This has to include changing the suffix as well.\n   * E.g.\n   * `some_file.ts` -> `some_file.d.ts`\n   *\n   * @param referringSrcFileName the soure file that refers to fileName\n   */\n  toSummaryFileName?(fileName: string, referringSrcFileName: string): string;\n  /**\n   * Converts a fileName that was processed by `toSummaryFileName` back into a real fileName\n   * given the fileName of the library that is referrig to it.\n   */\n  fromSummaryFileName?(fileName: string, referringLibFileName: string): string;\n  /**\n   * Load a referenced resource either statically or asynchronously. If the host returns a\n   * `Promise<string>` it is assumed the user of the corresponding `Program` will call\n   * `loadNgStructureAsync()`. Returning  `Promise<string>` outside `loadNgStructureAsync()` will\n   * cause a diagnostics diagnostic error or an exception to be thrown.\n   */\n  readResource?(fileName: string): Promise<string>|string;\n  /**\n   * Produce an AMD module name for the source file. Used in Bazel.\n   *\n   * An AMD module can have an arbitrary name, so that it is require'd by name\n   * rather than by path. See http://requirejs.org/docs/whyamd.html#namedmodules\n   */\n  amdModuleName?(sf: ts.SourceFile): string|undefined;\n}\n\nexport enum EmitFlags {\n  DTS = 1 << 0,\n  JS = 1 << 1,\n  Metadata = 1 << 2,\n  I18nBundle = 1 << 3,\n  Codegen = 1 << 4,\n\n  Default = DTS | JS | Codegen,\n  All = DTS | JS | Metadata | I18nBundle | Codegen,\n}\n\nexport interface CustomTransformers {\n  beforeTs?: ts.TransformerFactory<ts.SourceFile>[];\n  afterTs?: ts.TransformerFactory<ts.SourceFile>[];\n}\n\nexport interface TsEmitArguments {\n  program: ts.Program;\n  host: CompilerHost;\n  options: CompilerOptions;\n  targetSourceFile?: ts.SourceFile;\n  writeFile?: ts.WriteFileCallback;\n  cancellationToken?: ts.CancellationToken;\n  emitOnlyDtsFiles?: boolean;\n  customTransformers?: ts.CustomTransformers;\n}\n\nexport interface TsEmitCallback { (args: TsEmitArguments): ts.EmitResult; }\nexport interface TsMergeEmitResultsCallback { (results: ts.EmitResult[]): ts.EmitResult; }\n\nexport interface LibrarySummary {\n  fileName: string;\n  text: string;\n  sourceFile?: ts.SourceFile;\n}\n\nexport interface LazyRoute {\n  route: string;\n  module: {name: string, filePath: string};\n  referencedModule: {name: string, filePath: string};\n}\n\nexport interface Program {\n  /**\n   * Retrieve the TypeScript program used to produce semantic diagnostics and emit the sources.\n   *\n   * Angular structural information is required to produce the program.\n   */\n  getTsProgram(): ts.Program;\n\n  /**\n   * Retrieve options diagnostics for the TypeScript options used to create the program. This is\n   * faster than calling `getTsProgram().getOptionsDiagnostics()` since it does not need to\n   * collect Angular structural information to produce the errors.\n   */\n  getTsOptionDiagnostics(cancellationToken?: ts.CancellationToken): ReadonlyArray<ts.Diagnostic>;\n\n  /**\n   * Retrieve options diagnostics for the Angular options used to create the program.\n   */\n  getNgOptionDiagnostics(cancellationToken?: ts.CancellationToken): ReadonlyArray<Diagnostic>;\n\n  /**\n   * Retrieve the syntax diagnostics from TypeScript. This is faster than calling\n   * `getTsProgram().getSyntacticDiagnostics()` since it does not need to collect Angular structural\n   * information to produce the errors.\n   */\n  getTsSyntacticDiagnostics(sourceFile?: ts.SourceFile, cancellationToken?: ts.CancellationToken):\n      ReadonlyArray<ts.Diagnostic>;\n\n  /**\n   * Retrieve the diagnostics for the structure of an Angular application is correctly formed.\n   * This includes validating Angular annotations and the syntax of referenced and imbedded HTML\n   * and CSS.\n   *\n   * Note it is important to displaying TypeScript semantic diagnostics along with Angular\n   * structural diagnostics as an error in the program structure might cause errors detected in\n   * semantic analysis and a semantic error might cause errors in specifying the program structure.\n   *\n   * Angular structural information is required to produce these diagnostics.\n   */\n  getNgStructuralDiagnostics(cancellationToken?: ts.CancellationToken): ReadonlyArray<Diagnostic>;\n\n  /**\n   * Retrieve the semantic diagnostics from TypeScript. This is equivalent to calling\n   * `getTsProgram().getSemanticDiagnostics()` directly and is included for completeness.\n   */\n  getTsSemanticDiagnostics(sourceFile?: ts.SourceFile, cancellationToken?: ts.CancellationToken):\n      ReadonlyArray<ts.Diagnostic>;\n\n  /**\n   * Retrieve the Angular semantic diagnostics.\n   *\n   * Angular structural information is required to produce these diagnostics.\n   */\n  getNgSemanticDiagnostics(fileName?: string, cancellationToken?: ts.CancellationToken):\n      ReadonlyArray<ts.Diagnostic|Diagnostic>;\n\n  /**\n   * Load Angular structural information asynchronously. If this method is not called then the\n   * Angular structural information, including referenced HTML and CSS files, are loaded\n   * synchronously. If the supplied Angular compiler host returns a promise from `loadResource()`\n   * will produce a diagnostic error message or, `getTsProgram()` or `emit` to throw.\n   */\n  loadNgStructureAsync(): Promise<void>;\n\n  /**\n   * Returns the lazy routes in the program.\n   * @param entryRoute A reference to an NgModule like `someModule#name`. If given,\n   *              will recursively analyze routes starting from this symbol only.\n   *              Otherwise will list all routes for all NgModules in the program/\n   */\n  listLazyRoutes(entryRoute?: string): LazyRoute[];\n\n  /**\n   * Emit the files requested by emitFlags implied by the program.\n   *\n   * Angular structural information is required to emit files.\n   */\n  emit({emitFlags, cancellationToken, customTransformers, emitCallback,\n        mergeEmitResultsCallback}?: {\n    emitFlags?: EmitFlags,\n    cancellationToken?: ts.CancellationToken,\n    customTransformers?: CustomTransformers,\n    emitCallback?: TsEmitCallback,\n    mergeEmitResultsCallback?: TsMergeEmitResultsCallback\n  }): ts.EmitResult;\n\n  /**\n   * Returns the .d.ts / .ngsummary.json / .ngfactory.d.ts files of libraries that have been emitted\n   * in this program or previous programs with paths that emulate the fact that these libraries\n   * have been compiled before with no outDir.\n   */\n  getLibrarySummaries(): Map<string, LibrarySummary>;\n\n  /**\n   * @internal\n   */\n  getEmittedGeneratedFiles(): Map<string, GeneratedFile>;\n\n  /**\n   * @internal\n   */\n  getEmittedSourceFiles(): Map<string, ts.SourceFile>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {syntaxError} from '@angular/compiler';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {CompilerOptions, DEFAULT_ERROR_CODE, Diagnostic, SOURCE} from './api';\n\nexport const GENERATED_FILES = /(.*?)\\.(ngfactory|shim\\.ngstyle|ngstyle|ngsummary)\\.(js|d\\.ts|ts)$/;\nexport const DTS = /\\.d\\.ts$/;\nexport const TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\n\nexport const enum StructureIsReused {Not = 0, SafeModules = 1, Completely = 2}\n\n// Note: This is an internal property in TypeScript. Use it only for assertions and tests.\nexport function tsStructureIsReused(program: ts.Program): StructureIsReused {\n  return (program as any).structureIsReused;\n}\n\nexport function error(msg: string): never {\n  throw new Error(`Internal error: ${msg}`);\n}\n\nexport function userError(msg: string): never {\n  throw syntaxError(msg);\n}\n\nexport function createMessageDiagnostic(messageText: string): ts.Diagnostic&Diagnostic {\n  return {\n    file: undefined,\n    start: undefined,\n    length: undefined,\n    category: ts.DiagnosticCategory.Message, messageText,\n    code: DEFAULT_ERROR_CODE,\n    source: SOURCE,\n  };\n}\n\nexport function isInRootDir(fileName: string, options: CompilerOptions) {\n  return !options.rootDir || pathStartsWithPrefix(options.rootDir, fileName);\n}\n\nexport function relativeToRootDirs(filePath: string, rootDirs: string[]): string {\n  if (!filePath) return filePath;\n  for (const dir of rootDirs || []) {\n    const rel = pathStartsWithPrefix(dir, filePath);\n    if (rel) {\n      return rel;\n    }\n  }\n  return filePath;\n}\n\nfunction pathStartsWithPrefix(prefix: string, fullPath: string): string|null {\n  const rel = path.relative(prefix, fullPath);\n  return rel.startsWith('..') ? null : rel;\n}\n\n/**\n * Converts a ng.Diagnostic into a ts.Diagnostic.\n * This looses some information, and also uses an incomplete object as `file`.\n *\n * I.e. only use this where the API allows only a ts.Diagnostic.\n */\nexport function ngToTsDiagnostic(ng: Diagnostic): ts.Diagnostic {\n  let file: ts.SourceFile|undefined;\n  let start: number|undefined;\n  let length: number|undefined;\n  if (ng.span) {\n    // Note: We can't use a real ts.SourceFile,\n    // but we can at least mirror the properties `fileName` and `text`, which\n    // are mostly used for error reporting.\n    file = { fileName: ng.span.start.file.url, text: ng.span.start.file.content } as ts.SourceFile;\n    start = ng.span.start.offset;\n    length = ng.span.end.offset - start;\n  }\n  return {\n    file,\n    messageText: ng.messageText,\n    category: ng.category,\n    code: ng.code, start, length,\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {METADATA_VERSION, ModuleMetadata} from '../metadata';\n\nimport {DTS} from './util';\n\nexport interface MetadataReaderHost {\n  getSourceFileMetadata(filePath: string): ModuleMetadata|undefined;\n  cacheMetadata?(fileName: string): boolean;\n  fileExists(filePath: string): boolean;\n  readFile(filePath: string): string;\n}\n\nexport interface MetadataReaderCache {\n  /**\n   * @internal\n   */\n  data: Map<string, ModuleMetadata[]|undefined>;\n}\n\nexport function createMetadataReaderCache(): MetadataReaderCache {\n  const data = new Map<string, ModuleMetadata[]|undefined>();\n  return {data};\n}\n\nexport function readMetadata(\n    filePath: string, host: MetadataReaderHost, cache?: MetadataReaderCache): ModuleMetadata[]|\n    undefined {\n  let metadatas = cache && cache.data.get(filePath);\n  if (metadatas) {\n    return metadatas;\n  }\n  if (host.fileExists(filePath)) {\n    // If the file doesn't exists then we cannot return metadata for the file.\n    // This will occur if the user referenced a declared module for which no file\n    // exists for the module (i.e. jQuery or angularjs).\n    if (DTS.test(filePath)) {\n      metadatas = readMetadataFile(host, filePath);\n      if (!metadatas) {\n        // If there is a .d.ts file but no metadata file we need to produce a\n        // metadata from the .d.ts file as metadata files capture reexports\n        // (starting with v3).\n        metadatas = [upgradeMetadataWithDtsData(\n            host, {'__symbolic': 'module', 'version': 1, 'metadata': {}}, filePath)];\n      }\n    } else {\n      const metadata = host.getSourceFileMetadata(filePath);\n      metadatas = metadata ? [metadata] : [];\n    }\n  }\n  if (cache && (!host.cacheMetadata || host.cacheMetadata(filePath))) {\n    cache.data.set(filePath, metadatas);\n  }\n  return metadatas;\n}\n\n\nfunction readMetadataFile(host: MetadataReaderHost, dtsFilePath: string): ModuleMetadata[]|\n    undefined {\n  const metadataPath = dtsFilePath.replace(DTS, '.metadata.json');\n  if (!host.fileExists(metadataPath)) {\n    return undefined;\n  }\n  try {\n    const metadataOrMetadatas = JSON.parse(host.readFile(metadataPath));\n    const metadatas: ModuleMetadata[] = metadataOrMetadatas ?\n        (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n        [];\n    if (metadatas.length) {\n      let maxMetadata = metadatas.reduce((p, c) => p.version > c.version ? p : c);\n      if (maxMetadata.version < METADATA_VERSION) {\n        metadatas.push(upgradeMetadataWithDtsData(host, maxMetadata, dtsFilePath));\n      }\n    }\n    return metadatas;\n  } catch (e) {\n    console.error(`Failed to read JSON file ${metadataPath}`);\n    throw e;\n  }\n}\n\nfunction upgradeMetadataWithDtsData(\n    host: MetadataReaderHost, oldMetadata: ModuleMetadata, dtsFilePath: string): ModuleMetadata {\n  // patch v1 to v3 by adding exports and the `extends` clause.\n  // patch v3 to v4 by adding `interface` symbols for TypeAlias\n  let newMetadata: ModuleMetadata = {\n    '__symbolic': 'module',\n    'version': METADATA_VERSION,\n    'metadata': {...oldMetadata.metadata},\n  };\n  if (oldMetadata.exports) {\n    newMetadata.exports = oldMetadata.exports;\n  }\n  if (oldMetadata.importAs) {\n    newMetadata.importAs = oldMetadata.importAs;\n  }\n  if (oldMetadata.origins) {\n    newMetadata.origins = oldMetadata.origins;\n  }\n  const dtsMetadata = host.getSourceFileMetadata(dtsFilePath);\n  if (dtsMetadata) {\n    for (let prop in dtsMetadata.metadata) {\n      if (!newMetadata.metadata[prop]) {\n        newMetadata.metadata[prop] = dtsMetadata.metadata[prop];\n      }\n    }\n    if (dtsMetadata['importAs']) newMetadata['importAs'] = dtsMetadata['importAs'];\n\n    // Only copy exports from exports from metadata prior to version 3.\n    // Starting with version 3 the collector began collecting exports and\n    // this should be redundant. Also, with bundler will rewrite the exports\n    // which will hoist the exports from modules referenced indirectly causing\n    // the imports to be different than the .d.ts files and using the .d.ts file\n    // exports would cause the StaticSymbolResolver to redirect symbols to the\n    // incorrect location.\n    if ((!oldMetadata.version || oldMetadata.version < 3) && dtsMetadata.exports) {\n      newMetadata.exports = dtsMetadata.exports;\n    }\n  }\n  return newMetadata;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/*\n\nThe API from compiler-cli that language-service can see.\nIt is important that none the exported modules require anything other than\nAngular modules and Typescript as this will indirectly add a dependency\nto the language service.\n\n*/\nexport {DiagnosticTemplateInfo, ExpressionDiagnostic, getExpressionDiagnostics, getExpressionScope, getTemplateExpressionDiagnostics} from './diagnostics/expression_diagnostics';\nexport {AstType, DiagnosticKind, ExpressionDiagnosticsContext, TypeDiagnostic} from './diagnostics/expression_type';\nexport {BuiltinType, DeclarationKind, Definition, Location, PipeInfo, Pipes, Signature, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable} from './diagnostics/symbols';\nexport {getClassFromStaticSymbol, getClassMembers, getClassMembersFromDeclaration, getPipesTable, getSymbolQuery} from './diagnostics/typescript_symbols';\nexport {MetadataCollector, ModuleMetadata} from './metadata';\nexport {CompilerOptions} from './transformers/api';\nexport {MetadataReaderCache, MetadataReaderHost, createMetadataReaderCache, readMetadata} from './transformers/metadata_reader';\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n}\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super(errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    this.name = 'UnsubscriptionError';\n    (Object as any).setPrototypeOf(this, UnsubscriptionError.prototype);\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parent: Subscription = null;\n  /** @internal */\n  protected _parents: Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  /** @internal */\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export const rxSubscriber =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n          // node_modules, we cannot rely on `instanceof` checks\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic } from './types';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { OperatorFunction, PartialObserver, Subscribable } from '../internal/types';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    super('object unsubscribed');\n    this.name = 'ObjectUnsubscribedError';\n    (Object as any).setPrototypeOf(this, ObjectUnsubscribedError.prototype);\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /** @nocollapse */\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * {@link Scheduler}. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * <img src=\"./img/empty.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then complete.</caption>\n * var result = Rx.Observable.empty().startWith(7);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n * var interval = Rx.Observable.interval(1000);\n * var result = interval.mergeMap(x =>\n *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n *\n * @see {@link create}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throw}\n *\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using EMPTY constant.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nexport function emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  if (!subscriber.closed) {\n    subscriber.complete();\n  }\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n        subscriber.next(input[i++]);\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\n\nexport function scalar<T>(value: T) {\n  const result = new Observable<T>(subscriber => {\n    subscriber.next(value);\n    subscriber.complete();\n  });\n  result._isScalar = true;\n  (result as any).value = value;\n  return result;\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nimport { Observable } from '../Observable';\n\nexport function of<T>(a: T, scheduler?: SchedulerLike): Observable<T>;\nexport function of<T, T2>(a: T, b: T2, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T>;\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n  } else {\n    scheduler = undefined;\n  }\n  switch (args.length) {\n    case 0:\n      return empty(scheduler);\n    case 1:\n      return scheduler ? fromArray(args as T[], scheduler) : scalar(args[0] as T);\n    default:\n      return fromArray(args as T[], scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * <img src=\"./img/throw.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then emit an error.</caption>\n * import { throwError, concat, of } from 'rxjs/create';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n * import { throwError, interval, of } from 'rxjs/create';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 13 ?\n *     throwError('Thirteens are bad') :\n *     of('a', 'b', 'c')\n *   )\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link create}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throw\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 0;\n\nconst tasksByHandle: { [handle: string]: () => void } = {};\n\nfunction runIfPresent(handle: number) {\n  const cb = tasksByHandle[handle];\n  if (cb) {\n    cb();\n  }\n}\n\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    tasksByHandle[handle] = cb;\n    Promise.resolve().then(() => runIfPresent(handle));\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    delete tasksByHandle[handle];\n  },\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    super('argument out of range');\n    this.name = 'ArgumentOutOfRangeError';\n    (Object as any).setPrototypeOf(this, ArgumentOutOfRangeError.prototype);\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    super('no elements in sequence');\n    this.name = 'EmptyError';\n    (Object as any).setPrototypeOf(this, EmptyError.prototype);\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    super('Timeout has occurred');\r\n\r\n    (Object as any).setPrototypeOf(this, TimeoutError.prototype);\r\n  }\r\n}\r\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, the\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is very important to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - {@link Scheduler} - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n * and call `subscribe` on the output Observable all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n *\n * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * var getJSONAsObservable = bindCallback(jQuery.getJSON);\n * var result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Receive an array of arguments passed to a callback</caption>\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n *\n *\n * @example <caption>Compare behaviour with and without async Scheduler</caption>\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n *\n *\n * @example <caption>Use bindCallback on an object method</caption>\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n *\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            subject.error(err);\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * Scheduler works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n *\n * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n * import * as fs from 'fs';\n * var readFileAsObservable = bindNodeCallback(fs.readFile);\n * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Use on function calling callback with multiple arguments</caption>\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n *\n * @example <caption>Use on function calling callback in regular style</caption>\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n *\n *\n * @see {@link bindCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            subject.error(err);\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export function isPromise(value: any): value is PromiseLike<any> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>) => {\n  if (result instanceof Observable) {\n    return (subscriber: Subscriber<T>) => {\n        if (result._isScalar) {\n        subscriber.next((result as any).value);\n        subscriber.complete();\n        return undefined;\n      } else {\n        return result.subscribe(subscriber);\n      }\n    };\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","\nimport { ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeTo } from './subscribeTo';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription | void {\n  const destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  return subscribeTo(result)(destination);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: SchedulerLike): Observable<R>;\n\nexport function combineLatest<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function combineLatest<T>(array: ObservableInput<T>[], scheduler?: SchedulerLike): Observable<T[]>;\nexport function combineLatest<R>(array: ObservableInput<any>[], scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R, scheduler?: SchedulerLike): Observable<R>;\nexport function combineLatest<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): Observable<T[]>;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R) | SchedulerLike>): Observable<R>;\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    SchedulerLike>): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <SchedulerLike>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<T, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { ObservableLike } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isObservable(input: any): input is ObservableLike<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\n\nexport function fromPromise<T>(input: PromiseLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToPromise(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => input.then(\n        value => {\n          sub.add(scheduler.schedule(() => {\n            subscriber.next(value);\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }));\n        },\n        err => {\n          sub.add(scheduler.schedule(() => subscriber.error(err)));\n        }\n      )));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\n\nexport function fromIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  if (!scheduler) {\n    return new Observable<T>(subscribeToIterable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let iterator: Iterator<T>;\n      sub.add(() => {\n        // Finalize generators\n        if (iterator && typeof iterator.return === 'function') {\n          iterator.return();\n        }\n      });\n      sub.add(scheduler.schedule(() => {\n        iterator = input[Symbol_iterator]();\n        sub.add(scheduler.schedule(function () {\n          if (subscriber.closed) {\n            return;\n          }\n          let value: T;\n          let done: boolean;\n          try {\n            const result = iterator.next();\n            value = result.value;\n            done = result.done;\n          } catch (err) {\n            subscriber.error(err);\n            return;\n          }\n          if (done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(value);\n            this.schedule();\n          }\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nimport { ObservableLike, SchedulerLike, Subscribable } from '../types';\n\nexport function fromObservable<T>(input: ObservableLike<T>, scheduler: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToObservable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable: Subscribable<T> = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n          error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n          complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isObservable } from '../util/isObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike } from '../types';\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function from<T>(input: ObservableInput<ObservableInput<T>>, scheduler?: SchedulerLike): Observable<Observable<T>>;\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable(subscribeTo(input));\n  }\n\n  if (input != null) {\n    if (isObservable(input)) {\n      return fromObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return fromPromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return fromArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return fromIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function concat<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function concat<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: (ObservableInput<T> | SchedulerLike)[]): Observable<T>;\nexport function concat<T, R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): Observable<R> {\n  if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n    return from(<any>observables[0]);\n  }\n  return concatAll<R>()(of(...observables));\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * <img src=\"./img/defer.png\" width=\"100%\">\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n * var clicksOrInterval = Rx.Observable.defer(function () {\n *   if (Math.random() > 0.5) {\n *     return Rx.Observable.fromEvent(document, 'click');\n *   } else {\n *     return Rx.Observable.interval(1000);\n *   }\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n *\n * @see {@link create}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n  return new Observable(subscriber => {\n    let input: SubscribableOrPromise<T> | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input) : empty();\n    return source.subscribe(subscriber);\n  });\n}","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\n// forkJoin([a$, b$, c$]);\nexport function forkJoin<T>(sources: [ObservableInput<T>]): Observable<T[]>;\nexport function forkJoin<T, T2>(sources: [ObservableInput<T>, ObservableInput<T2>]): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>]): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>]): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>]): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>, ObservableInput<T6>]): Observable<[T, T2, T3, T4, T5, T6]>;\nexport function forkJoin<T>(sources: Array<ObservableInput<T>>): Observable<T[]>;\n\n// forkJoin(a$, b$, c$)\nexport function forkJoin<T>(v1: ObservableInput<T>): Observable<T[]>;\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * <img src=\"./img/forkJoin.png\" width=\"100%\">\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * @example <caption>Use forkJoin with operator emitting immediately</caption>\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8)\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n *\n *\n * @example <caption>Use forkJoin with operator emitting after some time</caption>\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)) // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n *\n * @example <caption>Use forkJoin with project function</caption>\n * import { jorkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)), // emit 0, 1, 2, 3 every half a second and complete\n *   (n, m) => n + m\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin<T>(\n  ...sources: Array<ObservableInput<T> | ObservableInput<T>[] | Function>\n): Observable<T[]> {\n\n  let resultSelector: Function;\n  if (typeof sources[sources.length - 1] === 'function') {\n    // DEPRECATED PATH\n    resultSelector = sources.pop() as Function;\n  }\n\n  // if the first and only other argument is an array\n  // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n  if (sources.length === 1 && isArray(sources[0])) {\n    sources = sources[0] as Array<ObservableInput<T>>;\n  }\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return forkJoin(sources).pipe(\n      map(args => resultSelector(...args))\n    );\n  }\n\n  return new Observable(subscriber => {\n    return new ForkJoinSubscriber(subscriber, sources as Array<ObservableInput<T>>);\n  });\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T, R> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private values: T[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<R>,\n              private sources: Array<ObservableInput<T>>) {\n    super(destination);\n\n    const len = sources.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(innerSub as any)._hasValue) {\n      (innerSub as any)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const { destination, haveValues, values } = this;\n    const len = values.length;\n\n    if (!(innerSub as any)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      destination.next(values);\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = Object.prototype.toString;\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * <img src=\"./img/fromEvent.png\" width=\"100%\">\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * var clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n *\n *\n * @example <caption>Use addEventListener with capture option</caption>\n * var clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                                          // which will be passed to addEventListener\n * var clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { fromEvent } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an API based on addHandler/removeHandler\n * functions.\n *\n * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n * Observable.</span>\n *\n * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n *\n * Creates an Observable by using the `addHandler` and `removeHandler`\n * functions to add and remove the handlers. The `addHandler` is\n * called when the output Observable is subscribed, and `removeHandler` is\n * called when the Subscription is unsubscribed.\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * var clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * @see {@link from}\n * @see {@link fromEvent}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n * takes a `handler` function as argument and removes it in case it was\n * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n * removeHandler function will forward it.\n * @return {Observable<T>}\n * @name fromEventPattern\n */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any,\n                                    removeHandler?: (handler: Function, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * var res = Rx.Observable.generate(1, x => x < 5, x =>  * 2, x => x + 1, Rx.Scheduler.asap);\n *\n * @see {@link from}\n * @see {@link create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload uses state as an emitted value.\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1);\n *\n * @example <caption>Using asap scheduler, produces sequence of 1, 2, 4, then completes.</caption>\n * var res = Rx.Observable.generate(1, x => x < 5, x => x  * 2, Rx.Scheduler.asap);\n *\n * @see {@link from}\n * @see {@link create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {Scheduler} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * var res = Rx.Observable.generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1\n * });\n *\n * @see {@link from}\n * @see {@link create}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * var res = Rx.Observable.generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x\n * });\n *\n * @see {@link from}\n * @see {@link create}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `if` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `if` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * @example <caption>Change at runtime which Observable will be subscribed</caption>\n * let subscribeToFirst;\n * const firstOrSecond = Rx.Observable.if(\n *   () => subscribeToFirst,\n *   Rx.Observable.of('first'),\n *   Rx.Observable.of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n *\n * @example <caption>Control an access to an Observable</caption>\n * let accessGranted;\n * const observableIfYouHaveAccess = Rx.Observable.if(\n *   () => accessGranted,\n *   Rx.Observable.of('It seems you have an access...') // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"The end\"\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nexport function iif<T, F>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer<T|F>(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified IScheduler.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * <img src=\"./img/interval.png\" width=\"100%\">\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` IScheduler to provide a notion of time, but you may pass any\n * IScheduler to it.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n * var numbers = Rx.Observable.interval(1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * <img src=\"./img/never.png\" width=\"100%\">\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n * function info() {\n *   console.log('Will not be called');\n * }\n * var result = NEVER.startWith(7);\n * result.subscribe(x => console.log(x), info, info);\n *\n * @see {@link create}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using NEVER constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * import { onErrorResumeNext, of } from 'rxjs/create';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\r\nimport { SchedulerAction, SchedulerLike } from '../types';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { Subscription } from '../Subscription';\r\n\r\n/**\r\n * Convert an object into an observable sequence of [key, value] pairs\r\n * using an optional IScheduler to enumerate the object.\r\n *\r\n * @example <caption>Converts a javascript object to an Observable</caption>\r\n * var obj = {\r\n *   foo: 42,\r\n *   bar: 56,\r\n *   baz: 78\r\n * };\r\n *\r\n * var source = Rx.Observable.pairs(obj);\r\n *\r\n * var subscription = source.subscribe(\r\n *   function (x) {\r\n *     console.log('Next: %s', x);\r\n *   },\r\n *   function (err) {\r\n *     console.log('Error: %s', err);\r\n *   },\r\n *   function () {\r\n *     console.log('Completed');\r\n *   });\r\n *\r\n * @param {Object} obj The object to inspect and turn into an\r\n * Observable sequence.\r\n * @param {Scheduler} [scheduler] An optional IScheduler to run the\r\n * enumeration of the input sequence on.\r\n * @returns {(Observable<[string, T]>)} An observable sequence of\r\n * [key, value] pairs from the object.\r\n */\r\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\r\n  if (!scheduler) {\r\n    return new Observable<[string, T]>(subscriber => {\r\n      const keys = Object.keys(obj);\r\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\r\n        const key = keys[i];\r\n        if (obj.hasOwnProperty(key)) {\r\n          subscriber.next([key, obj[key]]);\r\n        }\r\n      }\r\n      subscriber.complete();\r\n    });\r\n  } else {\r\n    return new Observable<[string, T]>(subscriber => {\r\n      const keys = Object.keys(obj);\r\n      const subscription = new Subscription();\r\n      subscription.add(\r\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\r\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\r\n      return subscription;\r\n    });\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport function dispatch<T>(this: SchedulerAction<any>,\r\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\r\n  const { keys, index, subscriber, subscription, obj } = state;\r\n  if (!subscriber.closed) {\r\n    if (index < keys.length) {\r\n      const key = keys[index];\r\n      subscriber.next([key, obj[key]]);\r\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\r\n    } else {\r\n      subscriber.complete();\r\n    }\r\n  }\r\n}\r\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * <img src=\"./img/range.png\" width=\"100%\">\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * IScheduler and just delivers the notifications synchronously, but may use\n * an optional IScheduler to regulate those deliveries.\n *\n * @example <caption>Emits the numbers 1 to 10</caption>\n * var numbers = Rx.Observable.range(1, 10);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count: number = 0,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    let index = 0;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(start++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `initialDelay` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link interval}, but you can specify when\n * should the emissions start.</span>\n *\n * <img src=\"./img/timer.png\" width=\"100%\">\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n * operator uses the `async` IScheduler to provide a notion of time, but you\n * may pass any IScheduler to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n * var numbers = Rx.Observable.timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @example <caption>Emits one number after five seconds</caption>\n * var numbers = Rx.Observable.timer(5000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time to wait before\n * emitting the first value of `0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `initialDelay` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zip<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zip<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zip<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R): Observable<R>;\n\nexport function zip<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerAction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: SchedulerLike = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ninterface DispatchCreateArg<T> {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number;\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface DispatchCloseArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: DispatchCreateArg<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule<DispatchCreateArg<T>>(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: SchedulerAction<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\nfunction dispatchBufferCreation<T>(this: SchedulerAction<DispatchCreateArg<T>>, state: DispatchCreateArg<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <SchedulerAction<DispatchCreateArg<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchCloseArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction, SubscribableOrPromise } from '../types';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function combineAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineAll<T>(): OperatorFunction<any, T[]>;\nexport function combineAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static combineLatest.\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import {  concat as concatStatic } from '../observable/concat';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static concat.\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic<T, R>(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer, OperatorFunction } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<any>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively if the duration selector Observable\n      // emits synchronously\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const { lastValue } = this;\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively when scheduled with things like\n      // VirtualScheduler/TestScheduler.\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link ErrorEmpty}.\n *\n * @example\n *\n * const click$ = fromEvent(button, 'click');\n *\n * clicks$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the button was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); },\n * });\n * @param {Function} [errorFactory] A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport const throwIfEmpty =\n  <T>(errorFactory: (() => any) = defaultErrorFactory) => tap<T>({\n    hasValue: false,\n    next() { this.hasValue = true; },\n    complete() {\n      if (!this.hasValue) {\n        throw errorFactory();\n      }\n    }\n  } as any);\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  if (index < 0) { throw new ArgumentOutOfRangeError(); }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    filter((v, i) => i === index),\n    take(1),\n    hasDefaultValue\n      ? defaultIfEmpty(defaultValue)\n      : throwIfEmpty(() => new ArgumentOutOfRangeError()),\n  );\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, TeardownLogic } from '../types';\n\nexport function exhaust<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function exhaust<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): OperatorFunction<any, T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, I|R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      exhaustMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      )),\n    );\n  }\n  return (source: Observable<T>) =>\n    source.lift(new ExhauseMapOperator(project));\n}\n\nclass ExhauseMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasSubscription = false;\n  private hasCompleted = false;\n  private index = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function expand<T>(project: (value: T, index: number) => ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: SchedulerLike = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: ObservableInput<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule<DispatchArg<T, R>>(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements(): OperatorFunction<any, never> {\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    // Do nothing\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): OperatorFunction<T, T[]>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index?: number) => R, seed?: R): OperatorFunction<T, R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<R> {\n    return pipe(scan<T, T | R>((acc, value, index) => {\n      return accumulator(<R>acc, value, index + 1);\n    }), takeLast(1))(source) as Observable<R>;\n  };\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static merge.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../../internal/types';\nimport { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T>(innerObservable: ObservableInput<T>, concurrent?: number): OperatorFunction<any, T>;\n/** @deprecated */\nexport function mergeMapTo<T, I, R>(innerObservable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => ObservableInput<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => ObservableInput<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => ObservableInput<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<R>>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { from } from '../observable/from';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return from(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T, R>(selector: OperatorFunction<T, R>): OperatorFunction<T, R>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, R>(bufferSize?: number, windowTime?: number, selector?: OperatorFunction<T, R>, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, selector?: MonoTypeOperatorFunction<T>, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: SchedulerLike | OperatorFunction<T, R>,\n                                    scheduler?: SchedulerLike): UnaryFunction<Observable<T>, ConnectableObservable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = <Array<Observable<T>>>observables[0];\n    }\n\n    return source.lift.call(raceStatic<T>(source, ...observables));\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { empty } from '../observable/empty';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    super._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: SchedulerAction<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike ): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));\n}\n\nfunction shareReplayOperator<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike) {\n  let subject: ReplaySubject<T>;\n  let refCount = 0;\n  let subscription: Subscription;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\n    refCount++;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) { subject.next(value); },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subject.complete();\n        },\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n\n    return () => {\n      refCount--;\n      innerSub.unsubscribe();\n      if (subscription && refCount === 0 && isComplete) {\n        subscription.unsubscribe();\n      }\n    };\n  };\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { Observer, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emiited.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic, ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(destination: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>, notifier: ObservableInput<any>) {\n    super(destination);\n    this.add(this.innerSubscription = subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n    this.innerSubscription.unsubscribe();\n  }\n\n  notifyComplete() {\n    /* do nothing */\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(v1: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    let scheduler = <SchedulerLike>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len === 1 && !scheduler) {\n      return concatStatic(scalar(array[0] as T), source);\n    } else if (len > 0) {\n      return concatStatic(fromArray(array as T[], scheduler), source);\n    } else {\n      return concatStatic<T>(empty(scheduler) as any, source);\n    }\n  };\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  /** @nocollapse */\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: SchedulerLike = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  /** @nocollapse */\n  static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: SchedulerLike = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule<DispatchArg<any>>(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable<T>(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n      this.destination.next(innerValue);\n  }\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function switchAll<R>(): OperatorFunction<any, R>;\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return switchMap(identity);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n    if (notifierSubscription && !notifierSubscription.closed) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private _throttled: Subscription;\n  private _sendValue: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = null;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (duration) {\n      this.add(this._throttled = subscribeToResult(this, duration));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = null;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\n\nexport function timeInterval<T>(scheduler: SchedulerLike = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => defer(() => {\n    return source.pipe(\n      // HACK: the typings seem off with scan\n      scan(\n        ({ current }, value) => ({ value, current: scheduler.now(), last: current }),\n        { current: scheduler.now(), value: undefined,  last: undefined }\n      ) as any,\n      map<any, TimeInterval<T>>(({ current, last, value }) => new TimeInterval(value, current - last)),\n    );\n  });\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {}\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: SchedulerAction<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","\nimport { async } from '../scheduler/async';\nimport { OperatorFunction, SchedulerLike, Timestamp as TimestampInterface } from '../types';\nimport { map } from './map';\n\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: SchedulerLike = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> implements TimestampInterface<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, []) as OperatorFunction<T, T[]>;\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerLike, SchedulerAction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: SchedulerLike = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: SchedulerAction<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule<CreationState<T>>(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule<TimeSpanOnlyState<T>>(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: SchedulerAction<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: SchedulerAction<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings as any));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static zip.\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}","import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","\n/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjectable } from './defs';\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * #### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * #### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @template T\n */\nvar /**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * #### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * #### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @template T\n */\nInjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            /** @nocollapse */ this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            /** @nocollapse */ this.ngInjectableDef = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * #### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * #### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @template T\n */\nexport { InjectionToken };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    InjectionToken.prototype.ngMetadataName;\n    /** @type {?} */\n    InjectionToken.prototype.ngInjectableDef;\n    /** @type {?} */\n    InjectionToken.prototype._desc;\n}\n/**\n * @record\n * @template T\n */\nexport function InjectableDefToken() { }\n/** @type {?} */\nInjectableDefToken.prototype.ngInjectableDef;\n//# sourceMappingURL=injection_token.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * @record\n */\nexport function TypeDecorator() { }\n/** @type {?} */\nexport var ANNOTATIONS = '__annotations__';\n/** @type {?} */\nexport var PARAMETERS = '__parameters__';\n/** @type {?} */\nexport var PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @template T\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} additionalProcessing\n * @param {?=} typeFn\n * @return {?}\n */\nexport function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n    /** @type {?} */\n    var metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, [this].concat(args));\n            return this;\n        }\n        /** @type {?} */\n        var annotationInstance = new ((_a = (/** @type {?} */ (DecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function TypeDecorator(cls) {\n            if (typeFn)\n                typeFn.apply(void 0, [cls].concat(args));\n            /** @type {?} */\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            if (additionalProcessing)\n                additionalProcessing(cls);\n            return cls;\n        };\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            /** @type {?} */\n            var values = props.apply(void 0, args);\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(name, props, parentClass) {\n    /** @type {?} */\n    var metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        var annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            /** @type {?} */\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} additionalProcessing\n * @return {?}\n */\nexport function makePropDecorator(name, props, parentClass, additionalProcessing) {\n    /** @type {?} */\n    var metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        var decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        /**\n         * @param {?} target\n         * @param {?} name\n         * @return {?}\n         */\n        function PropDecorator(target, name) {\n            /** @type {?} */\n            var constructor = target.constructor;\n            /** @type {?} */\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n            if (additionalProcessing)\n                additionalProcessing.apply(void 0, [target, name].concat(args));\n        }\n        return PropDecorator;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n//# sourceMappingURL=decorators.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n       * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n       * Change detection can still be explictly invoked.\n       */\n    OnPush: 0,\n    /**\n       * Use the default `CheckAlways` strategy, in which change detection is automatic until\n       * explicitly deactivated.\n       */\n    Default: 1,\n};\nexport { ChangeDetectionStrategy };\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = 'OnPush';\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = 'Default';\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * A state in which, after calling `detectChanges()`, the change detector\n       * state becomes `Checked`, and must be explicitly invoked or reactivated.\n       */\n    CheckOnce: 0,\n    /**\n       * A state in which change detection is skipped until the change detector mode\n       * becomes `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * A state in which change detection continues automatically until explictly\n       * deactivated.\n       */\n    CheckAlways: 2,\n    /**\n       * A state in which a change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * Indicates that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state do not detect changes.\n       */\n    Errored: 4,\n    /**\n       * Indicates that the change detector has been destroyed.\n       */\n    Destroyed: 5,\n};\nexport { ChangeDetectorStatus };\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = 'CheckOnce';\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = 'Checked';\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = 'CheckAlways';\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = 'Detached';\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = 'Errored';\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = 'Destroyed';\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n * @param {?} changeDetectionStrategy The strategy to check.\n * @return {?} True if the given strategy is the current default, false otherwise.\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n//# sourceMappingURL=constants.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nvar __window = typeof window !== 'undefined' && window;\n/** @type {?} */\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\n/** @type {?} */\nvar __global = typeof global !== 'undefined' && global;\n/** @type {?} */\nvar _global = __global || __window || __self;\n/** @type {?} */\nvar promise = Promise.resolve(0);\nexport { _global as global };\n/** @type {?} */\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator() {\n    if (!_symbolIterator) {\n        /** @type {?} */\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            /** @type {?} */\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                /** @type {?} */\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    /** @type {?} */\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    /** @type {?} */\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\nexport function ForwardRefFn() { }\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * \\@usageNotes\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n//# sourceMappingURL=forward_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { defineInjectable } from './defs';\nimport { resolveForwardRef } from './forward_ref';\nimport { InjectionToken } from './injection_token';\nimport { Inject, Optional, Self, SkipSelf } from './metadata';\n/** @type {?} */\nexport var SOURCE = '__source';\n/** @type {?} */\nvar _THROW_IF_NOT_FOUND = new Object();\n/** @type {?} */\nexport var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/** *\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * \\@experimental\n  @type {?} */\nexport var INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\nexport { NullInjector };\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    /** @nocollapse */ Injector.ngInjectableDef = defineInjectable({\n        providedIn: /** @type {?} */ ('any'),\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nexport { Injector };\nif (false) {\n    /** @type {?} */\n    Injector.THROW_IF_NOT_FOUND;\n    /** @type {?} */\n    Injector.NULL;\n    /** @type {?} */\n    Injector.ngInjectableDef;\n    /**\n     * Retrieves an instance from the injector based on the provided token.\n     * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n     * @abstract\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?} The instance from the injector if defined, otherwise the `notFoundValue`.\n     */\n    Injector.prototype.get = function (token, notFoundValue, flags) { };\n    /**\n     * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n     * @suppress {duplicate}\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector.prototype.get = function (token, notFoundValue) { };\n}\n/** @type {?} */\nvar IDENT = function (value) {\n    return value;\n};\nvar ɵ0 = IDENT;\n/** @type {?} */\nvar EMPTY = /** @type {?} */ ([]);\n/** @type {?} */\nvar CIRCULAR = IDENT;\n/** @type {?} */\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar ɵ1 = MULTI_PROVIDER_FN;\n/** @type {?} */\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\n/** @type {?} */\nexport var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n/** @type {?} */\nvar NG_TOKEN_PATH = 'ngTokenPath';\n/** @type {?} */\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n/** @enum {number} */\nvar OptionFlags = {\n    Optional: 1,\n    CheckSelf: 2,\n    CheckParent: 4,\n    Default: 6,\n};\n/** @type {?} */\nvar NULL_INJECTOR = Injector.NULL;\n/** @type {?} */\nvar NEW_LINE = /\\n/gm;\n/** @type {?} */\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        /** @type {?} */\n        var records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        records.set(INJECTOR, /** @type {?} */ ({ token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        /** @type {?} */\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            /** @type {?} */\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var tokens = /** @type {?} */ ([]);\n        /** @type {?} */\n        var records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nexport { StaticInjector };\nif (false) {\n    /** @type {?} */\n    StaticInjector.prototype.parent;\n    /** @type {?} */\n    StaticInjector.prototype.source;\n    /** @type {?} */\n    StaticInjector.prototype._records;\n}\n/** @typedef {?} */\nvar SupportedProvider;\n/**\n * @record\n */\nfunction Record() { }\n/** @type {?} */\nRecord.prototype.fn;\n/** @type {?} */\nRecord.prototype.useNew;\n/** @type {?} */\nRecord.prototype.deps;\n/** @type {?} */\nRecord.prototype.value;\n/**\n * @record\n */\nfunction DependencyRecord() { }\n/** @type {?} */\nDependencyRecord.prototype.token;\n/** @type {?} */\nDependencyRecord.prototype.options;\n/** @typedef {?} */\nvar TokenPath;\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    /** @type {?} */\n    var deps = computeDeps(provider);\n    /** @type {?} */\n    var fn = IDENT;\n    /** @type {?} */\n    var value = EMPTY;\n    /** @type {?} */\n    var useNew = false;\n    /** @type {?} */\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            /** @type {?} */\n            var token = resolveForwardRef(provider.provide);\n            /** @type {?} */\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                /** @type {?} */\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            /** @type {?} */\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        /** @type {?} */\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var _a;\n    /** @type {?} */\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            /** @type {?} */\n            var obj = undefined;\n            /** @type {?} */\n            var useNew = record.useNew;\n            /** @type {?} */\n            var fn = record.fn;\n            /** @type {?} */\n            var depRecords = record.deps;\n            /** @type {?} */\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    /** @type {?} */\n                    var depRecord = depRecords[i];\n                    /** @type {?} */\n                    var options = depRecord.options;\n                    /** @type {?} */\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    /** @type {?} */\n    var deps = EMPTY;\n    /** @type {?} */\n    var providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            /** @type {?} */\n            var options = 6 /* Default */;\n            /** @type {?} */\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    /** @type {?} */\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        var token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    /** @type {?} */\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        /** @type {?} */\n        var parts = /** @type {?} */ ([]);\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                /** @type {?} */\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/** @enum {number} */\nvar InjectFlags = {\n    Default: 0,\n    /**\n       * Specifies that an injector should retrieve a dependency from any injector until reaching the\n       * host element of the current component. (Only used with Element Injector)\n       */\n    Host: 1,\n    /** Don't descend into ancestors of the node requesting injection. */\n    Self: 2,\n    /** Skip the node that is requesting injection. */\n    SkipSelf: 4,\n    /** Inject `defaultValue` instead if token not found. */\n    Optional: 8,\n};\nexport { InjectFlags };\n/** *\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n  @type {?} */\nvar _currentInjector = undefined;\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function setCurrentInjector(injector) {\n    /** @type {?} */\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nexport function inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        /** @type {?} */\n        var injectableDef = (/** @type {?} */ (token)).ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\n/**\n * @param {?} types\n * @return {?}\n */\nexport function injectArgs(types) {\n    /** @type {?} */\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        /** @type {?} */\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            /** @type {?} */\n            var type = undefined;\n            /** @type {?} */\n            var flags = 0 /* Default */;\n            for (var j = 0; j < arg.length; j++) {\n                /** @type {?} */\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(/** @type {?} */ ((type)), flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\nexport { ɵ0, ɵ1 };\n//# sourceMappingURL=injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using the deprecated [Shadow DOM\n       * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n    /**\n       * Use Shadow DOM to encapsulate styles.\n       *\n       * For the DOM this means using modern [Shadow\n       * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       *\n       * ### Example\n       * {@example core/ts/metadata/encapsulation.ts region='longform'}\n       */\n    ShadowDom: 3,\n};\nexport { ViewEncapsulation };\nViewEncapsulation[ViewEncapsulation.Emulated] = 'Emulated';\nViewEncapsulation[ViewEncapsulation.Native] = 'Native';\nViewEncapsulation[ViewEncapsulation.None] = 'None';\nViewEncapsulation[ViewEncapsulation.ShadowDom] = 'ShadowDom';\n//# sourceMappingURL=view.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertEqual } from './assert';\nimport { DIRECTIVES, FLAGS } from './interfaces/view';\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param {?} index The index of the directive in LViewData[DIRECTIVES]\n * @param {?} onInit\n * @param {?} doCheck\n * @param {?} tView The current TView\n * @return {?}\n */\nexport function queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n * @param {?} flags\n * @param {?} tView\n * @return {?}\n */\nexport function queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        /** @type {?} */\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        var count = flags & 4095 /* DirectiveCountMask */;\n        /** @type {?} */\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            /** @type {?} */\n            var def = /** @type {?} */ ((tView.directives))[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/**\n * Queues afterContentInit and afterContentChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/**\n * Queues afterViewInit and afterViewChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/**\n * Queues onDestroy hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nexport function executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(/** @type {?} */ ((currentView[DIRECTIVES])), tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param {?} data\n * @param {?} allHooks\n * @param {?} checkHooks\n * @param {?} creationMode\n * @return {?}\n */\nexport function executeHooks(data, allHooks, checkHooks, creationMode) {\n    /** @type {?} */\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param {?} data\n * @param {?} arr The array in which the hooks are found\n * @return {?}\n */\nexport function callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        (/** @type {?} */ (arr[i + 1])).call(data[/** @type {?} */ (arr[i])]);\n    }\n}\n//# sourceMappingURL=hooks.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nvar __global = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n    typeof self != 'undefined' && self;\n/**\n * @return {?}\n */\nexport function ngDevModeResetPerfCounters() {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n    return __global['ngDevMode'] = {\n        firstTemplatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n        rendererCreateComment: 0,\n    };\n}\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n    __global['ngDevMode'] = ngDevModeResetPerfCounters();\n}\n//# sourceMappingURL=ng_dev_mode.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar RendererStyleFlags3 = {\n    Important: 1,\n    DashCase: 2,\n};\nexport { RendererStyleFlags3 };\nRendererStyleFlags3[RendererStyleFlags3.Important] = 'Important';\nRendererStyleFlags3[RendererStyleFlags3.DashCase] = 'DashCase';\n/** @typedef {?} */\nvar Renderer3;\nexport { Renderer3 };\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n *\n * @record\n */\nexport function ObjectOrientedRenderer3() { }\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createComment;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createElement;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createElementNS;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.createTextNode;\n/** @type {?} */\nObjectOrientedRenderer3.prototype.querySelector;\n/**\n * Returns whether the `renderer` is a `ProceduralRenderer3`\n * @param {?} renderer\n * @return {?}\n */\nexport function isProceduralRenderer(renderer) {\n    return !!((/** @type {?} */ (renderer)).listen);\n}\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n * @record\n */\nexport function ProceduralRenderer3() { }\n/** @type {?} */\nProceduralRenderer3.prototype.destroy;\n/** @type {?} */\nProceduralRenderer3.prototype.createComment;\n/** @type {?} */\nProceduralRenderer3.prototype.createElement;\n/** @type {?} */\nProceduralRenderer3.prototype.createText;\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?|undefined}\n */\nProceduralRenderer3.prototype.destroyNode;\n/** @type {?} */\nProceduralRenderer3.prototype.appendChild;\n/** @type {?} */\nProceduralRenderer3.prototype.insertBefore;\n/** @type {?} */\nProceduralRenderer3.prototype.removeChild;\n/** @type {?} */\nProceduralRenderer3.prototype.selectRootElement;\n/** @type {?} */\nProceduralRenderer3.prototype.setAttribute;\n/** @type {?} */\nProceduralRenderer3.prototype.removeAttribute;\n/** @type {?} */\nProceduralRenderer3.prototype.addClass;\n/** @type {?} */\nProceduralRenderer3.prototype.removeClass;\n/** @type {?} */\nProceduralRenderer3.prototype.setStyle;\n/** @type {?} */\nProceduralRenderer3.prototype.removeStyle;\n/** @type {?} */\nProceduralRenderer3.prototype.setProperty;\n/** @type {?} */\nProceduralRenderer3.prototype.setValue;\n/** @type {?} */\nProceduralRenderer3.prototype.listen;\n/**\n * @record\n */\nexport function RendererFactory3() { }\n/** @type {?} */\nRendererFactory3.prototype.createRenderer;\n/** @type {?|undefined} */\nRendererFactory3.prototype.begin;\n/** @type {?|undefined} */\nRendererFactory3.prototype.end;\n/** @type {?} */\nexport var domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n/**\n * Subset of API needed for appending elements and text nodes.\n * @record\n */\nexport function RNode() { }\n/** @type {?} */\nRNode.prototype.removeChild;\n/**\n * Insert a child node.\n *\n * Used exclusively for adding View root nodes into ViewAnchor location.\n * @type {?}\n */\nRNode.prototype.insertBefore;\n/**\n * Append a child node.\n *\n * Used exclusively for building up DOM which are static (ie not View roots)\n * @type {?}\n */\nRNode.prototype.appendChild;\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n * @record\n */\nexport function RElement() { }\n/** @type {?} */\nRElement.prototype.style;\n/** @type {?} */\nRElement.prototype.classList;\n/** @type {?} */\nRElement.prototype.className;\n/** @type {?} */\nRElement.prototype.setAttribute;\n/** @type {?} */\nRElement.prototype.removeAttribute;\n/** @type {?} */\nRElement.prototype.setAttributeNS;\n/** @type {?} */\nRElement.prototype.addEventListener;\n/** @type {?} */\nRElement.prototype.removeEventListener;\n/** @type {?|undefined} */\nRElement.prototype.setProperty;\n/**\n * @record\n */\nexport function RCssStyleDeclaration() { }\n/** @type {?} */\nRCssStyleDeclaration.prototype.removeProperty;\n/** @type {?} */\nRCssStyleDeclaration.prototype.setProperty;\n/**\n * @record\n */\nexport function RDomTokenList() { }\n/** @type {?} */\nRDomTokenList.prototype.add;\n/** @type {?} */\nRDomTokenList.prototype.remove;\n/**\n * @record\n */\nexport function RText() { }\n/** @type {?} */\nRText.prototype.textContent;\n/**\n * @record\n */\nexport function RComment() { }\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n//# sourceMappingURL=renderer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertDefined, assertEqual } from './assert';\n/**\n * @param {?} node\n * @param {?} type\n * @return {?}\n */\nexport function assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\n/**\n * @param {?} node\n * @param {...?} types\n * @return {?}\n */\nexport function assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(node, 'should be called with a node');\n    /** @type {?} */\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(node.tNode.type));\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    if (type == 4 /* ElementContainer */)\n        return 'ElementContainer';\n    return '<unknown>';\n}\n//# sourceMappingURL=node_assert.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getSymbolIterator, looseIdentical } from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a, b) {\n    /** @type {?} */\n    var isListLikeIterableA = isListLikeIterable(a);\n    /** @type {?} */\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        /** @type {?} */\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        /** @type {?} */\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar /**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nWrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.unwrap = /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.isWrapped = /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nexport { WrappedValue };\nif (false) {\n    /**\n     * @deprecated from 5.3, use `unwrap()` instead - will switch to protected\n     * @type {?}\n     */\n    WrappedValue.prototype.wrapped;\n}\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar /**\n * Represents a basic change from a previous to a new value.\n *\n */\nSimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nexport { SimpleChange };\nif (false) {\n    /** @type {?} */\n    SimpleChange.prototype.previousValue;\n    /** @type {?} */\n    SimpleChange.prototype.currentValue;\n    /** @type {?} */\n    SimpleChange.prototype.firstChange;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(a, b, comparator) {\n    /** @type {?} */\n    var iterator1 = a[getSymbolIterator()]();\n    /** @type {?} */\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        /** @type {?} */\n        var item1 = iterator1.next();\n        /** @type {?} */\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        /** @type {?} */\n        var iterator = obj[getSymbolIterator()]();\n        /** @type {?} */\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n//# sourceMappingURL=change_detection_util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport { devModeEqual } from '../change_detection/change_detection_util';\nimport { assertLessThan } from './assert';\nimport { HEADER_OFFSET } from './interfaces/view';\n/**\n * Returns wether the values are different from a change detection stand point.\n *\n * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n * @param {?} a\n * @param {?} b\n * @param {?} checkNoChangesMode\n * @return {?}\n */\nexport function isDifferent(a, b, checkNoChangesMode) {\n    if (ngDevMode && checkNoChangesMode) {\n        return !devModeEqual(a, b);\n    }\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function stringify(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @return {?} Not implemented error\n */\nexport function notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n * @param {?} list\n * @return {?}\n */\nexport function flatten(list) {\n    /** @type {?} */\n    var result = [];\n    /** @type {?} */\n    var i = 0;\n    while (i < list.length) {\n        /** @type {?} */\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n/**\n * Retrieves a value from any `LViewData`.\n * @template T\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nexport function loadInternal(index, arr) {\n    ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n    return arr[index + HEADER_OFFSET];\n}\n/**\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nexport function assertDataInRangeInternal(index, arr) {\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n/**\n * Retrieves an element value from the provided `viewData`.\n *\n * Elements that are read may be wrapped in a style context,\n * therefore reading the value may involve unwrapping that.\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nexport function loadElementInternal(index, arr) {\n    /** @type {?} */\n    var value = loadInternal(index, arr);\n    return readElementValue(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function readElementValue(value) {\n    return /** @type {?} */ ((Array.isArray(value) ? (/** @type {?} */ ((value)))[0] : value));\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertDefined } from './assert';\nimport { attachLViewDataToNode } from './element_discovery';\nimport { callHooks } from './hooks';\nimport { RENDER_PARENT, VIEWS, unusedValueExportToPlacateAjd as unused1 } from './interfaces/container';\nimport { unusedValueExportToPlacateAjd as unused2 } from './interfaces/node';\nimport { unusedValueExportToPlacateAjd as unused3 } from './interfaces/projection';\nimport { isProceduralRenderer, unusedValueExportToPlacateAjd as unused4 } from './interfaces/renderer';\nimport { CLEANUP, CONTAINER_INDEX, DIRECTIVES, FLAGS, HEADER_OFFSET, HOST_NODE, NEXT, PARENT, QUERIES, RENDERER, TVIEW, unusedValueExportToPlacateAjd as unused5 } from './interfaces/view';\nimport { assertNodeOfPossibleTypes, assertNodeType } from './node_assert';\nimport { readElementValue, stringify } from './util';\n/** @type {?} */\nvar unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4 + unused5;\n/**\n * Retrieves the sibling node for the given node.\n * @param {?} node\n * @return {?}\n */\nexport function getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        /** @type {?} */\n        var viewData = /** @type {?} */ (node.data);\n        return viewData[NEXT] ? (/** @type {?} */ (viewData[NEXT]))[HOST_NODE] : null;\n    }\n    return node.tNode.next ? node.view[node.tNode.next.index] : null;\n}\n/**\n * Retrieves the first child of a given node\n * @param {?} node\n * @return {?}\n */\nexport function getChildLNode(node) {\n    if (node.tNode.child) {\n        /** @type {?} */\n        var viewData = node.tNode.type === 2 /* View */ ? /** @type {?} */ (node.data) : node.view;\n        return readElementValue(viewData[node.tNode.child.index]);\n    }\n    return null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getParentLNode(node) {\n    if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n        /** @type {?} */\n        var containerHostIndex = (/** @type {?} */ (node.data))[CONTAINER_INDEX];\n        return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n    }\n    /** @type {?} */\n    var parent = node.tNode.parent;\n    return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n}\n/**\n * Retrieves render parent LElementNode for a given view.\n * Might be null if a view is not yet attatched to any container.\n * @param {?} viewNode\n * @return {?}\n */\nfunction getRenderParent(viewNode) {\n    /** @type {?} */\n    var container = getParentLNode(viewNode);\n    return container ? container.data[RENDER_PARENT] : null;\n}\n/** @enum {number} */\nvar WalkLNodeTreeAction = {\n    /** node insert in the native environment */\n    Insert: 0,\n    /** node detach from the native environment */\n    Detach: 1,\n    /** node destruction using the renderer's API */\n    Destroy: 2,\n};\n/** *\n * Stack used to keep track of projection nodes in walkLNodeTree.\n *\n * This is deliberately created outside of walkLNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nvar projectionNodeStack = [];\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n *\n * @param {?} startingNode the node from which the walk is started.\n * @param {?} rootNode the root node considered. This prevents walking past that node.\n * @param {?} action identifies the action to be performed on the LElement nodes.\n * @param {?} renderer the current renderer.\n * @param {?=} renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n * required for action modes Insert and Destroy.\n * @param {?=} beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n * @return {?}\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    /** @type {?} */\n    var node = startingNode;\n    /** @type {?} */\n    var projectionNodeIndex = -1;\n    while (node) {\n        /** @type {?} */\n        var nextNode = null;\n        /** @type {?} */\n        var parent_1 = renderParentNode ? renderParentNode.native : null;\n        /** @type {?} */\n        var nodeType = node.tNode.type;\n        if (nodeType === 3 /* Element */) {\n            // Execute the action\n            executeNodeAction(action, renderer, parent_1, /** @type {?} */ ((node.native)), beforeNode);\n            if (node.dynamicLContainerNode) {\n                executeNodeAction(action, renderer, parent_1, /** @type {?} */ ((node.dynamicLContainerNode.native)), beforeNode);\n            }\n        }\n        else if (nodeType === 0 /* Container */) {\n            executeNodeAction(action, renderer, parent_1, /** @type {?} */ ((node.native)), beforeNode);\n            /** @type {?} */\n            var lContainerNode = (/** @type {?} */ (node));\n            /** @type {?} */\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData[RENDER_PARENT] = renderParentNode;\n            }\n            nextNode =\n                childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            if (nextNode) {\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.native :\n                    lContainerNode.native;\n            }\n        }\n        else if (nodeType === 1 /* Projection */) {\n            /** @type {?} */\n            var componentHost = findComponentHost(node.view);\n            /** @type {?} */\n            var head = (/** @type {?} */ (componentHost.tNode.projection))[/** @type {?} */ (node.tNode.projection)];\n            projectionNodeStack[++projectionNodeIndex] = /** @type {?} */ (node);\n            nextNode = head ? /** @type {?} */ (((/** @type {?} */ (componentHost.data))[PARENT]))[head.index] : null;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(/** @type {?} */ (node));\n        }\n        if (nextNode === null) {\n            nextNode = getNextLNode(node);\n            // this last node was projected, we need to get back down to its projection node\n            if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                nextNode = getNextLNode(/** @type {?} */ (projectionNodeStack[projectionNodeIndex--]));\n            }\n            /**\n                   * Find the next node in the LNode tree, taking into account the place where a node is\n                   * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                   *\n                   * If there is no sibling node, then it goes to the next sibling of the parent node...\n                   * until it reaches rootNode (at which point null is returned).\n                   */\n            while (node && !nextNode) {\n                node = getParentLNode(node);\n                if (node === null || node === rootNode)\n                    return null;\n                // When exiting a container, the beforeNode must be restored to the previous value\n                if (!node.tNode.next && nodeType === 0 /* Container */) {\n                    beforeNode = node.native;\n                }\n                nextNode = getNextLNode(node);\n            }\n        }\n        node = nextNode;\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param {?} lViewData LViewData for which we want a host element node\n * @return {?} The host node\n */\nexport function findComponentHost(lViewData) {\n    /** @type {?} */\n    var viewRootLNode = lViewData[HOST_NODE];\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n        lViewData = /** @type {?} */ ((lViewData[PARENT]));\n        viewRootLNode = lViewData[HOST_NODE];\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return /** @type {?} */ (viewRootLNode);\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n * @param {?} action\n * @param {?} renderer\n * @param {?} parent\n * @param {?} node\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).insertBefore(/** @type {?} */ ((parent)), node, /** @type {?} */ (beforeNode)) : /** @type {?} */ ((parent)).insertBefore(node, /** @type {?} */ (beforeNode), true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).removeChild(/** @type {?} */ ((parent)), node) : /** @type {?} */ ((parent)).removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++; /** @type {?} */\n        (((/** @type {?} */ (renderer)).destroyNode))(node);\n    }\n}\n/**\n * @param {?} value\n * @param {?} renderer\n * @return {?}\n */\nexport function createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify(value)) :\n        renderer.createTextNode(stringify(value));\n}\n/**\n * @param {?} container\n * @param {?} rootNode\n * @param {?} insertMode\n * @param {?=} beforeNode\n * @return {?}\n */\nexport function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    /** @type {?} */\n    var parentNode = container.data[RENDER_PARENT];\n    /** @type {?} */\n    var parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        /** @type {?} */\n        var node = getChildLNode(rootNode);\n        /** @type {?} */\n        var renderer = container.view[RENDERER];\n        walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n * @param {?} rootView The view to destroy\n * @return {?}\n */\nexport function destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    /** @type {?} */\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        /** @type {?} */\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            /** @type {?} */\n            var view = /** @type {?} */ (viewOrContainer);\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            /** @type {?} */\n            var container = /** @type {?} */ (viewOrContainer);\n            if (container[VIEWS].length)\n                next = container[VIEWS][0].data;\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !/** @type {?} */ ((viewOrContainer))[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && /** @type {?} */ ((viewOrContainer))[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param {?} container The container into which the view should be inserted\n * @param {?} viewNode The view to insert\n * @param {?} index The index at which to insert the view\n * @return {?} The inserted view\n */\nexport function insertView(container, viewNode, index) {\n    /** @type {?} */\n    var state = container.data;\n    /** @type {?} */\n    var views = state[VIEWS];\n    /** @type {?} */\n    var lView = /** @type {?} */ (viewNode.data);\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data[NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container'S host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (viewNode.tNode.index === -1) {\n        lView[CONTAINER_INDEX] = /** @type {?} */ ((container.tNode.parent)).index;\n        (/** @type {?} */ (viewNode)).view = container.view;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        /** @type {?} */ ((lView[QUERIES])).insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param {?} container The container from which to detach a view\n * @param {?} removeIndex The index of the view to detach\n * @return {?} The detached view\n */\nexport function detachView(container, removeIndex) {\n    /** @type {?} */\n    var views = container.data[VIEWS];\n    /** @type {?} */\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data[NEXT] = /** @type {?} */ (viewNode.data[NEXT]);\n    }\n    views.splice(removeIndex, 1);\n    if (!container.tNode.detached) {\n        addRemoveViewFromContainer(container, viewNode, false);\n    }\n    /** @type {?} */\n    var removedLView = viewNode.data;\n    if (removedLView[QUERIES]) {\n        /** @type {?} */ ((removedLView[QUERIES])).removeView();\n    }\n    removedLView[CONTAINER_INDEX] = -1;\n    (/** @type {?} */ (viewNode)).view = null;\n    // Unsets the attached flag\n    viewNode.data[FLAGS] &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param {?} container The container from which to remove a view\n * @param {?} removeIndex The index of the view to remove\n * @return {?} The removed view\n */\nexport function removeView(container, removeIndex) {\n    /** @type {?} */\n    var viewNode = container.data[VIEWS][removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/**\n * Gets the child of the given LViewData\n * @param {?} viewData\n * @return {?}\n */\nexport function getLViewChild(viewData) {\n    if (viewData[TVIEW].childIndex === -1)\n        return null;\n    /** @type {?} */\n    var hostNode = viewData[viewData[TVIEW].childIndex];\n    return hostNode.data ? hostNode.data : (/** @type {?} */ (hostNode.dynamicLContainerNode)).data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param {?} view The view to be destroyed.\n * @return {?}\n */\nexport function destroyLView(view) {\n    /** @type {?} */\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param {?} state The LViewOrLContainer for which we need a parent state\n * @param {?} rootView The rootView, so we don't propagate too far up the view tree\n * @return {?} The correct parent LViewOrLContainer\n */\nexport function getParentState(state, rootView) {\n    /** @type {?} */\n    var node;\n    if ((node = /** @type {?} */ (((/** @type {?} */ (state))))[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return /** @type {?} */ (((getParentLNode(node))).data);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param {?} viewOrContainer\n * @return {?}\n */\nfunction cleanUpView(viewOrContainer) {\n    if ((/** @type {?} */ (viewOrContainer))[TVIEW]) {\n        /** @type {?} */\n        var view = /** @type {?} */ (viewOrContainer);\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            (/** @type {?} */ (view[RENDERER])).destroy();\n        }\n    }\n}\n/**\n * Removes listeners and unsubscribes from output subscriptions\n * @param {?} viewData\n * @return {?}\n */\nfunction removeListeners(viewData) {\n    /** @type {?} */\n    var cleanup = /** @type {?} */ ((viewData[TVIEW].cleanup));\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                /** @type {?} */\n                var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                /** @type {?} */\n                var listener = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                /** @type {?} */\n                var cleanupFn = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                /** @type {?} */\n                var context = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        viewData[CLEANUP] = null;\n    }\n}\n/**\n * Calls onDestroy hooks for this view\n * @param {?} view\n * @return {?}\n */\nfunction executeOnDestroys(view) {\n    /** @type {?} */\n    var tView = view[TVIEW];\n    /** @type {?} */\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(/** @type {?} */ ((view[DIRECTIVES])), destroyHooks);\n    }\n}\n/**\n * Calls pipe destroy hooks for this view\n * @param {?} viewData\n * @return {?}\n */\nfunction executePipeOnDestroys(viewData) {\n    /** @type {?} */\n    var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(/** @type {?} */ ((viewData)), pipeDestroyHooks);\n    }\n}\n/**\n * @param {?} parent\n * @param {?} currentView\n * @return {?}\n */\nfunction canInsertNativeChildOfElement(parent, currentView) {\n    if (parent.view !== currentView) {\n        // If the Parent view is not the same as current view than we are inserting across\n        // Views. This happens when we insert a root element of the component view into\n        // the component host element and it should always be eager.\n        return true;\n    }\n    // Parent elements can be a component which may have projection.\n    if (parent.data === null) {\n        // Parent is a regular non-component element. We should eagerly insert into it\n        // since we know that this relationship will never be broken.\n        return true;\n    }\n    // Parent is a Component. Component's content nodes are not inserted immediately\n    // because they will be projected, and so doing insert at this point would be wasteful.\n    // Since the projection would than move it to its final destination.\n    return false;\n}\n/**\n * We might delay insertion of children for a given view if it is disconnected.\n * This might happen for 2 main reason:\n * - view is not inserted into any container (view was created but not iserted yet)\n * - view is inserted into a container but the container itself is not inserted into the DOM\n * (container might be part of projection or child of a view that is not inserted yet).\n *\n * In other words we can insert children of a given view this view was inserted into a container and\n * the container itself has it render parent determined.\n * @param {?} parent\n * @return {?}\n */\nfunction canInsertNativeChildOfView(parent) {\n    ngDevMode && assertNodeType(parent, 2 /* View */);\n    /** @type {?} */\n    var grandParentContainer = /** @type {?} */ (getParentLNode(parent));\n    if (grandParentContainer == null) {\n        // The `View` is not inserted into a `Container` we have to delay insertion.\n        return false;\n    }\n    ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n    if (grandParentContainer.data[RENDER_PARENT] == null) {\n        // The parent `Container` itself is disconnected. So we have to delay.\n        return false;\n    }\n    // The parent `Container` is in inserted state, so we can eagerly insert into\n    // this location.\n    return true;\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n *\n * @param {?} parent The parent where the child will be inserted into.\n * @param {?} currentView Current LView being processed.\n * @return {?} boolean Whether the child should be inserted now (or delayed until later).\n */\nexport function canInsertNativeNode(parent, currentView) {\n    // We can only insert into a Component or View. Any other type should be an Error.\n    ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n    if (parent.tNode.type === 3 /* Element */) {\n        // Parent is a regular element or a component\n        return canInsertNativeChildOfElement(/** @type {?} */ (parent), currentView);\n    }\n    else if (parent.tNode.type === 4 /* ElementContainer */) {\n        /** @type {?} */\n        var grandParent = getParentLNode(parent);\n        while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n            grandParent = getParentLNode(grandParent);\n        }\n        if (grandParent === null) {\n            return false;\n        }\n        else if (grandParent.tNode.type === 3 /* Element */) {\n            return canInsertNativeChildOfElement(/** @type {?} */ (grandParent), currentView);\n        }\n        else {\n            return canInsertNativeChildOfView(/** @type {?} */ (grandParent));\n        }\n    }\n    else {\n        // Parent is a View.\n        return canInsertNativeChildOfView(/** @type {?} */ (parent));\n    }\n}\n/**\n * Inserts a native node before another native node for a given parent using {\\@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n * @param {?} renderer\n * @param {?} parent\n * @param {?} child\n * @param {?} beforeNode\n * @return {?}\n */\nfunction nativeInsertBefore(renderer, parent, child, beforeNode) {\n    if (isProceduralRenderer(renderer)) {\n        renderer.insertBefore(parent, child, beforeNode);\n    }\n    else {\n        parent.insertBefore(child, beforeNode, true);\n    }\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}.\n *\n * @param {?} parent The parent to which to append the child\n * @param {?} child The child that should be appended\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was appended\n */\nexport function appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        /** @type {?} */\n        var renderer = currentView[RENDERER];\n        if (parent.tNode.type === 2 /* View */) {\n            /** @type {?} */\n            var container = /** @type {?} */ (getParentLNode(parent));\n            /** @type {?} */\n            var renderParent = container.data[RENDER_PARENT];\n            /** @type {?} */\n            var views = container.data[VIEWS];\n            /** @type {?} */\n            var index = views.indexOf(/** @type {?} */ (parent));\n            /** @type {?} */\n            var beforeNode = index + 1 < views.length ? (/** @type {?} */ ((getChildLNode(views[index + 1])))).native : container.native;\n            nativeInsertBefore(renderer, /** @type {?} */ ((renderParent)).native, child, beforeNode);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            /** @type {?} */\n            var beforeNode = parent.native;\n            /** @type {?} */\n            var grandParent = getParentLNode(/** @type {?} */ (parent));\n            while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(/** @type {?} */ (grandParent));\n            }\n            if (grandParent.tNode.type === 2 /* View */) {\n                /** @type {?} */\n                var renderParent = getRenderParent(/** @type {?} */ (grandParent));\n                nativeInsertBefore(renderer, /** @type {?} */ ((renderParent)).native, child, beforeNode);\n            }\n            else {\n                nativeInsertBefore(renderer, (/** @type {?} */ (grandParent)).native, child, beforeNode);\n            }\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(/** @type {?} */ (((parent.native))), child) : /** @type {?} */ ((parent.native)).appendChild(child);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Removes the `child` element of the `parent` from the DOM.\n *\n * @param {?} parent The parent from which to remove the child\n * @param {?} child The child that should be removed\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was removed\n */\nexport function removeChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        /** @type {?} */\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(/** @type {?} */ (parent.native), child) : /** @type {?} */ ((parent.native)).removeChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param {?} node The node to process\n * @param {?} currentParent The last parent element to be processed\n * @param {?} currentView Current LView\n * @param {?} renderParent\n * @param {?} parentView\n * @return {?}\n */\nexport function appendProjectedNode(node, currentParent, currentView, renderParent, parentView) {\n    appendChild(currentParent, node.native, currentView);\n    // the projected contents are processed while in the shadow view (which is the currentView)\n    // therefore we need to extract the view where the host element lives since it's the\n    // logical container of the content projected views\n    attachLViewDataToNode(node.native, parentView);\n    if (node.tNode.type === 0 /* Container */) {\n        /** @type {?} */\n        var lContainer = (/** @type {?} */ (node)).data;\n        lContainer[RENDER_PARENT] = renderParent;\n        /** @type {?} */\n        var views = lContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(/** @type {?} */ (node), views[i], true, node.native);\n        }\n    }\n    else if (node.tNode.type === 4 /* ElementContainer */) {\n        /** @type {?} */\n        var ngContainerChild = getChildLNode(/** @type {?} */ (node));\n        /** @type {?} */\n        var parentView_1 = currentView[HOST_NODE].view;\n        while (ngContainerChild) {\n            appendProjectedNode(/** @type {?} */ (ngContainerChild), currentParent, currentView, renderParent, parentView_1);\n            ngContainerChild = getNextLNode(ngContainerChild);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n        appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n    }\n}\n//# sourceMappingURL=node_manipulation.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\nimport { assertDefined, assertEqual, assertLessThan, assertNotEqual } from './assert';\nimport { attachLViewDataToNode } from './element_discovery';\nimport { throwCyclicDependencyError, throwErrorIfNoChangesMode, throwMultipleComponentError } from './errors';\nimport { executeHooks, executeInitHooks, queueInitHooks, queueLifecycleHooks } from './hooks';\nimport { ACTIVE_INDEX, RENDER_PARENT, VIEWS } from './interfaces/container';\nimport { NG_PROJECT_AS_ATTR_NAME } from './interfaces/projection';\nimport { isProceduralRenderer } from './interfaces/renderer';\nimport { BINDING_INDEX, CLEANUP, CONTAINER_INDEX, CONTENT_QUERIES, CONTEXT, DECLARATION_VIEW, DIRECTIVES, FLAGS, HEADER_OFFSET, HOST_NODE, INJECTOR, NEXT, PARENT, QUERIES, RENDERER, SANITIZER, TAIL, TVIEW } from './interfaces/view';\nimport { assertNodeOfPossibleTypes, assertNodeType } from './node_assert';\nimport { appendChild, appendProjectedNode, canInsertNativeNode, createTextNode, findComponentHost, getLViewChild, getParentLNode, insertView, removeView } from './node_manipulation';\nimport { isNodeMatchingSelectorList, matchingSelectorIndex } from './node_selector_matcher';\nimport { allocStylingContext, createStylingContextTemplate, renderStyling as renderElementStyles, updateClassProp as updateElementClassProp, updateStyleProp as updateElementStyleProp, updateStylingMap } from './styling';\nimport { assertDataInRangeInternal, isDifferent, loadElementInternal, loadInternal, stringify } from './util';\n/** *\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n  @type {?} */\nexport var NG_HOST_SYMBOL = '__ngHostLNode__';\n/** *\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n  @type {?} */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/** @typedef {?} */\nvar SanitizerFn;\nexport { SanitizerFn };\n/** *\n * TView.data needs to fill the same number of slots as the LViewData header\n * so the indices of nodes are consistent between LViewData and TView.data.\n *\n * It's much faster to keep a blueprint of the pre-filled array and slice it\n * than it is to create a new array and fill it each time a TView is created.\n  @type {?} */\nvar HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n/** *\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n  @type {?} */\nexport var CIRCULAR = '__CIRCULAR__';\n/** *\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n  @type {?} */\nvar renderer;\n/**\n * @return {?}\n */\nexport function getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\n/** @type {?} */\nvar rendererFactory;\n/**\n * @return {?}\n */\nexport function getRendererFactory() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return rendererFactory;\n}\n/**\n * @return {?}\n */\nexport function getCurrentSanitizer() {\n    return viewData && viewData[SANITIZER];\n}\n/** *\n * Store the element depth count. This is used to identify the root elements of the template\n * so that we can than attach `LViewData` to only those elements.\n  @type {?} */\nvar elementDepthCount;\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n * @return {?}\n */\nexport function getCurrentView() {\n    return /** @type {?} */ ((viewData));\n}\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param {?} viewToRestore The OpaqueViewState instance to restore.\n * @return {?}\n */\nexport function restoreView(viewToRestore) {\n    contextViewData = /** @type {?} */ ((viewToRestore));\n}\n/** *\n * Used to set the parent property when nodes are created.\n  @type {?} */\nvar previousOrParentNode;\n/**\n * @return {?}\n */\nexport function getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/** *\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n  @type {?} */\nvar isParent;\n/** @type {?} */\nvar tView;\n/** @type {?} */\nvar currentQueries;\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (inb this previousOrParentNode points to a node on which we\n * create content queries).\n * @param {?} QueryType\n * @return {?}\n */\nexport function getOrCreateCurrentQueries(QueryType) {\n    /** @type {?} */\n    var tNode = previousOrParentNode.tNode;\n    // if this is the first content query on a node, any existing LQueries needs to be cloned\n    // in subsequent template passes, the cloning occurs before directive instantiation.\n    if (previousOrParentNode.data !== viewData && !isContentQueryHost(tNode)) {\n        currentQueries && (currentQueries = currentQueries.clone());\n        tNode.flags |= 16384 /* hasContentQuery */;\n    }\n    return currentQueries || (currentQueries = new QueryType(null, null, null));\n}\n/** *\n * This property gets set before entering a template.\n  @type {?} */\nvar creationMode;\n/**\n * @return {?}\n */\nexport function getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/** *\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n  @type {?} */\nvar viewData;\n/**\n * Internal function that returns the current LViewData instance.\n *\n * The getCurrentView() instruction should be used for anything public.\n * @return {?}\n */\nexport function _getViewData() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return viewData;\n}\n/** *\n * The last viewData retrieved by nextContext().\n * Allows building nextContext() and reference() calls.\n *\n * e.g. const inner = x().$implicit; const outer = x().$implicit;\n  @type {?} */\nvar contextViewData = /** @type {?} */ ((null));\n/** *\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n  @type {?} */\nvar directives;\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/** *\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n  @type {?} */\nvar checkNoChangesMode = false;\n/** *\n * Whether or not this is the first time the current view has been processed.\n  @type {?} */\nvar firstTemplatePass = true;\n/** *\n * The root index from which pure function instructions should calculate their binding\n * indices. In component views, this is TView.bindingStartIndex. In a host binding\n * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n  @type {?} */\nvar bindingRootIndex = -1;\n/**\n * @return {?}\n */\nexport function getBindingRoot() {\n    return bindingRootIndex;\n}\n/** @enum {number} */\nvar BindingDirection = {\n    Input: 0,\n    Output: 1,\n};\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newView New state to become active\n * @param {?} host Element to which the View is a child of\n * @return {?} the previous state;\n */\nexport function enterView(newView, host) {\n    /** @type {?} */\n    var oldView = viewData;\n    directives = newView && newView[DIRECTIVES];\n    tView = newView && newView[TVIEW];\n    creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && tView.firstTemplatePass;\n    bindingRootIndex = newView && tView.bindingStartIndex;\n    renderer = newView && newView[RENDERER];\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    viewData = contextViewData = newView;\n    oldView && (oldView[QUERIES] = currentQueries);\n    currentQueries = newView && newView[QUERIES];\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param {?} newView New state to become active\n * @param {?=} creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n * @return {?}\n */\nexport function leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(/** @type {?} */ ((directives)), tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    viewData[FLAGS] |= 16 /* RunInit */;\n    viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings, refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * @return {?}\n */\nfunction refreshDescendantViews() {\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n    }\n    refreshDynamicEmbeddedViews(viewData);\n    // Content query results must be refreshed before content hooks are called.\n    refreshContentQueries(tView);\n    if (!checkNoChangesMode) {\n        executeHooks(/** @type {?} */ ((directives)), tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/**\n * Sets the host bindings for the current view.\n * @param {?} bindings\n * @return {?}\n */\nexport function setHostBindings(bindings) {\n    if (bindings != null) {\n        bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n        /** @type {?} */\n        var defs = /** @type {?} */ ((tView.directives));\n        for (var i = 0; i < bindings.length; i += 2) {\n            /** @type {?} */\n            var dirIndex = bindings[i];\n            /** @type {?} */\n            var def = /** @type {?} */ (defs[dirIndex]); /** @type {?} */\n            ((def.hostBindings))(dirIndex, bindings[i + 1]);\n            bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n        }\n    }\n}\n/**\n * Refreshes content queries for all directives in the given view.\n * @param {?} tView\n * @return {?}\n */\nfunction refreshContentQueries(tView) {\n    if (tView.contentQueries != null) {\n        for (var i = 0; i < tView.contentQueries.length; i += 2) {\n            /** @type {?} */\n            var directiveDefIdx = tView.contentQueries[i];\n            /** @type {?} */\n            var directiveDef = /** @type {?} */ ((tView.directives))[directiveDefIdx]; /** @type {?} */\n            ((directiveDef.contentQueriesRefresh))(directiveDefIdx, tView.contentQueries[i + 1]);\n        }\n    }\n}\n/**\n * Refreshes child components in the current view.\n * @param {?} components\n * @return {?}\n */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(components[i]);\n        }\n    }\n}\n/**\n * @return {?}\n */\nexport function executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n        executeHooks(/** @type {?} */ ((directives)), tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\n/**\n * @template T\n * @param {?} renderer\n * @param {?} tView\n * @param {?} context\n * @param {?} flags\n * @param {?=} sanitizer\n * @return {?}\n */\nexport function createLViewData(renderer, tView, context, flags, sanitizer) {\n    /** @type {?} */\n    var instance = /** @type {?} */ (tView.blueprint.slice());\n    instance[PARENT] = viewData;\n    instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n    instance[CONTEXT] = context;\n    instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n    instance[RENDERER] = renderer;\n    instance[SANITIZER] = sanitizer || null;\n    return instance;\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n * @param {?} type\n * @param {?} currentView\n * @param {?} parent\n * @param {?} native\n * @param {?} state\n * @return {?}\n */\nexport function createLNodeObject(type, currentView, parent, native, state) {\n    return {\n        native: /** @type {?} */ (native),\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        tNode: /** @type {?} */ ((null)),\n        dynamicLContainerNode: null\n    };\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?} name\n * @param {?} attrs\n * @param {?=} state\n * @return {?}\n */\nexport function createLNode(index, type, native, name, attrs, state) {\n    /** @type {?} */\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && /** @type {?} */ (((getParentLNode(previousOrParentNode))));\n    /** @type {?} */\n    var tParent = parent && parent.view === viewData ? /** @type {?} */ (parent.tNode) : null;\n    /** @type {?} */\n    var isState = state != null;\n    /** @type {?} */\n    var node = createLNodeObject(type, viewData, parent, native, isState ? /** @type {?} */ (state) : null);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = (state ? (/** @type {?} */ (state))[TVIEW].node : null) ||\n            createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        /** @type {?} */\n        var adjustedIndex = index + HEADER_OFFSET;\n        /** @type {?} */\n        var tData = tView.data;\n        ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = node;\n        if (tData[adjustedIndex] == null) {\n            /** @type {?} */\n            var tNode = tData[adjustedIndex] =\n                createTNode(type, adjustedIndex, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                /** @type {?} */\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = /** @type {?} */ (tData[adjustedIndex]);\n        // Now link ourselves into the tree.\n        if (isParent) {\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        /** @type {?} */\n        var lViewData = /** @type {?} */ (state);\n        ngDevMode &&\n            assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n        lViewData[HOST_NODE] = node;\n        if (firstTemplatePass)\n            lViewData[TVIEW].node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * When LNodes are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n * @param {?} view\n * @return {?}\n */\nexport function adjustBlueprintForNewNode(view) {\n    /** @type {?} */\n    var tView = view[TVIEW];\n    if (tView.firstTemplatePass) {\n        tView.hostBindingStartIndex++;\n        tView.blueprint.push(null);\n        view.push(null);\n    }\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nexport function resetComponentState() {\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ ((null));\n    elementDepthCount = 0;\n}\n/**\n *\n * @template T\n * @param {?} hostNode Existing node to render into.\n * @param {?} templateFn Template function with the instructions.\n * @param {?} consts The number of nodes, local refs, and pipes in this template\n * @param {?} vars\n * @param {?} context to pass into the template.\n * @param {?} providedRendererFactory renderer factory to use\n * @param {?} host The host element node to use\n * @param {?=} directives Directive defs that should be used for matching\n * @param {?=} pipes Pipe defs that should be used for matching\n * @param {?=} sanitizer\n * @return {?}\n */\nexport function renderTemplate(hostNode, templateFn, consts, vars, context, providedRendererFactory, host, directives, pipes, sanitizer) {\n    if (host == null) {\n        resetComponentState();\n        rendererFactory = providedRendererFactory;\n        /** @type {?} */\n        var tView_1 = getOrCreateTView(templateFn, consts, vars, directives || null, pipes || null, null);\n        host = createLNode(-1, 3 /* Element */, hostNode, null, null, createLViewData(providedRendererFactory.createRenderer(null, null), tView_1, {}, 2 /* CheckAlways */, sanitizer));\n    }\n    /** @type {?} */\n    var hostView = /** @type {?} */ ((host.data));\n    ngDevMode && assertDefined(hostView, 'Host node should have an LView defined in host.data.');\n    renderComponentOrTemplate(host, hostView, context, templateFn);\n    return host;\n}\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n * @template T\n * @param {?} tView\n * @param {?} context\n * @param {?} declarationView\n * @param {?} renderer\n * @param {?=} queries\n * @return {?}\n */\nexport function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n    /** @type {?} */\n    var _isParent = isParent;\n    /** @type {?} */\n    var _previousOrParentNode = previousOrParentNode;\n    isParent = true;\n    previousOrParentNode = /** @type {?} */ ((null));\n    /** @type {?} */\n    var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n    lView[DECLARATION_VIEW] = declarationView;\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    /** @type {?} */\n    var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n    isParent = _isParent;\n    previousOrParentNode = _previousOrParentNode;\n    return viewNode;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n * @template T\n * @param {?} viewNode\n * @param {?} tView\n * @param {?} context\n * @param {?} rf\n * @return {?}\n */\nexport function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n    /** @type {?} */\n    var _isParent = isParent;\n    /** @type {?} */\n    var _previousOrParentNode = previousOrParentNode;\n    /** @type {?} */\n    var oldView;\n    if (/** @type {?} */ ((viewNode.data))[PARENT] == null && /** @type {?} */ ((viewNode.data))[CONTEXT] && !tView.template) {\n        // This is a root view inside the view tree\n        tickRootContext(/** @type {?} */ (((viewNode.data))[CONTEXT]));\n    }\n    else {\n        try {\n            isParent = true;\n            previousOrParentNode = /** @type {?} */ ((null));\n            oldView = enterView(/** @type {?} */ ((viewNode.data)), viewNode);\n            namespaceHTML(); /** @type {?} */\n            ((tView.template))(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshDescendantViews();\n            }\n            else {\n                /** @type {?} */ ((viewNode.data))[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            /** @type {?} */\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(/** @type {?} */ ((oldView)), isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n    }\n    return viewNode;\n}\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @template T\n * @param {?=} level The relative level of the view from which to grab context compared to contextVewData\n * @return {?} context\n */\nexport function nextContext(level) {\n    if (level === void 0) { level = 1; }\n    contextViewData = walkUpViews(level, /** @type {?} */ ((contextViewData)));\n    return /** @type {?} */ (contextViewData[CONTEXT]);\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} hostView\n * @param {?} componentOrContext\n * @param {?=} templateFn\n * @return {?}\n */\nexport function renderComponentOrTemplate(node, hostView, componentOrContext, templateFn) {\n    /** @type {?} */\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (templateFn) {\n            namespaceHTML();\n            templateFn(getRenderFlags(hostView), /** @type {?} */ ((componentOrContext)));\n            refreshDescendantViews();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(tView.hostBindings);\n            componentRefresh(HEADER_OFFSET);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n * @param {?} view\n * @return {?}\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n/** @type {?} */\nvar _currentNamespace = null;\n/**\n * @return {?}\n */\nexport function namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\n/**\n * @return {?}\n */\nexport function namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\n/**\n * @return {?}\n */\nexport function namespaceHTML() {\n    _currentNamespace = null;\n}\n/**\n * Creates an empty element using {\\@link elementStart} and {\\@link elementEnd}\n *\n * @param {?} index Index of the element in the data array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nexport function element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param {?} index Index of the element in the LViewData array\n * @param {?=} attrs Set of attributes to be used when matching directives.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n * @return {?}\n */\nexport function elementContainerStart(index, attrs, localRefs) {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    /** @type {?} */\n    var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n    ngDevMode && assertDataInRange(index - 1);\n    /** @type {?} */\n    var node = createLNode(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(node, localRefs);\n}\n/**\n * Mark the end of the <ng-container>.\n * @return {?}\n */\nexport function elementContainerEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ (getParentLNode(previousOrParentNode));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 4 /* ElementContainer */);\n    currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the LViewData array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nexport function elementStart(index, name, attrs, localRefs) {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    /** @type {?} */\n    var native = elementCreate(name);\n    ngDevMode && assertDataInRange(index - 1);\n    /** @type {?} */\n    var node = createLNode(index, 3 /* Element */, /** @type {?} */ ((native)), name, attrs || null, null);\n    if (attrs) {\n        setUpAttributes(native, attrs);\n    }\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(node, localRefs);\n    // any immediate children of a component or template container must be pre-emptively\n    // monkey-patched with the component view data so that the element can be inspected\n    // later on using any element discovery utility methods (see `element_discovery.ts`)\n    if (elementDepthCount === 0) {\n        attachLViewDataToNode(native, viewData);\n    }\n    elementDepthCount++;\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param {?} name the tag name\n * @param {?=} overriddenRenderer Optional A renderer to override the default one\n * @return {?} the element created\n */\nexport function elementCreate(name, overriddenRenderer) {\n    /** @type {?} */\n    var native;\n    /** @type {?} */\n    var rendererToUse = overriddenRenderer || renderer;\n    if (isProceduralRenderer(rendererToUse)) {\n        native = rendererToUse.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = rendererToUse.createElement(name);\n        }\n        else {\n            native = rendererToUse.createElementNS(_currentNamespace, name);\n        }\n    }\n    return native;\n}\n/**\n * @param {?} lNode\n * @return {?}\n */\nfunction nativeNodeLocalRefExtractor(lNode) {\n    return lNode.native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param {?} lNode LNode for which directive and locals should be created\n * @param {?} localRefs Local refs of the node in question\n * @param {?=} localRefExtractor mapping function that extracts local ref value from LNode\n * @return {?}\n */\nfunction createDirectivesAndLocals(lNode, localRefs, localRefExtractor) {\n    if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(lNode.tNode, tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData(lNode, localRefExtractor);\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n * @param {?} tNode\n * @param {?} tView\n * @param {?} localRefs\n * @return {?}\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    /** @type {?} */\n    var exportsMap = localRefs ? { '': -1 } : null;\n    /** @type {?} */\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            /** @type {?} */\n            var def = /** @type {?} */ (matches[i]);\n            /** @type {?} */\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(/** @type {?} */ (matches[valueIndex]), def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/**\n * Matches the current node against all available selectors.\n * @param {?} tNode\n * @return {?}\n */\nfunction findDirectiveMatches(tNode) {\n    /** @type {?} */\n    var registry = tView.directiveRegistry;\n    /** @type {?} */\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            /** @type {?} */\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, /** @type {?} */ ((def.selectors)))) {\n                if ((/** @type {?} */ (def)).template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return /** @type {?} */ (matches);\n}\n/**\n * @param {?} def\n * @param {?} valueIndex\n * @param {?} matches\n * @param {?} tView\n * @return {?}\n */\nexport function resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR;\n        /** @type {?} */\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = /** @type {?} */ ((tView.directives)).length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/**\n * Stores index of component's host element so it will be queued for view refresh during CD.\n * @return {?}\n */\nfunction queueComponentIndexForCheck() {\n    if (firstTemplatePass) {\n        (tView.components || (tView.components = [])).push(previousOrParentNode.tNode.index);\n    }\n}\n/**\n * Stores index of directive and host element so it will be queued for binding refresh during CD.\n * @param {?} dirIndex\n * @param {?} hostVars\n * @return {?}\n */\nexport function queueHostBindingForCheck(dirIndex, hostVars) {\n    // Must subtract the header offset because hostBindings functions are generated with\n    // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    for (var i = 0; i < hostVars; i++) {\n        tView.blueprint.push(NO_CHANGE);\n        viewData.push(NO_CHANGE);\n    }\n    (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentNode.tNode.index - HEADER_OFFSET);\n}\n/**\n * Sets the context for a ChangeDetectorRef to the given instance.\n * @param {?} injector\n * @param {?} instance\n * @param {?} view\n * @return {?}\n */\nexport function initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        (/** @type {?} */ (injector.changeDetectorRef))._setComponentContext(view, instance);\n    }\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function isContentQueryHost(tNode) {\n    return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nexport function isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n * @return {?}\n */\nfunction instantiateDirectivesDirectly() {\n    ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n    /** @type {?} */\n    var tNode = previousOrParentNode.tNode;\n    /** @type {?} */\n    var count = tNode.flags & 4095 /* DirectiveCountMask */;\n    if (isContentQueryHost(tNode) && currentQueries) {\n        currentQueries = currentQueries.clone();\n    }\n    if (count > 0) {\n        /** @type {?} */\n        var start = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        var end = start + count;\n        /** @type {?} */\n        var tDirectives = /** @type {?} */ ((tView.directives));\n        for (var i = start; i < end; i++) {\n            /** @type {?} */\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/**\n * Caches local names and their matching directive indices for query and template lookups.\n * @param {?} tNode\n * @param {?} localRefs\n * @param {?} exportsMap\n * @return {?}\n */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        /** @type {?} */\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            /** @type {?} */\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n * @param {?} index\n * @param {?} def\n * @param {?} exportsMap\n * @return {?}\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if ((/** @type {?} */ (def)).template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n * @param {?} lNode\n * @param {?} localRefExtractor\n * @return {?}\n */\nfunction saveResolvedLocalsInData(lNode, localRefExtractor) {\n    /** @type {?} */\n    var localNames = lNode.tNode.localNames;\n    if (localNames) {\n        /** @type {?} */\n        var localIndex = lNode.tNode.index + 1;\n        for (var i = 0; i < localNames.length; i += 2) {\n            /** @type {?} */\n            var index = /** @type {?} */ (localNames[i + 1]);\n            /** @type {?} */\n            var value = index === -1 ? localRefExtractor(lNode) : /** @type {?} */ ((directives))[index];\n            viewData[localIndex++] = value;\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param {?} templateFn The template from which to get static data\n * @param {?} consts The number of nodes, local refs, and pipes in this view\n * @param {?} vars The number of bindings and pure function bindings in this view\n * @param {?} directives Directive defs that should be saved on TView\n * @param {?} pipes Pipe defs that should be saved on TView\n * @param {?} viewQuery\n * @return {?} TView\n */\nfunction getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return templateFn.ngPrivateData ||\n        (templateFn.ngPrivateData = /** @type {?} */ (createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery)));\n}\n/**\n * Creates a TView instance\n *\n * @param {?} viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param {?} templateFn Template function\n * @param {?} consts The number of nodes, local refs, and pipes in this template\n * @param {?} vars\n * @param {?} directives Registry of directives for this view\n * @param {?} pipes Registry of pipes for this view\n * @param {?} viewQuery\n * @return {?}\n */\nexport function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    /** @type {?} */\n    var bindingStartIndex = HEADER_OFFSET + consts;\n    /** @type {?} */\n    var initialViewLength = bindingStartIndex + vars;\n    /** @type {?} */\n    var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n    return blueprint[TVIEW] = {\n        id: viewIndex,\n        blueprint: blueprint,\n        template: templateFn,\n        viewQuery: viewQuery,\n        node: /** @type {?} */ ((null)),\n        data: HEADER_FILLER.slice(),\n        // Fill in to match HEADER_OFFSET in LViewData\n        childIndex: -1,\n        // Children set in addToViewTree(), if any\n        bindingStartIndex: bindingStartIndex,\n        hostBindingStartIndex: initialViewLength,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        contentQueries: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\n/**\n * @param {?} bindingStartIndex\n * @param {?} initialViewLength\n * @return {?}\n */\nfunction createViewBlueprint(bindingStartIndex, initialViewLength) {\n    /** @type {?} */\n    var blueprint = /** @type {?} */ (new Array(initialViewLength)\n        .fill(null, 0, bindingStartIndex)\n        .fill(NO_CHANGE, bindingStartIndex));\n    blueprint[CONTAINER_INDEX] = -1;\n    blueprint[BINDING_INDEX] = bindingStartIndex;\n    return blueprint;\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    /** @type {?} */\n    var isProc = isProceduralRenderer(renderer);\n    /** @type {?} */\n    var i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                /** @type {?} */\n                var namespaceURI = /** @type {?} */ (attrs[i + 1]);\n                /** @type {?} */\n                var attrName_1 = /** @type {?} */ (attrs[i + 2]);\n                /** @type {?} */\n                var attrVal = /** @type {?} */ (attrs[i + 3]);\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                i += 4;\n            }\n            else {\n                /** @type {?} */\n                var attrVal = attrs[i + 1];\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, /** @type {?} */ (attrName), /** @type {?} */ (attrVal)) :\n                    native.setAttribute(/** @type {?} */ (attrName), /** @type {?} */ (attrVal));\n                i += 2;\n            }\n        }\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nexport function createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nexport function locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    /** @type {?} */\n    var defaultRenderer = factory.createRenderer(null, null);\n    /** @type {?} */\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param {?} tag\n * @param {?} rNode Render host element.\n * @param {?} def ComponentDef\n *\n * @param {?=} sanitizer\n * @return {?} LElementNode created\n */\nexport function hostElement(tag, rNode, def, sanitizer) {\n    resetComponentState();\n    /** @type {?} */\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listenerFn The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\nexport function listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode &&\n        assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n    /** @type {?} */\n    var node = previousOrParentNode;\n    // add native event listener - applicable to elements only\n    if (previousOrParentNode.tNode.type === 3 /* Element */) {\n        /** @type {?} */\n        var native = /** @type {?} */ (node.native);\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            /** @type {?} */\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            /** @type {?} */\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            /** @type {?} */\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            /** @type {?} */\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, /** @type {?} */ ((cleanupInstances)).length - 1, useCapture);\n            }\n        }\n    }\n    /** @type {?} */\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    /** @type {?} */\n    var outputs = tNode.outputs;\n    /** @type {?} */\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n * @param {?} outputs\n * @param {?} listener\n * @return {?}\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (outputs[i]), /** @type {?} */ ((directives)));\n        /** @type {?} */\n        var subscription = /** @type {?} */ ((directives))[/** @type {?} */ (outputs[i])][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n * @param {?} view\n * @param {?} context\n * @param {?} cleanupFn\n * @return {?}\n */\nexport function storeCleanupWithContext(view, context, cleanupFn) {\n    if (!view)\n        view = viewData;\n    getCleanup(view).push(context);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, /** @type {?} */ ((view[CLEANUP])).length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n * @param {?} view\n * @param {?} cleanupFn\n * @return {?}\n */\nexport function storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(/** @type {?} */ ((view[CLEANUP])).length - 1, null);\n    }\n}\n/**\n * Mark the end of the element.\n * @return {?}\n */\nexport function elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ (getParentLNode(previousOrParentNode));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    elementDepthCount--;\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param {?} index\n * @param {?} name name The name of the attribute.\n * @param {?} value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nexport function elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        /** @type {?} */\n        var element_1 = loadElement(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                element_1.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            /** @type {?} */\n            var strValue = sanitizer == null ? stringify(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                element_1.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nexport function elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    /** @type {?} */\n    var node = /** @type {?} */ (loadElement(index));\n    /** @type {?} */\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    /** @type {?} */\n    var inputData = tNode && tNode.inputs;\n    /** @type {?} */\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? (/** @type {?} */ (sanitizer(value))) : value;\n        /** @type {?} */\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                (/** @type {?} */ (native))[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param {?} type The type of the node\n * @param {?} adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param {?} tagName The tag name of the node\n * @param {?} attrs The attributes defined on this node\n * @param {?} parent The parent of this node\n * @param {?} tViews Any TViews attached to this node\n * @return {?} the TNode object\n */\nexport function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: adjustedIndex,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null,\n        detached: null,\n        stylingTemplate: null,\n        projection: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (inputs[i]), /** @type {?} */ ((directives))); /** @type {?} */\n        ((directives))[/** @type {?} */ (inputs[i])][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param {?} tNodeFlags\n * @param {?} direction\n * @return {?} PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    /** @type {?} */\n    var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n    /** @type {?} */\n    var propStore = null;\n    if (count > 0) {\n        /** @type {?} */\n        var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        var end = start + count;\n        /** @type {?} */\n        var isInput = direction === 0 /* Input */;\n        /** @type {?} */\n        var defs = /** @type {?} */ ((tView.directives));\n        for (var i = start; i < end; i++) {\n            /** @type {?} */\n            var directiveDef = /** @type {?} */ (defs[i]);\n            /** @type {?} */\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    /** @type {?} */\n                    var internalName = propertyAliasMap[publicName];\n                    /** @type {?} */\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} stylingIndex\n * @param {?} value A value indicating if a given class should be added or removed.\n * @return {?}\n */\nexport function elementClassProp(index, stylingIndex, value) {\n    updateElementClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n}\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to apply all styling\n * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n * value is allocated for the styling details for its corresponding element (the element\n * index is the previous index value from this one).\n *\n * (Note this function calls `elementStylingApply` immediately when called.)\n *\n *\n * @template T\n * @param {?=} classDeclarations A key/value array of CSS classes that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n *   bindings. If a class binding changes its value to a falsy value then the matching initial\n *   class value that are passed in here will be applied to the element (if matched).\n * @param {?=} styleDeclarations A key/value array of CSS styles that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n *   bindings. If a style binding changes its value to null then the initial styling\n *   values that are passed in here will be applied to the element (if matched).\n * @param {?=} styleSanitizer An optional sanitizer function that will be used (if provided)\n *   to sanitize the any CSS property values that are applied to the element (during rendering).\n * @return {?}\n */\nexport function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n    /** @type {?} */\n    var tNode = previousOrParentNode.tNode;\n    if (!tNode.stylingTemplate) {\n        // initialize the styling template.\n        tNode.stylingTemplate =\n            createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n    }\n    if (styleDeclarations && styleDeclarations.length ||\n        classDeclarations && classDeclarations.length) {\n        elementStylingApply(tNode.index - HEADER_OFFSET);\n    }\n}\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param {?} index Index of the style allocation. See: `elementStyling`.\n * @return {?}\n */\nfunction getStylingContext(index) {\n    /** @type {?} */\n    var stylingContext = load(index);\n    if (!Array.isArray(stylingContext)) {\n        /** @type {?} */\n        var lElement = /** @type {?} */ ((stylingContext));\n        /** @type {?} */\n        var tNode = lElement.tNode;\n        ngDevMode &&\n            assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n        stylingContext = viewData[index + HEADER_OFFSET] =\n            allocStylingContext(lElement, /** @type {?} */ ((tNode.stylingTemplate)));\n    }\n    return stylingContext;\n}\n/**\n * Apply all styling values to the element which have been queued by any styling instructions.\n *\n * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n * have been issued against the element. This function will also determine if any styles have\n * changed and will then skip the operation if there is nothing new to render.\n *\n * Once called then all queued styles will be flushed.\n *\n * @template T\n * @param {?} index Index of the element's styling storage that will be rendered.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @return {?}\n */\nexport function elementStylingApply(index) {\n    renderElementStyles(getStylingContext(index), renderer);\n}\n/**\n * Queue a given style to be rendered on an Element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @template T\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} styleIndex Index of the style property on this element. (Monotonically increasing.)\n * @param {?} value New value to write (null to remove).\n * @param {?=} suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n * @return {?}\n */\nexport function elementStyleProp(index, styleIndex, value, suffix) {\n    /** @type {?} */\n    var valueToAdd = null;\n    if (value) {\n        if (suffix) {\n            // when a suffix is applied then it will bypass\n            // sanitization entirely (b/c a new string is created)\n            valueToAdd = stringify(value) + suffix;\n        }\n        else {\n            // sanitization happens by dealing with a String value\n            // this means that the string value will be passed through\n            // into the style rendering later (which is where the value\n            // will be sanitized before it is applied)\n            valueToAdd = /** @type {?} */ ((value));\n        }\n    }\n    updateElementStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n}\n/**\n * Queue a key/value map of styles to be rendered on an Element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n * If any styles are set to `null` then they will be removed from the element (unless the same\n * style properties have been assigned to the element during creation using `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @template T\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param {?=} styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n * @return {?}\n */\nexport function elementStylingMap(index, classes, styles) {\n    updateStylingMap(getStylingContext(index), classes, styles);\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array\n * @param {?=} value Value to write. This value will be stringified.\n * @return {?}\n */\nexport function text(index, value) {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    /** @type {?} */\n    var textNode = createTextNode(value, renderer);\n    /** @type {?} */\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, viewData);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nexport function textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n        /** @type {?} */\n        var existingNode = /** @type {?} */ ((loadElement(index)));\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify(value)) :\n            existingNode.native.textContent = stringify(value);\n    }\n}\n/**\n * Create a directive and their associated content queries.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @template T\n * @param {?} directiveDefIdx\n * @param {?} directive The directive instance.\n * @param {?} directiveDef DirectiveDef object which contains information about the template.\n * @return {?}\n */\nexport function directiveCreate(directiveDefIdx, directive, directiveDef) {\n    /** @type {?} */\n    var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    /** @type {?} */\n    var tNode = previousOrParentNode.tNode;\n    /** @type {?} */\n    var isComponent = (/** @type {?} */ (directiveDef)).template;\n    if (isComponent) {\n        addComponentLogic(directiveDefIdx, directive, /** @type {?} */ (directiveDef));\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n    }\n    if (directiveDef.contentQueries) {\n        directiveDef.contentQueries();\n    }\n    return instance;\n}\n/**\n * @template T\n * @param {?} directiveIndex\n * @param {?} instance\n * @param {?} def\n * @return {?}\n */\nfunction addComponentLogic(directiveIndex, instance, def) {\n    /** @type {?} */\n    var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    /** @type {?} */\n    var componentView = addToViewTree(viewData, /** @type {?} */ (previousOrParentNode.tNode.index), createLViewData(rendererFactory.createRenderer(/** @type {?} */ (previousOrParentNode.native), def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    (/** @type {?} */ (previousOrParentNode)).data = componentView;\n    (/** @type {?} */ (componentView))[HOST_NODE] = /** @type {?} */ (previousOrParentNode);\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck();\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n * @template T\n * @param {?} index\n * @param {?} directive\n * @param {?} directiveDef\n * @return {?}\n */\nexport function baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        viewData[DIRECTIVES] = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        /** @type {?} */\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        /** @type {?} */\n        var diPublic = /** @type {?} */ ((directiveDef)).diPublic;\n        if (diPublic)\n            diPublic(/** @type {?} */ ((directiveDef)));\n    }\n    if (/** @type {?} */ ((directiveDef)).attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes((/** @type {?} */ (previousOrParentNode)).native, /** @type {?} */ (((directiveDef)).attributes));\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} directiveIndex Index of the directive in directives array\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    /** @type {?} */\n    var initialInputData = /** @type {?} */ (tNode.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    /** @type {?} */\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    /** @type {?} */\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    /** @type {?} */\n    var attrs = /** @type {?} */ ((tNode.attrs));\n    /** @type {?} */\n    var i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        /** @type {?} */\n        var minifiedInputName = inputs[attrName];\n        /** @type {?} */\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            /** @type {?} */\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, /** @type {?} */ (attrValue));\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param {?} parentLNode the LNode in which the container's content will be rendered\n * @param {?} currentView The parent view of the LContainer\n * @param {?=} isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @return {?} LContainer\n */\nexport function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    /** @type {?} */\n    var renderParent = canInsertNativeNode(parentLNode, currentView) ? /** @type {?} */ (parentLNode) :\n        null;\n    if (renderParent && renderParent.tNode.type === 2 /* View */) {\n        renderParent = /** @type {?} */ ((getParentLNode(/** @type {?} */ (renderParent)))).data[RENDER_PARENT];\n    }\n    return [\n        isForViewContainerRef ? null : 0,\n        currentView,\n        null,\n        null,\n        // queries\n        [],\n        /** @type {?} */ (renderParent)\n    ];\n}\n/**\n * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param {?} index The index of the container in the data array\n * @param {?} templateFn Inline template\n * @param {?} consts The number of nodes, local refs, and pipes for this template\n * @param {?} vars The number of bindings for this template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @param {?=} localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n * @return {?}\n */\nexport function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n    /** @type {?} */\n    var node = containerInternal(index, tagName || null, attrs || null, localRefs || null);\n    if (firstTemplatePass) {\n        node.tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    createDirectivesAndLocals(node, localRefs, localRefExtractor);\n    currentQueries && (currentQueries = currentQueries.addNode(node));\n    queueLifecycleHooks(node.tNode.flags, tView);\n    isParent = false;\n}\n/**\n * Creates an LContainerNode for inline views, e.g.\n *\n * % if (showing) {\n *   <div></div>\n * % }\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nexport function container(index) {\n    /** @type {?} */\n    var node = containerInternal(index, null, null, null);\n    firstTemplatePass && (node.tNode.tViews = []);\n    isParent = false;\n}\n/**\n * @param {?} index\n * @param {?} tagName\n * @param {?} attrs\n * @param {?} localRefs\n * @return {?}\n */\nfunction containerInternal(index, tagName, attrs, localRefs) {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n    /** @type {?} */\n    var currentParent = isParent ? previousOrParentNode : /** @type {?} */ ((getParentLNode(previousOrParentNode)));\n    /** @type {?} */\n    var lContainer = createLContainer(currentParent, viewData);\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    /** @type {?} */\n    var comment = renderer.createComment(ngDevMode ? 'container' : '');\n    /** @type {?} */\n    var node = createLNode(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n    appendChild(getParentLNode(node), comment, viewData);\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n    if (currentQueries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = currentQueries.container();\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    return node;\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nexport function containerRefreshStart(index) {\n    previousOrParentNode = /** @type {?} */ (loadElement(index));\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    (/** @type {?} */ (previousOrParentNode)).data[ACTIVE_INDEX] = 0;\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(viewData, tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n * @return {?}\n */\nexport function containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((getParentLNode(previousOrParentNode)));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    /** @type {?} */\n    var container = /** @type {?} */ (previousOrParentNode);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    /** @type {?} */\n    var nextIndex = /** @type {?} */ ((container.data[ACTIVE_INDEX]));\n    // remove extra views at the end of the container\n    while (nextIndex < container.data[VIEWS].length) {\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n * @param {?} lViewData\n * @return {?}\n */\nfunction refreshDynamicEmbeddedViews(lViewData) {\n    for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n        // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n            /** @type {?} */\n            var container_1 = /** @type {?} */ (current);\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                /** @type {?} */\n                var lViewNode = container_1[VIEWS][i];\n                /** @type {?} */\n                var dynamicViewData = lViewNode.data;\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], /** @type {?} */ ((dynamicViewData[CONTEXT])), 2 /* Update */);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param {?} containerNode where to search for views\n * @param {?} startIdx starting index in the views array to search from\n * @param {?} viewBlockId exact view block id to look for\n * @return {?} index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    /** @type {?} */\n    var views = containerNode.data[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        /** @type {?} */\n        var viewAtPositionId = views[i].data[TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param {?} viewBlockId The ID of this view\n * @param {?} consts\n * @param {?} vars\n * @return {?} boolean Whether or not this view is in creation mode\n */\nexport function embeddedViewStart(viewBlockId, consts, vars) {\n    /** @type {?} */\n    var container = /** @type {?} */ ((isParent ? previousOrParentNode : getParentLNode(previousOrParentNode)));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    /** @type {?} */\n    var lContainer = container.data;\n    /** @type {?} */\n    var viewNode = scanForView(container, /** @type {?} */ ((lContainer[ACTIVE_INDEX])), viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        /** @type {?} */\n        var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer[QUERIES]) {\n            newView[QUERIES] = /** @type {?} */ ((lContainer[QUERIES])).createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    if (container) {\n        if (creationMode) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(container, viewNode, /** @type {?} */ ((lContainer[ACTIVE_INDEX])));\n        } /** @type {?} */\n        ((lContainer[ACTIVE_INDEX]))++;\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param {?} viewIndex The index of the TView in TNode.tViews\n * @param {?} consts The number of nodes, local refs, and pipes in this template\n * @param {?} vars The number of bindings and pure function bindings in this template\n * @param {?} parent The parent container in which to look for the view's static data\n * @return {?} TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    /** @type {?} */\n    var containerTViews = /** @type {?} */ ((/** @type {?} */ (((parent)).tNode)).tViews);\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/**\n * Marks the end of an embedded view.\n * @return {?}\n */\nexport function embeddedViewEnd() {\n    refreshDescendantViews();\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ (viewData[HOST_NODE]);\n    leaveView(/** @type {?} */ ((viewData[PARENT])));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @template T\n * @param {?} adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n * @return {?}\n */\nexport function componentRefresh(adjustedElementIndex) {\n    ngDevMode && assertDataInRange(adjustedElementIndex);\n    /** @type {?} */\n    var element = /** @type {?} */ (viewData[adjustedElementIndex]);\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode &&\n        assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n    /** @type {?} */\n    var hostView = /** @type {?} */ ((element.data));\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        detectChangesInternal(hostView, element, hostView[CONTEXT]);\n    }\n}\n/**\n * Returns a boolean for whether the view is attached\n * @param {?} view\n * @return {?}\n */\nexport function viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param {?=} selectors A collection of parsed CSS selectors\n * @param {?=} textSelectors\n * @return {?}\n */\nexport function projectionDef(selectors, textSelectors) {\n    /** @type {?} */\n    var componentNode = findComponentHost(viewData);\n    if (!componentNode.tNode.projection) {\n        /** @type {?} */\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        /** @type {?} */\n        var pData = componentNode.tNode.projection =\n            new Array(noOfNodeBuckets).fill(null);\n        /** @type {?} */\n        var tails = pData.slice();\n        /** @type {?} */\n        var componentChild = componentNode.tNode.child;\n        while (componentChild !== null) {\n            /** @type {?} */\n            var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, /** @type {?} */ ((textSelectors))) : 0;\n            /** @type {?} */\n            var nextNode = componentChild.next;\n            if (tails[bucketIndex]) {\n                /** @type {?} */ ((tails[bucketIndex])).next = componentChild;\n            }\n            else {\n                pData[bucketIndex] = componentChild;\n                componentChild.next = null;\n            }\n            tails[bucketIndex] = componentChild;\n            componentChild = nextNode;\n        }\n    }\n}\n/** *\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nvar projectionNodeStack = [];\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?=} selectorIndex\n * @param {?=} attrs\n * @return {?}\n */\nexport function projection(nodeIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    /** @type {?} */\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (node.tNode.projection === null)\n        node.tNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    isParent = false;\n    /** @type {?} */\n    var parent = getParentLNode(node);\n    if (canInsertNativeNode(parent, viewData)) {\n        /** @type {?} */\n        var componentNode = findComponentHost(viewData);\n        /** @type {?} */\n        var nodeToProject = (/** @type {?} */ (componentNode.tNode.projection))[selectorIndex];\n        /** @type {?} */\n        var projectedView = componentNode.view;\n        /** @type {?} */\n        var projectionNodeIndex = -1;\n        /** @type {?} */\n        var grandparent = void 0;\n        /** @type {?} */\n        var renderParent = parent.tNode.type === 2 /* View */ ?\n            (grandparent = /** @type {?} */ (getParentLNode(parent))) &&\n                /** @type {?} */ ((grandparent.data[RENDER_PARENT])) : /** @type {?} */ (parent);\n        /** @type {?} */\n        var parentView = viewData[HOST_NODE].view;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                /** @type {?} */\n                var currentComponentHost = findComponentHost(projectedView);\n                /** @type {?} */\n                var firstProjectedNode = (/** @type {?} */ (currentComponentHost.tNode.projection))[/** @type {?} */ (nodeToProject.projection)];\n                if (firstProjectedNode) {\n                    projectionNodeStack[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentHost.view;\n                    continue;\n                }\n            }\n            else {\n                /** @type {?} */\n                var lNode = projectedView[nodeToProject.index];\n                lNode.tNode.flags |= 8192 /* isProjected */;\n                appendProjectedNode(/** @type {?} */ (lNode), parent, viewData, renderParent, parentView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                /** @type {?} */\n                var lNode = projectionNodeStack[projectionNodeIndex--];\n                nodeToProject = lNode.tNode;\n                projectedView = lNode.view;\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n}\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} currentView The view where LViewData or LContainer should be added\n * @param {?} adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param {?} state The LViewData or LContainer to add to the view tree\n * @return {?} The state passed in\n */\nexport function addToViewTree(currentView, adjustedHostIndex, state) {\n    if (currentView[TAIL]) {\n        /** @type {?} */ ((currentView[TAIL]))[NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    currentView[TAIL] = state;\n    return state;\n}\n/**\n * If node is an OnPush component, marks its LViewData dirty.\n * @param {?} node\n * @return {?}\n */\nexport function markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n        node.data[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nexport function wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nexport function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/**\n * Marks current view and all ancestors dirty\n * @param {?} view\n * @return {?}\n */\nexport function markViewDirty(view) {\n    /** @type {?} */\n    var currentView = view;\n    while (currentView[PARENT] != null) {\n        currentView[FLAGS] |= 4 /* Dirty */;\n        currentView = /** @type {?} */ ((currentView[PARENT]));\n    }\n    currentView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n    scheduleTick(/** @type {?} */ (currentView[CONTEXT]));\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n * @template T\n * @param {?} rootContext\n * @return {?}\n */\nexport function scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        /** @type {?} */\n        var res_1 = void 0;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tickRootContext(rootContext); /** @type {?} */\n            ((res_1))(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n * @template T\n * @param {?} component\n * @return {?}\n */\nexport function tick(component) {\n    /** @type {?} */\n    var rootView = getRootView(component);\n    /** @type {?} */\n    var rootContext = /** @type {?} */ (rootView[CONTEXT]);\n    tickRootContext(rootContext);\n}\n/**\n * @param {?} rootContext\n * @return {?}\n */\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        /** @type {?} */\n        var rootComponent = rootContext.components[i];\n        /** @type {?} */\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param {?} component any component\n * @return {?}\n */\nexport function getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    /** @type {?} */\n    var lElementNode = _getComponentHostLElementNode(component);\n    /** @type {?} */\n    var lViewData = lElementNode.view;\n    while (lViewData[PARENT]) {\n        lViewData = /** @type {?} */ ((lViewData[PARENT]));\n    }\n    return lViewData;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {\\@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @template T\n * @param {?} component The component which the change detection should be performed on.\n * @return {?}\n */\nexport function detectChanges(component) {\n    /** @type {?} */\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode &&\n        assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n    detectChangesInternal(/** @type {?} */ (hostNode.data), hostNode, component);\n}\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param {?} lViewData The view which the change detection should be performed on.\n * @return {?}\n */\nexport function detectChangesInRootView(lViewData) {\n    tickRootContext(/** @type {?} */ (lViewData[CONTEXT]));\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n * @template T\n * @param {?} component\n * @return {?}\n */\nexport function checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param {?} lViewData The view which the change detection should be checked on.\n * @return {?}\n */\nexport function checkNoChangesInRootView(lViewData) {\n    checkNoChangesMode = true;\n    try {\n        detectChangesInRootView(lViewData);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/**\n * Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n * @template T\n * @param {?} hostView\n * @param {?} hostNode\n * @param {?} component\n * @return {?}\n */\nexport function detectChangesInternal(hostView, hostNode, component) {\n    /** @type {?} */\n    var oldView = enterView(hostView, hostNode);\n    /** @type {?} */\n    var hostTView = hostView[TVIEW];\n    /** @type {?} */\n    var templateFn = /** @type {?} */ ((hostTView.template));\n    /** @type {?} */\n    var viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView[FLAGS], component);\n        templateFn(getRenderFlags(hostView), component);\n        refreshDescendantViews();\n        updateViewQuery(viewQuery, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} flags\n * @param {?} component\n * @return {?}\n */\nfunction createViewQuery(viewQuery, flags, component) {\n    if (viewQuery && (flags & 1 /* CreationMode */)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} component\n * @return {?}\n */\nfunction updateViewQuery(viewQuery, component) {\n    if (viewQuery) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @template T\n * @param {?} component Component to mark as dirty.\n * @return {?}\n */\nexport function markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    /** @type {?} */\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** *\n * A special value which designates that a value has not changed.\n  @type {?} */\nexport var NO_CHANGE = /** @type {?} */ ({});\n/**\n * Creates a single value binding.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nexport function bind(value) {\n    return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n * @param {?} values\n * @return {?}\n */\nexport function interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    /** @type {?} */\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} v0 value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nexport function interpolation1(prefix, v0, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n    return different ? prefix + stringify(v0) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 2 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation2(prefix, v0, i0, v1, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n    viewData[BINDING_INDEX] += 2;\n    return different ? prefix + stringify(v0) + i0 + stringify(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 3 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n    viewData[BINDING_INDEX] += 3;\n    return different ? prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n    viewData[BINDING_INDEX] += 4;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n    different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n    viewData[BINDING_INDEX] += 5;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n    different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n    viewData[BINDING_INDEX] += 6;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n    different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n    viewData[BINDING_INDEX] += 7;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\nexport function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    /** @type {?} */\n    var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n    different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n    viewData[BINDING_INDEX] += 8;\n    return different ?\n        prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n            stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + i6 + stringify(v7) + suffix :\n        NO_CHANGE;\n}\n/**\n * Store a value in the `data` at a given `index`.\n * @template T\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nexport function store(index, value) {\n    /** @type {?} */\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    viewData[adjustedIndex] = value;\n}\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @template T\n * @param {?} index The index of the local ref in contextViewData.\n * @return {?}\n */\nexport function reference(index) {\n    return loadInternal(index, contextViewData);\n}\n/**\n * @param {?} nestingLevel\n * @param {?} currentView\n * @return {?}\n */\nfunction walkUpViews(nestingLevel, currentView) {\n    while (nestingLevel > 0) {\n        ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n        currentView = /** @type {?} */ ((currentView[DECLARATION_VIEW]));\n        nestingLevel--;\n    }\n    return currentView;\n}\n/**\n * Retrieves a value from the `directives` array.\n * @template T\n * @param {?} index\n * @return {?}\n */\nexport function loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, /** @type {?} */ ((directives)));\n    return /** @type {?} */ ((directives))[index];\n}\n/**\n * @template T\n * @param {?} queryListIdx\n * @return {?}\n */\nexport function loadQueryList(queryListIdx) {\n    ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n    ngDevMode && assertDataInRange(queryListIdx, /** @type {?} */ ((viewData[CONTENT_QUERIES])));\n    return /** @type {?} */ ((viewData[CONTENT_QUERIES]))[queryListIdx];\n}\n/**\n * Retrieves a value from current `viewData`.\n * @template T\n * @param {?} index\n * @return {?}\n */\nexport function load(index) {\n    return loadInternal(index, viewData);\n}\n/**\n * @param {?} index\n * @return {?}\n */\nexport function loadElement(index) {\n    return loadElementInternal(index, viewData);\n}\n/**\n * Gets the current binding value.\n * @param {?} bindingIndex\n * @return {?}\n */\nexport function getBinding(bindingIndex) {\n    ngDevMode && assertDataInRange(viewData[bindingIndex]);\n    ngDevMode &&\n        assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return viewData[bindingIndex];\n}\n/**\n * Updates binding if changed, then returns whether it was updated.\n * @param {?} bindingIndex\n * @param {?} value\n * @return {?}\n */\nexport function bindingUpdated(bindingIndex, value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n    if (viewData[bindingIndex] === NO_CHANGE) {\n        viewData[bindingIndex] = value;\n    }\n    else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n        viewData[bindingIndex] = value;\n    }\n    else {\n        return false;\n    }\n    return true;\n}\n/**\n * Updates binding and returns the value.\n * @param {?} bindingIndex\n * @param {?} value\n * @return {?}\n */\nexport function updateBinding(bindingIndex, value) {\n    return viewData[bindingIndex] = value;\n}\n/**\n * Updates 2 bindings if changed, then returns whether either was updated.\n * @param {?} bindingIndex\n * @param {?} exp1\n * @param {?} exp2\n * @return {?}\n */\nexport function bindingUpdated2(bindingIndex, exp1, exp2) {\n    /** @type {?} */\n    var different = bindingUpdated(bindingIndex, exp1);\n    return bindingUpdated(bindingIndex + 1, exp2) || different;\n}\n/**\n * Updates 3 bindings if changed, then returns whether any was updated.\n * @param {?} bindingIndex\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @return {?}\n */\nexport function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n    /** @type {?} */\n    var different = bindingUpdated2(bindingIndex, exp1, exp2);\n    return bindingUpdated(bindingIndex + 2, exp3) || different;\n}\n/**\n * Updates 4 bindings if changed, then returns whether any was updated.\n * @param {?} bindingIndex\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @return {?}\n */\nexport function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n    /** @type {?} */\n    var different = bindingUpdated2(bindingIndex, exp1, exp2);\n    return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n}\n/**\n * @return {?}\n */\nexport function getTView() {\n    return tView;\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n * @template Q\n * @param {?} queryList\n * @return {?}\n */\nexport function registerContentQuery(queryList) {\n    /** @type {?} */\n    var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n    if (firstTemplatePass) {\n        /** @type {?} */\n        var currentDirectiveIndex = /** @type {?} */ ((directives)).length - 1;\n        /** @type {?} */\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        /** @type {?} */\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n        if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n        }\n    }\n}\n/**\n * @return {?}\n */\nexport function assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\n/**\n * @return {?}\n */\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertDataInRangeInternal(index, arr || viewData);\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nexport function _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    /** @type {?} */\n    var lElementNode = /** @type {?} */ ((/** @type {?} */ (component))[NG_HOST_SYMBOL]);\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\n/** @type {?} */\nexport var CLEAN_PROMISE = _CLEAN_PROMISE;\n//# sourceMappingURL=instructions.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertComponentType, assertDefined } from './assert';\nimport { queueInitHooks, queueLifecycleHooks } from './hooks';\nimport { CLEAN_PROMISE, _getComponentHostLElementNode, baseDirectiveCreate, createLViewData, createTView, detectChangesInternal, enterView, executeInitAndContentHooks, getRootView, hostElement, initChangeDetectorIfExisting, leaveView, locateHostElement, setHostBindings, queueHostBindingForCheck, } from './instructions';\nimport { domRendererFactory3 } from './interfaces/renderer';\nimport { INJECTOR, CONTEXT, TVIEW } from './interfaces/view';\nimport { stringify } from './util';\n/**\n * Options that control how the component should be bootstrapped.\n * @record\n */\nexport function CreateComponentOptions() { }\n/**\n * Which renderer factory to use.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.rendererFactory;\n/**\n * A custom sanitizer instance\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.sanitizer;\n/**\n * Host element on which the component will be bootstrapped. If not specified,\n * the component definition's `tag` is used to query the existing DOM for the\n * element to bootstrap.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.host;\n/**\n * Module injector for the component. If unspecified, the injector will be NULL_INJECTOR.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.injector;\n/**\n * List of features to be applied to the created component. Features are simply\n * functions that decorate a component with a certain behavior.\n *\n * Typically, the features in this list are features that cannot be added to the\n * other features list in the component definition because they rely on other factors.\n *\n * Example: `RootLifecycleHooks` is a function that adds lifecycle hook capabilities\n * to root components in a tree-shakable way. It cannot be added to the component\n * features list because there's no way of knowing when the component will be used as\n * a root component.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.hostFeatures;\n/**\n * A function which is used to schedule change detection work in the future.\n *\n * When marking components as dirty, it is necessary to schedule the work of\n * change detection in the future. This is done to coalesce multiple\n * {\\@link markDirty} calls into a single changed detection processing.\n *\n * The default value of the scheduler is the `requestAnimationFrame` function.\n *\n * It is also useful to override this function for testing purposes.\n * @type {?|undefined}\n */\nCreateComponentOptions.prototype.scheduler;\n/** @type {?} */\nexport var NULL_INJECTOR = {\n    get: function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringify(token));\n    }\n};\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {\\@link ViewContainer#createComponent}.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?=} opts\n * @return {?}\n */\nexport function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    /** @type {?} */\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    /** @type {?} */\n    var sanitizer = opts.sanitizer || null;\n    /** @type {?} */\n    var componentDef = /** @type {?} */ ((/** @type {?} */ (componentType)).ngComponentDef);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    /** @type {?} */\n    var componentTag = /** @type {?} */ (((/** @type {?} */ ((componentDef.selectors))[0]))[0]);\n    /** @type {?} */\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    /** @type {?} */\n    var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    /** @type {?} */\n    var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView[INJECTOR] = opts.injector || null;\n    /** @type {?} */\n    var oldView = enterView(rootView, /** @type {?} */ ((null)));\n    /** @type {?} */\n    var elementNode;\n    /** @type {?} */\n    var component;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        component = baseDirectiveCreate(0, /** @type {?} */ (componentDef.factory()), componentDef);\n        if (componentDef.hostBindings) {\n            queueHostBindingForCheck(0, componentDef.hostVars);\n        }\n        rootContext.components.push(component);\n        (/** @type {?} */ (elementNode.data))[CONTEXT] = component;\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, /** @type {?} */ ((elementNode.data)));\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(rootView[TVIEW].hostBindings);\n        detectChangesInternal(/** @type {?} */ (elementNode.data), elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * @param {?} scheduler\n * @return {?}\n */\nexport function createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n * @param {?} component\n * @param {?} def\n * @return {?}\n */\nexport function LifecycleHooksFeature(component, def) {\n    /** @type {?} */\n    var elementNode = _getComponentHostLElementNode(component);\n    /** @type {?} */\n    var tView = elementNode.view[TVIEW];\n    queueInitHooks(0, def.onInit, def.doCheck, tView);\n    queueLifecycleHooks(elementNode.tNode.flags, tView);\n}\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param {?} component any component\n * @return {?}\n */\nfunction getRootContext(component) {\n    /** @type {?} */\n    var rootContext = /** @type {?} */ (getRootView(component)[CONTEXT]);\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @template T\n * @param {?} component Component for which the host element should be retrieved.\n * @return {?}\n */\nexport function getHostElement(component) {\n    return /** @type {?} */ (_getComponentHostLElementNode(component).native);\n}\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param {?} component The component to return the content text for.\n * @return {?}\n */\nexport function getRenderedText(component) {\n    /** @type {?} */\n    var hostElement = getHostElement(component);\n    return hostElement.textContent || '';\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param {?} component Component to wait upon\n * @return {?} Promise which resolves when the component is rendered.\n */\nexport function whenRendered(component) {\n    return getRootContext(component).clean;\n}\n//# sourceMappingURL=component.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @param {?} target\n * @return {?}\n */\nexport function getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param {?} target The target to set properties on\n * @param {?} source The source of the property keys and values to set\n * @return {?}\n */\nexport function fillProperties(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n//# sourceMappingURL=property.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * \\@usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n * @abstract\n */\nvar /**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * \\@usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n * @abstract\n */\nChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * \\@usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n * @abstract\n */\nexport { ChangeDetectorRef };\nif (false) {\n    /**\n     * When a view uses the {\\@link ChangeDetectionStrategy#OnPush OnPush} (checkOnce)\n     * change detection strategy, explicitly marks the view as changed so that\n     * it can be checked again.\n     *\n     * Components are normally marked as dirty (in need of rerendering) when inputs\n     * have changed or events have fired in the view. Call this method to ensure that\n     * a component is checked even if these triggers have not occured.\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.markForCheck = function () { };\n    /**\n     * Detaches this view from the change-detection tree.\n     * A detached view is  not checked until it is reattached.\n     * Use in combination with `detectChanges()` to implement local change detection checks.\n     *\n     * Detached views are not checked during change detection runs until they are\n     * re-attached, even if they are marked as dirty.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detach = function () { };\n    /**\n     * Checks this view and its children. Use in combination with {\\@link ChangeDetectorRef#detach\n     * detach}\n     * to implement local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.detectChanges = function () { };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * Use in development mode to verify that running change detection doesn't introduce\n     * other changes.\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.checkNoChanges = function () { };\n    /**\n     * Re-attaches the previously detached view to the change detection tree.\n     * Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @abstract\n     * @return {?}\n     */\n    ChangeDetectorRef.prototype.reattach = function () { };\n}\n//# sourceMappingURL=change_detector_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n * @template T\n */\nvar /**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n * @template T\n */\nElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n * @template T\n */\nexport { ElementRef };\nif (false) {\n    /**\n     * The underlying native element or `null` if direct access to native elements is not supported\n     * (e.g. when the application runs in a web worker).\n     *\n     * <div class=\"callout is-critical\">\n     *   <header>Use with caution</header>\n     *   <p>\n     *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n     *    data-binding provided by Angular instead. Alternatively you can take a look at {\\@link\n     * Renderer2}\n     *    which provides API that can safely be used even when direct access to native elements is not\n     *    supported.\n     *   </p>\n     *   <p>\n     *    Relying on direct DOM access creates tight coupling between your application and rendering\n     *    layers which will make it impossible to separate the two and deploy your application into a\n     *    web worker.\n     *   </p>\n     * </div>\n     *\n     * @type {?}\n     */\n    ElementRef.prototype.nativeElement;\n}\n//# sourceMappingURL=element_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '../di/injection_token';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar /**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nRenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport { RenderComponentType };\nif (false) {\n    /** @type {?} */\n    RenderComponentType.prototype.id;\n    /** @type {?} */\n    RenderComponentType.prototype.templateUrl;\n    /** @type {?} */\n    RenderComponentType.prototype.slotCount;\n    /** @type {?} */\n    RenderComponentType.prototype.encapsulation;\n    /** @type {?} */\n    RenderComponentType.prototype.styles;\n    /** @type {?} */\n    RenderComponentType.prototype.animations;\n}\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar /**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nRenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport { RenderDebugInfo };\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    RenderDebugInfo.prototype.source = function () { };\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nexport function DirectRenderer() { }\n/** @type {?} */\nDirectRenderer.prototype.remove;\n/** @type {?} */\nDirectRenderer.prototype.appendChild;\n/** @type {?} */\nDirectRenderer.prototype.insertBefore;\n/** @type {?} */\nDirectRenderer.prototype.nextSibling;\n/** @type {?} */\nDirectRenderer.prototype.parentElement;\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar /**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nRenderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport { Renderer };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} selectorOrNode\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} name\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @return {?}\n     */\n    Renderer.prototype.createViewRoot = function (hostElement) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} value\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n    /**\n     * @abstract\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n    /**\n     * @abstract\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    Renderer.prototype.detachView = function (viewRootNodes) { };\n    /**\n     * @abstract\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listen = function (renderElement, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    Renderer.prototype.listenGlobal = function (target, name, callback) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} attributeName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n    /**\n     * Used only in debug mode to serialize property changes to dom nodes as attributes.\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n    /**\n     * @abstract\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?=} args\n     * @return {?}\n     */\n    Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n    /**\n     * @abstract\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    Renderer.prototype.setText = function (renderNode, text) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n}\n/** @type {?} */\nexport var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar /**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nRootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport { RootRenderer };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} componentType\n     * @return {?}\n     */\n    RootRenderer.prototype.renderComponent = function (componentType) { };\n}\n/**\n * Used by `RendererFactory2` to associate custom rendering data and styles\n * with a rendering implementation.\n * \\@experimental\n * @record\n */\nexport function RendererType2() { }\n/**\n * A unique identifying string for the new renderer, used when creating\n * unique styles for encapsulation.\n * @type {?}\n */\nRendererType2.prototype.id;\n/**\n * The view encapsulation type, which determines how styles are applied to\n * DOM elements. One of\n * - `Emulated` (default): Emulate native scoping of styles.\n * - `Native`: Use the native encapsulation mechanism of the renderer.\n * - `ShadowDom`: Use modern [Shadow\n * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n * create a ShadowRoot for component's host element.\n * - `None`: Do not provide any template or style encapsulation.\n * @type {?}\n */\nRendererType2.prototype.encapsulation;\n/**\n * Defines CSS styles to be stored on a renderer instance.\n * @type {?}\n */\nRendererType2.prototype.styles;\n/**\n * Defines arbitrary developer-defined data to be stored on a renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @type {?}\n */\nRendererType2.prototype.data;\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@experimental\n * @abstract\n */\nvar /**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@experimental\n * @abstract\n */\nRendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@experimental\n * @abstract\n */\nexport { RendererFactory2 };\nif (false) {\n    /**\n     * Creates and initializes a custom renderer for a host DOM element.\n     * @abstract\n     * @param {?} hostElement The element to render.\n     * @param {?} type The base class to implement.\n     * @return {?} The new custom renderer instance.\n     */\n    RendererFactory2.prototype.createRenderer = function (hostElement, type) { };\n    /**\n     * A callback invoked when rendering has begun.\n     * @abstract\n     * @return {?}\n     */\n    RendererFactory2.prototype.begin = function () { };\n    /**\n     * A callback invoked when rendering has completed.\n     * @abstract\n     * @return {?}\n     */\n    RendererFactory2.prototype.end = function () { };\n    /**\n     * Use with animations test-only mode. Notifies the test when rendering has completed.\n     * @abstract\n     * @return {?} The asynchronous result of the developer-defined function.\n     */\n    RendererFactory2.prototype.whenRenderingDone = function () { };\n}\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    /**\n       * Marks a style as important.\n       */\n    Important: 1,\n    /**\n       * Marks a style as using dash case naming (this-is-dash-case).\n       */\n    DashCase: 2,\n};\nexport { RendererStyleFlags2 };\nRendererStyleFlags2[RendererStyleFlags2.Important] = 'Important';\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = 'DashCase';\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * \\@experimental\n * @abstract\n */\nvar /**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * \\@experimental\n * @abstract\n */\nRenderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * \\@experimental\n * @abstract\n */\nexport { Renderer2 };\nif (false) {\n    /**\n     * If null or undefined, the view engine won't call it.\n     * This is used as a performance optimization for production mode.\n     * @type {?}\n     */\n    Renderer2.prototype.destroyNode;\n    /**\n     * Use to store arbitrary developer-defined data on a renderer instance,\n     * as an object containing key-value pairs.\n     * This is useful for renderers that delegate to other renderers.\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.data = function () { };\n    /**\n     * Implement this callback to destroy the renderer or the host element.\n     * @abstract\n     * @return {?}\n     */\n    Renderer2.prototype.destroy = function () { };\n    /**\n     * Implement this callback to create an instance of the host element.\n     * @abstract\n     * @param {?} name An identifying name for the new element, unique within the namespace.\n     * @param {?=} namespace The namespace for the new element.\n     * @return {?} The new element.\n     */\n    Renderer2.prototype.createElement = function (name, namespace) { };\n    /**\n     * Implement this callback to add a comment to the DOM of the host element.\n     * @abstract\n     * @param {?} value The comment text.\n     * @return {?} The modified element.\n     */\n    Renderer2.prototype.createComment = function (value) { };\n    /**\n     * Implement this callback to add text to the DOM of the host element.\n     * @abstract\n     * @param {?} value The text string.\n     * @return {?} The modified element.\n     */\n    Renderer2.prototype.createText = function (value) { };\n    /**\n     * Appends a child to a given parent node in the host element DOM.\n     * @abstract\n     * @param {?} parent The parent node.\n     * @param {?} newChild The new child node.\n     * @return {?}\n     */\n    Renderer2.prototype.appendChild = function (parent, newChild) { };\n    /**\n     * Implement this callback to insert a child node at a given position in a parent node\n     * in the host element DOM.\n     * @abstract\n     * @param {?} parent The parent node.\n     * @param {?} newChild The new child nodes.\n     * @param {?} refChild The existing child node that should precede the new node.\n     * @return {?}\n     */\n    Renderer2.prototype.insertBefore = function (parent, newChild, refChild) { };\n    /**\n     * Implement this callback to remove a child node from the host element's DOM.\n     * @abstract\n     * @param {?} parent The parent node.\n     * @param {?} oldChild The child node to remove.\n     * @return {?}\n     */\n    Renderer2.prototype.removeChild = function (parent, oldChild) { };\n    /**\n     * Implement this callback to prepare an element to be bootstrapped\n     * as a root element, and return the element instance.\n     * @abstract\n     * @param {?} selectorOrNode The DOM element.\n     * @param {?=} preserveContent Whether the contents of the root element\n     * should be preserved, or cleared upon bootstrap (default behavior).\n     * Use with `ViewEncapsulation.ShadowDom` to allow simple native\n     * content projection via `<slot>` elements.\n     * @return {?} The root element.\n     */\n    Renderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) { };\n    /**\n     * Implement this callback to get the parent of a given node\n     * in the host element's DOM.\n     * @abstract\n     * @param {?} node The child node to query.\n     * @return {?} The parent node, or null if there is no parent.\n     * For WebWorkers, always returns true.\n     * This is because the check is synchronous,\n     * and the caller can't rely on checking for null.\n     */\n    Renderer2.prototype.parentNode = function (node) { };\n    /**\n     * Implement this callback to get the next sibling node of a given node\n     * in the host element's DOM.\n     * @abstract\n     * @param {?} node\n     * @return {?} The sibling node, or null if there is no sibling.\n     * For WebWorkers, always returns a value.\n     * This is because the check is synchronous,\n     * and the caller can't rely on checking for null.\n     */\n    Renderer2.prototype.nextSibling = function (node) { };\n    /**\n     * Implement this callback to set an attribute value for an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The attribute name.\n     * @param {?} value The new value.\n     * @param {?=} namespace The namespace.\n     * @return {?}\n     */\n    Renderer2.prototype.setAttribute = function (el, name, value, namespace) { };\n    /**\n     * Implement this callback to remove an attribute from an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The attribute name.\n     * @param {?=} namespace The namespace.\n     * @return {?}\n     */\n    Renderer2.prototype.removeAttribute = function (el, name, namespace) { };\n    /**\n     * Implement this callback to add a class to an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The class name.\n     * @return {?}\n     */\n    Renderer2.prototype.addClass = function (el, name) { };\n    /**\n     * Implement this callback to remove a class from an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The class name.\n     * @return {?}\n     */\n    Renderer2.prototype.removeClass = function (el, name) { };\n    /**\n     * Implement this callback to set a CSS style for an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} style The name of the style.\n     * @param {?} value The new value.\n     * @param {?=} flags Flags for style variations. No flags are set by default.\n     * @return {?}\n     */\n    Renderer2.prototype.setStyle = function (el, style, value, flags) { };\n    /**\n     * Implement this callback to remove the value from a CSS style for an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} style The name of the style.\n     * @param {?=} flags Flags for style variations to remove, if set. ???\n     * @return {?}\n     */\n    Renderer2.prototype.removeStyle = function (el, style, flags) { };\n    /**\n     * Implement this callback to set the value of a property of an element in the DOM.\n     * @abstract\n     * @param {?} el The element.\n     * @param {?} name The property name.\n     * @param {?} value The new value.\n     * @return {?}\n     */\n    Renderer2.prototype.setProperty = function (el, name, value) { };\n    /**\n     * Implement this callback to set the value of a node in the host element.\n     * @abstract\n     * @param {?} node The node.\n     * @param {?} value The new value.\n     * @return {?}\n     */\n    Renderer2.prototype.setValue = function (node, value) { };\n    /**\n     * Implement this callback to start an event listener.\n     * @abstract\n     * @param {?} target The context in which to listen for events. Can be\n     * the entire window or document, the body of the document, or a specific\n     * DOM element.\n     * @param {?} eventName The event to listen for.\n     * @param {?} callback A handler function to invoke when the event occurs.\n     * @return {?} An \"unlisten\" function for disposing of this handler.\n     */\n    Renderer2.prototype.listen = function (target, eventName, callback) { };\n}\n//# sourceMappingURL=api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { stringify } from '../util';\nimport { ComponentFactory } from './component_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component) {\n    /** @type {?} */\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\n/** @type {?} */\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error) {\n    return (/** @type {?} */ (error))[ERROR_COMPONENT];\n}\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nexport { ComponentFactoryResolver };\nif (false) {\n    /** @type {?} */\n    ComponentFactoryResolver.NULL;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n}\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            /** @type {?} */\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        /** @type {?} */\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nexport { CodegenComponentFactoryResolver };\nif (false) {\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._factories;\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._parent;\n    /** @type {?} */\n    CodegenComponentFactoryResolver.prototype._ngModule;\n}\n/**\n * @template C\n */\nvar /**\n * @template C\n */\nComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n/**\n * @template C\n */\nexport { ComponentFactoryBoundToModule };\nif (false) {\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.selector;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.componentType;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.ngContentSelectors;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.inputs;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.outputs;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.factory;\n    /** @type {?} */\n    ComponentFactoryBoundToModule.prototype.ngModule;\n}\n//# sourceMappingURL=component_factory_resolver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { checkNoChanges, checkNoChangesInRootView, detectChanges, detectChangesInRootView, getRendererFactory, markViewDirty, storeCleanupFn, viewAttached } from './instructions';\nimport { FLAGS } from './interfaces/view';\nimport { destroyLView } from './node_manipulation';\n/**\n * @record\n */\nexport function viewEngine_ChangeDetectorRef_interface() { }\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nViewRef = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this._appRef = null;\n        this._viewContainerRef = null;\n        /**\n         * \\@internal\n         */\n        this._lViewNode = null;\n        this.context = /** @type {?} */ ((context));\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} view\n     * @param {?} context\n     * @return {?}\n     */\n    ViewRef.prototype._setComponentContext = /**\n     * \\@internal\n     * @param {?} view\n     * @param {?} context\n     * @return {?}\n     */\n    function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._viewContainerRef && viewAttached(this._view)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._view);\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { storeCleanupFn(this._view, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {\\@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     * @return {?}\n     */\n    ViewRef.prototype.markForCheck = /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {\\@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     * @return {?}\n     */\n    function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {\\@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @return {?}\n     */\n    ViewRef.prototype.detach = /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {\\@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @return {?}\n     */\n    function () { this._view[FLAGS] &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {\\@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     * @return {?}\n     */\n    ViewRef.prototype.reattach = /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {\\@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     * @return {?}\n     */\n    function () { this._view[FLAGS] |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach detach} for more information.\n     * @return {?}\n     */\n    ViewRef.prototype.detectChanges = /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach detach} for more information.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var rendererFactory = getRendererFactory();\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        detectChanges(this.context);\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n    };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     * @return {?}\n     */\n    ViewRef.prototype.checkNoChanges = /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     * @return {?}\n     */\n    function () { checkNoChanges(this.context); };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) { this._viewContainerRef = vcRef; };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () { this._appRef = null; };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) { this._appRef = appRef; };\n    return ViewRef;\n}());\n/**\n * @template T\n */\nexport { ViewRef };\nif (false) {\n    /** @type {?} */\n    ViewRef.prototype._appRef;\n    /** @type {?} */\n    ViewRef.prototype._viewContainerRef;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewRef.prototype._lViewNode;\n    /** @type {?} */\n    ViewRef.prototype.context;\n    /** @type {?} */\n    ViewRef.prototype.rootNodes;\n    /** @type {?} */\n    ViewRef.prototype._view;\n}\n/**\n * \\@internal\n * @template T\n */\nvar /**\n * \\@internal\n * @template T\n */\nRootViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(RootViewRef, _super);\n    function RootViewRef(_view) {\n        var _this = _super.call(this, _view, null) || this;\n        _this._view = _view;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RootViewRef.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () { detectChangesInRootView(this._view); };\n    /**\n     * @return {?}\n     */\n    RootViewRef.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { checkNoChangesInRootView(this._view); };\n    return RootViewRef;\n}(ViewRef));\n/**\n * \\@internal\n * @template T\n */\nexport { RootViewRef };\nif (false) {\n    /** @type {?} */\n    RootViewRef.prototype._view;\n}\n//# sourceMappingURL=view_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { InjectionToken } from '../di/injection_token';\nimport { inject } from '../di/injector';\nimport { ComponentFactory as viewEngine_ComponentFactory, ComponentRef as viewEngine_ComponentRef } from '../linker/component_factory';\nimport { ComponentFactoryResolver as viewEngine_ComponentFactoryResolver } from '../linker/component_factory_resolver';\nimport { ElementRef as viewEngine_ElementRef } from '../linker/element_ref';\nimport { RendererFactory2 } from '../render/api';\nimport { assertComponentType, assertDefined } from './assert';\nimport { LifecycleHooksFeature, createRootContext } from './component';\nimport { adjustBlueprintForNewNode, baseDirectiveCreate, createLNode, createLViewData, createTView, elementCreate, enterView, hostElement, initChangeDetectorIfExisting, locateHostElement, queueHostBindingForCheck, renderEmbeddedTemplate, setHostBindings } from './instructions';\nimport { domRendererFactory3 } from './interfaces/renderer';\nimport { CONTEXT, FLAGS, INJECTOR, TVIEW } from './interfaces/view';\nimport { RootViewRef } from './view_ref';\nvar ComponentFactoryResolver = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactoryResolver, _super);\n    function ComponentFactoryResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    ComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        ngDevMode && assertComponentType(component);\n        /** @type {?} */\n        var componentDef = (/** @type {?} */ (component)).ngComponentDef;\n        return new ComponentFactory(componentDef);\n    };\n    return ComponentFactoryResolver;\n}(viewEngine_ComponentFactoryResolver));\nexport { ComponentFactoryResolver };\n/**\n * @param {?} map\n * @return {?}\n */\nfunction toRefArray(map) {\n    /** @type {?} */\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            /** @type {?} */\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/** *\n * Default {\\@link RootContext} for all components rendered with {\\@link renderComponent}.\n  @type {?} */\nexport var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/** *\n * A change detection scheduler token for {\\@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {\\@link ROOT_CONTEXT} token.\n  @type {?} */\nexport var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n    providedIn: 'root',\n    factory: function () {\n        /** @type {?} */\n        var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n        return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n    },\n});\n/** *\n * A function used to wrap the `RendererFactory2`.\n * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n  @type {?} */\nexport var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n/**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nvar /**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nComponentFactory = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactory, _super);\n    function ComponentFactory(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = /** @type {?} */ (componentDef.selectors[0][0]);\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        /** @type {?} */\n        var isInternalRootView = rootSelectorOrNode === undefined;\n        /** @type {?} */\n        var rendererFactory;\n        if (ngModule) {\n            /** @type {?} */\n            var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n            rendererFactory = /** @type {?} */ (wrapper(ngModule.injector.get(RendererFactory2)));\n        }\n        else {\n            rendererFactory = domRendererFactory3;\n        }\n        /** @type {?} */\n        var hostNode = isInternalRootView ?\n            elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n            locateHostElement(rendererFactory, rootSelectorOrNode);\n        /** @type {?} */\n        var componentTag = /** @type {?} */ (((/** @type {?} */ ((this.componentDef.selectors))[0]))[0]);\n        /** @type {?} */\n        var rootContext = ngModule && !isInternalRootView ?\n            ngModule.injector.get(ROOT_CONTEXT) :\n            createRootContext(requestAnimationFrame.bind(window));\n        /** @type {?} */\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR] = ngModule && ngModule.injector || null;\n        /** @type {?} */\n        var oldView = enterView(rootView, /** @type {?} */ ((null)));\n        /** @type {?} */\n        var component;\n        /** @type {?} */\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef);\n            if (this.componentDef.hostBindings) {\n                queueHostBindingForCheck(0, this.componentDef.hostVars);\n            }\n            rootContext.components.push(component);\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, /** @type {?} */ ((elementNode.data)));\n            (/** @type {?} */ (elementNode.data))[CONTEXT] = component;\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            LifecycleHooksFeature(component, this.componentDef);\n            setHostBindings(rootView[TVIEW].hostBindings);\n            // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n            // projection instruction. This is needed to support the reprojection of these nodes.\n            if (projectableNodes) {\n                /** @type {?} */\n                var index = 0;\n                /** @type {?} */\n                var projection = elementNode.tNode.projection = [];\n                for (var i = 0; i < projectableNodes.length; i++) {\n                    /** @type {?} */\n                    var nodeList = projectableNodes[i];\n                    /** @type {?} */\n                    var firstTNode = null;\n                    /** @type {?} */\n                    var previousTNode = null;\n                    for (var j = 0; j < nodeList.length; j++) {\n                        adjustBlueprintForNewNode(rootView);\n                        /** @type {?} */\n                        var lNode = createLNode(++index, 3 /* Element */, /** @type {?} */ (nodeList[j]), null, null);\n                        if (previousTNode) {\n                            previousTNode.next = lNode.tNode;\n                        }\n                        else {\n                            firstTNode = lNode.tNode;\n                        }\n                        previousTNode = lNode.tNode;\n                    }\n                    projection.push(/** @type {?} */ ((firstTNode)));\n                }\n            }\n            // Execute the template in creation mode only, and then turn off the CreationMode flag\n            renderEmbeddedTemplate(elementNode, /** @type {?} */ ((elementNode.data))[TVIEW], component, 1 /* Create */); /** @type {?} */\n            ((elementNode.data))[FLAGS] &= ~1 /* CreationMode */;\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        /** @type {?} */\n        var componentRef = new ComponentRef(this.componentType, component, rootView, injector, /** @type {?} */ ((hostNode)));\n        if (isInternalRootView) {\n            /** @type {?} */ ((\n            // The host element of the internal root view is attached to the component's host view node\n            componentRef.hostView._lViewNode)).tNode.child = elementNode.tNode;\n        }\n        return componentRef;\n    };\n    return ComponentFactory;\n}(viewEngine_ComponentFactory));\n/**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nexport { ComponentFactory };\nif (false) {\n    /** @type {?} */\n    ComponentFactory.prototype.selector;\n    /** @type {?} */\n    ComponentFactory.prototype.componentType;\n    /** @type {?} */\n    ComponentFactory.prototype.ngContentSelectors;\n    /** @type {?} */\n    ComponentFactory.prototype.componentDef;\n}\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nvar /**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nComponentRef = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentRef, _super);\n    function ComponentRef(componentType, instance, rootView, injector, hostNode) {\n        var _this = _super.call(this) || this;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n        _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n        _this.injector = injector;\n        _this.location = new viewEngine_ElementRef(hostNode);\n        _this.componentType = componentType;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ComponentRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    };\n    return ComponentRef;\n}(viewEngine_ComponentRef));\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nexport { ComponentRef };\nif (false) {\n    /** @type {?} */\n    ComponentRef.prototype.destroyCbs;\n    /** @type {?} */\n    ComponentRef.prototype.location;\n    /** @type {?} */\n    ComponentRef.prototype.injector;\n    /** @type {?} */\n    ComponentRef.prototype.instance;\n    /** @type {?} */\n    ComponentRef.prototype.hostView;\n    /** @type {?} */\n    ComponentRef.prototype.changeDetectorRef;\n    /** @type {?} */\n    ComponentRef.prototype.componentType;\n}\n//# sourceMappingURL=component_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n/**\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nexport function assertNumber(actual, msg) {\n    if (typeof actual != 'number') {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertSame(actual, expected, msg) {\n    if (actual !== expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nexport function assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nexport function assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nexport function assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} actual\n * @param {?=} msg\n * @return {?}\n */\nexport function assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} actual\n * @param {?=} msg\n * @return {?}\n */\nexport function assertNgModuleType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n    if (!actual.ngModuleDef) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction throwError(msg) {\n    // tslint:disable-next-line\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n//# sourceMappingURL=assert.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectorRef as viewEngine_ChangeDetectorRef } from '../change_detection/change_detector_ref';\nimport { NullInjector, inject, setCurrentInjector } from '../di/injector';\nimport { ElementRef as viewEngine_ElementRef } from '../linker/element_ref';\nimport { NgModuleRef as viewEngine_NgModuleRef } from '../linker/ng_module_factory';\nimport { TemplateRef as viewEngine_TemplateRef } from '../linker/template_ref';\nimport { ViewContainerRef as viewEngine_ViewContainerRef } from '../linker/view_container_ref';\nimport { Renderer2 } from '../render';\nimport { assertDefined, assertGreaterThan, assertLessThan } from './assert';\nimport { ComponentFactoryResolver } from './component_ref';\nimport { addToViewTree, assertPreviousIsParent, createEmbeddedViewNode, createLContainer, createLNodeObject, createTNode, getPreviousOrParentNode, getRenderer, isComponent, renderEmbeddedTemplate, resolveDirective } from './instructions';\nimport { VIEWS } from './interfaces/container';\nimport { isProceduralRenderer } from './interfaces/renderer';\nimport { DIRECTIVES, HOST_NODE, INJECTOR, QUERIES, RENDERER, TVIEW } from './interfaces/view';\nimport { assertNodeOfPossibleTypes, assertNodeType } from './node_assert';\nimport { addRemoveViewFromContainer, appendChild, detachView, getChildLNode, getParentLNode, insertView, removeView } from './node_manipulation';\nimport { ViewRef } from './view_ref';\n/** *\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n  @type {?} */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/** *\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n  @type {?} */\nvar BLOOM_SIZE = 256;\n/** @type {?} */\nvar BLOOM_MASK = BLOOM_SIZE - 1;\n/** *\n * Counter used to generate unique IDs for directives.\n  @type {?} */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param {?} injector The node injector in which the directive should be registered\n * @param {?} type The directive to register\n * @return {?}\n */\nexport function bloomAdd(injector, type) {\n    /** @type {?} */\n    var id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = (/** @type {?} */ (type))[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    /** @type {?} */\n    var bloomBit = id & BLOOM_MASK;\n    /** @type {?} */\n    var mask = 1 << bloomBit;\n    /** @type {?} */\n    var b7 = bloomBit & 0x80;\n    /** @type {?} */\n    var b6 = bloomBit & 0x40;\n    /** @type {?} */\n    var b5 = bloomBit & 0x20;\n    if (b7) {\n        b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n            (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n    }\n    else {\n        b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n            (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n    }\n}\n/**\n * @return {?}\n */\nexport function getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(/** @type {?} */ (getPreviousOrParentNode()));\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param {?} node for which an injector should be retrieved / created.\n * @return {?} Node injector\n */\nexport function getOrCreateNodeInjectorForNode(node) {\n    /** @type {?} */\n    var nodeInjector = node.nodeInjector;\n    /** @type {?} */\n    var parent = getParentLNode(node);\n    /** @type {?} */\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return /** @type {?} */ ((nodeInjector));\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null,\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} di The node injector in which a directive will be added\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nexport function diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nexport function diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nexport function directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @return {?} The ElementRef instance to use\n */\nexport function injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @return {?} The TemplateRef instance to use\n */\nexport function injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @return {?} The ViewContainerRef instance to use\n */\nexport function injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/**\n * Returns a ChangeDetectorRef (a.k.a. a ViewRef)\n * @return {?}\n */\nexport function injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n * ComponentFactoryResolver\n * already exists, retrieves the existing ComponentFactoryResolver.\n *\n * @return {?} The ComponentFactoryResolver instance to use\n */\nexport function injectComponentFactoryResolver() {\n    return componentFactoryResolver;\n}\n/** @type {?} */\nvar componentFactoryResolver = new ComponentFactoryResolver();\n/**\n * @return {?}\n */\nexport function injectRenderer2() {\n    return getOrCreateRenderer2(getOrCreateNodeInjector());\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * \\@Component(...)\n * class MyComponent {\n *   constructor(\\@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * \\@experimental\n * @param {?} attrNameToInject\n * @return {?}\n */\nexport function injectAttribute(attrNameToInject) {\n    /** @type {?} */\n    var lNode = getPreviousOrParentNode();\n    ngDevMode && assertNodeOfPossibleTypes(lNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    /** @type {?} */\n    var tNode = lNode.tNode;\n    ngDevMode && assertDefined(tNode, 'expecting tNode');\n    /** @type {?} */\n    var attrs = tNode.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            /** @type {?} */\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return /** @type {?} */ (attrs[i + 1]);\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @param {?} di\n * @param {?} context\n * @return {?} The ChangeDetectorRef to use\n */\nexport function getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    /** @type {?} */\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef(/** @type {?} */ (currentNode.data), context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n    }\n    return /** @type {?} */ ((null));\n}\n/**\n * Gets or creates ChangeDetectorRef for the closest host component\n * @param {?} currentNode\n * @return {?}\n */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    /** @type {?} */\n    var hostNode = getClosestComponentAncestor(currentNode);\n    /** @type {?} */\n    var hostInjector = hostNode.nodeInjector;\n    /** @type {?} */\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef(/** @type {?} */ (hostNode.data), /** @type {?} */ ((hostNode\n            .view[DIRECTIVES]))[hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n}\n/**\n * @param {?} di\n * @return {?}\n */\nfunction getOrCreateRenderer2(di) {\n    /** @type {?} */\n    var renderer = di.node.view[RENDERER];\n    if (isProceduralRenderer(renderer)) {\n        return /** @type {?} */ (renderer);\n    }\n    else {\n        throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n    }\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n * @param {?} node\n * @return {?}\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view[HOST_NODE];\n    }\n    return /** @type {?} */ (node);\n}\n/**\n * Returns the value associated to the given token from the injectors.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * @template T\n * @param {?} nodeInjector Node injector where the search should start\n * @param {?} token The token to look for\n * @param {?=} flags Injection flags\n * @return {?} the value from the injector or `null` when not found\n */\nexport function getOrCreateInjectable(nodeInjector, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    /** @type {?} */\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic) otherwise fall back to the module injector.\n    if (bloomHash !== null) {\n        /** @type {?} */\n        var injector = nodeInjector;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            /** @type {?} */\n            var node = injector.node;\n            /** @type {?} */\n            var nodeFlags = node.tNode.flags;\n            /** @type {?} */\n            var count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                /** @type {?} */\n                var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                /** @type {?} */\n                var end = start + count;\n                /** @type {?} */\n                var defs = /** @type {?} */ ((node.view[TVIEW].directives));\n                for (var i = start; i < end; i++) {\n                    /** @type {?} */\n                    var directiveDef = /** @type {?} */ (defs[i]);\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return /** @type {?} */ ((node.view[DIRECTIVES]))[i];\n                    }\n                }\n            }\n            /** @type {?} */\n            var instance = void 0;\n            if (injector === nodeInjector &&\n                (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    /** @type {?} */\n    var moduleInjector = getPreviousOrParentNode().view[INJECTOR];\n    /** @type {?} */\n    var formerInjector = setCurrentInjector(moduleInjector);\n    try {\n        return inject(token, flags);\n    }\n    finally {\n        setCurrentInjector(formerInjector);\n    }\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} token\n * @return {?}\n */\nfunction searchMatchesQueuedForCreation(node, token) {\n    /** @type {?} */\n    var matches = node.view[TVIEW].currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            /** @type {?} */\n            var def = /** @type {?} */ (matches[i]);\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param {?} token the injection token\n * @return {?} the matching bit to check in the bloom filter or `null` if the token is not known.\n */\nfunction bloomHashBit(token) {\n    /** @type {?} */\n    var id = (/** @type {?} */ (token))[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id & BLOOM_MASK : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param {?} startInjector\n * @param {?} bloomBit The bit to check in each injector's bloom filter\n * @param {?} flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @return {?} An injector that might have the directive\n */\nexport function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    /** @type {?} */\n    var mask = 1 << bloomBit;\n    /** @type {?} */\n    var b7 = bloomBit & 0x80;\n    /** @type {?} */\n    var b6 = bloomBit & 0x40;\n    /** @type {?} */\n    var b5 = bloomBit & 0x20;\n    /** @type {?} */\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        /** @type {?} */\n        var value = void 0;\n        if (b7) {\n            value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n        }\n        else {\n            value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if (value & mask) {\n            return injector;\n        }\n        if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (b7) {\n            value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n        }\n        else {\n            value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        if (value & mask) {\n            injector = injector.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support \\@Host() decorators. If \\@Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n * @param {?} injector\n * @return {?}\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * @template T\n */\nexport { ReadFromInjectorFn };\nif (false) {\n    /** @type {?} */\n    ReadFromInjectorFn.prototype.read;\n}\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param {?} di The node injector where we should store a created ElementRef\n * @return {?} The ElementRef instance to use\n */\nexport function getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n}\n/** @type {?} */\nexport var QUERY_READ_TEMPLATE_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateTemplateRef(injector); }))));\n/** @type {?} */\nexport var QUERY_READ_CONTAINER_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateContainerRef(injector); }))));\n/** @type {?} */\nexport var QUERY_READ_ELEMENT_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateElementRef(injector); }))));\n/** @type {?} */\nexport var QUERY_READ_FROM_NODE = (/** @type {?} */ ((new ReadFromInjectorFn(function (injector, node, directiveIdx) {\n    ngDevMode && assertNodeOfPossibleTypes(node, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    if (directiveIdx > -1) {\n        return /** @type {?} */ ((node.view[DIRECTIVES]))[directiveIdx];\n    }\n    if (node.tNode.type === 3 /* Element */ || node.tNode.type === 4 /* ElementContainer */) {\n        return getOrCreateElementRef(injector);\n    }\n    if (node.tNode.type === 0 /* Container */) {\n        return getOrCreateTemplateRef(injector);\n    }\n    if (ngDevMode) {\n        // should never happen\n        throw new Error(\"Unexpected node type: \" + node.tNode.type);\n    }\n}))));\n/**\n * A ref to a node's native element.\n */\nvar /**\n * A ref to a node's native element.\n */\nElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\nif (false) {\n    /** @type {?} */\n    ElementRef.prototype.nativeElement;\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @param {?} di\n * @return {?} The ViewContainerRef instance to use\n */\nexport function getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        /** @type {?} */\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        /** @type {?} */\n        var hostParent = /** @type {?} */ ((getParentLNode(vcRefHost)));\n        /** @type {?} */\n        var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        /** @type {?} */\n        var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n        /** @type {?} */\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer);\n        appendChild(hostParent, comment, vcRefHost.view);\n        /** @type {?} */\n        var hostTNode = /** @type {?} */ (vcRefHost.tNode);\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, /** @type {?} */ (hostTNode.index), lContainer);\n        di.viewContainerRef = new ViewContainerRef(lContainerNode, vcRefHost);\n    }\n    return di.viewContainerRef;\n}\nvar NodeInjector = /** @class */ (function () {\n    function NodeInjector(_lInjector) {\n        this._lInjector = _lInjector;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    NodeInjector.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token === viewEngine_TemplateRef) {\n            return getOrCreateTemplateRef(this._lInjector);\n        }\n        if (token === viewEngine_ViewContainerRef) {\n            return getOrCreateContainerRef(this._lInjector);\n        }\n        if (token === viewEngine_ElementRef) {\n            return getOrCreateElementRef(this._lInjector);\n        }\n        if (token === viewEngine_ChangeDetectorRef) {\n            return getOrCreateChangeDetectorRef(this._lInjector, null);\n        }\n        if (token === Renderer2) {\n            return getOrCreateRenderer2(this._lInjector);\n        }\n        return getOrCreateInjectable(this._lInjector, token);\n    };\n    return NodeInjector;\n}());\nexport { NodeInjector };\nif (false) {\n    /** @type {?} */\n    NodeInjector.prototype._lInjector;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar /**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode, _hostNode) {\n        this._lContainerNode = _lContainerNode;\n        this._hostNode = _hostNode;\n        this._viewRefs = [];\n    }\n    Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n            return getOrCreateElementRef(injector);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n            return new NodeInjector(injector);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n        /** @deprecated No replacement */\n        get: /**\n         * @deprecated No replacement\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n            return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var lContainer = this._lContainerNode.data;\n        while (lContainer[VIEWS].length) {\n            this.remove(0);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var lContainer = this._lContainerNode.data;\n            return lContainer[VIEWS].length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        /** @type {?} */\n        var adjustedIdx = this._adjustIndex(index);\n        /** @type {?} */\n        var viewRef = (/** @type {?} */ (templateRef))\n            .createEmbeddedView(context || /** @type {?} */ ({}), this._lContainerNode, adjustedIdx);\n        (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        /** @type {?} */\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && contextInjector) {\n            ngModuleRef = contextInjector.get(viewEngine_NgModuleRef, null);\n        }\n        /** @type {?} */\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        var lViewNode = /** @type {?} */ (((/** @type {?} */ (viewRef))._lViewNode));\n        /** @type {?} */\n        var adjustedIdx = this._adjustIndex(index);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        /** @type {?} */\n        var views = this._lContainerNode.data[VIEWS];\n        /** @type {?} */\n        var beforeNode = adjustedIdx + 1 < views.length ?\n            (/** @type {?} */ ((getChildLNode(views[adjustedIdx + 1])))).native :\n            this._lContainerNode.native;\n        addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n        (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} newIndex\n     * @return {?}\n     */\n    ViewContainerRef.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} newIndex\n     * @return {?}\n     */\n    function (viewRef, newIndex) {\n        /** @type {?} */\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var adjustedIdx = this._adjustIndex(index, -1);\n        detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    /**\n     * @param {?=} index\n     * @param {?=} shift\n     * @return {?}\n     */\n    ViewContainerRef.prototype._adjustIndex = /**\n     * @param {?=} index\n     * @param {?=} shift\n     * @return {?}\n     */\n    function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\nif (false) {\n    /** @type {?} */\n    ViewContainerRef.prototype._viewRefs;\n    /** @type {?} */\n    ViewContainerRef.prototype._lContainerNode;\n    /** @type {?} */\n    ViewContainerRef.prototype._hostNode;\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @param {?} di The node injector where we should store a created TemplateRef\n * @return {?} The TemplateRef instance to use\n */\nexport function getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        /** @type {?} */\n        var hostNode = /** @type {?} */ (di.node);\n        /** @type {?} */\n        var hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef(hostNode.view, getOrCreateElementRef(di), /** @type {?} */ (hostTNode.tViews), getRenderer(), hostNode.data[QUERIES]);\n    }\n    return di.templateRef;\n}\n/**\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getFactoryOf(type) {\n    /** @type {?} */\n    var typeAny = /** @type {?} */ (type);\n    /** @type {?} */\n    var def = typeAny.ngComponentDef || typeAny.ngDirectiveDef || typeAny.ngPipeDef ||\n        typeAny.ngInjectableDef || typeAny.ngInjectorDef;\n    if (def === undefined || def.factory === undefined) {\n        return null;\n    }\n    return def.factory;\n}\n/**\n * @template T\n * @param {?} type\n * @return {?}\n */\nexport function getInheritedFactory(type) {\n    /** @type {?} */\n    var proto = /** @type {?} */ (Object.getPrototypeOf(type.prototype).constructor);\n    /** @type {?} */\n    var factory = getFactoryOf(proto);\n    if (factory !== null) {\n        return factory;\n    }\n    else {\n        // There is no factory defined. Either this was improper usage of inheritance\n        // (no Angular decorator on the superclass) or there is no constructor at all\n        // in the inheritance chain. Since the two cases cannot be distinguished, the\n        // latter has to be assumed.\n        return function (t) { return new t(); };\n    }\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nTemplateRef = /** @class */ (function () {\n    function TemplateRef(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n        this._declarationParentView = _declarationParentView;\n        this.elementRef = elementRef;\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n    }\n    /**\n     * @param {?} context\n     * @param {?=} containerNode\n     * @param {?=} index\n     * @return {?}\n     */\n    TemplateRef.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @param {?=} containerNode\n     * @param {?=} index\n     * @return {?}\n     */\n    function (context, containerNode, index) {\n        /** @type {?} */\n        var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n        if (containerNode) {\n            insertView(containerNode, viewNode, /** @type {?} */ ((index)));\n        }\n        renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n        /** @type {?} */\n        var viewRef = new ViewRef(viewNode.data, context);\n        viewRef._lViewNode = viewNode;\n        return viewRef;\n    };\n    return TemplateRef;\n}());\nif (false) {\n    /** @type {?} */\n    TemplateRef.prototype._declarationParentView;\n    /** @type {?} */\n    TemplateRef.prototype.elementRef;\n    /** @type {?} */\n    TemplateRef.prototype._tView;\n    /** @type {?} */\n    TemplateRef.prototype._renderer;\n    /** @type {?} */\n    TemplateRef.prototype._queries;\n}\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n * @param {?} lNode\n * @return {?}\n */\nexport function templateRefExtractor(lNode) {\n    return getOrCreateTemplateRef(getOrCreateNodeInjectorForNode(lNode));\n}\n//# sourceMappingURL=di.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { resolveForwardRef } from './forward_ref';\nimport { InjectionToken } from './injection_token';\nimport { INJECTOR, NullInjector, THROW_IF_NOT_FOUND, USE_VALUE, inject, injectArgs, setCurrentInjector } from './injector';\nimport { APP_ROOT } from './scope';\n/** @typedef {?} */\nvar SingleProvider;\n/** *\n * Marker which indicates that a value has not yet been created from the factory function.\n  @type {?} */\nvar NOT_YET = {};\n/** *\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n  @type {?} */\nvar CIRCULAR = {};\n/** @type {?} */\nvar EMPTY_ARRAY = /** @type {?} */ ([]);\n/** *\n * A lazily initialized NullInjector.\n  @type {?} */\nvar NULL_INJECTOR = undefined;\n/**\n * @return {?}\n */\nfunction getNullInjector() {\n    if (NULL_INJECTOR === undefined) {\n        NULL_INJECTOR = new NullInjector();\n    }\n    return NULL_INJECTOR;\n}\n/**\n * An entry in the injector which tracks information about the given token, including a possible\n * current value.\n * @record\n * @template T\n */\nfunction Record() { }\n/** @type {?} */\nRecord.prototype.factory;\n/** @type {?} */\nRecord.prototype.value;\n/** @type {?} */\nRecord.prototype.multi;\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * \\@experimental\n * @param {?} defType\n * @param {?=} parent\n * @param {?=} additionalProviders\n * @return {?}\n */\nexport function createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     * @return {?}\n     */\n    R3Injector.prototype.destroy = /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     * @return {?}\n     */\n    function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    R3Injector.prototype.get = /**\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        /** @type {?} */\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                /** @type {?} */\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    /** @type {?} */\n                    var def = couldBeInjectableType(token) &&\n                        (/** @type {?} */ (token)).ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            /** @type {?} */\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    R3Injector.prototype.assertNotDestroyed = /**\n     * @return {?}\n     */\n    function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     * @param {?} defOrWrappedDef\n     * @param {?} parents\n     * @return {?}\n     */\n    R3Injector.prototype.processInjectorType = /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     * @param {?} defOrWrappedDef\n     * @param {?} parents\n     * @return {?}\n     */\n    function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        /** @type {?} */\n        var def = /** @type {?} */ ((/** @type {?} */ (defOrWrappedDef)).ngInjectorDef);\n        /** @type {?} */\n        var ngModule = (def == null) && (/** @type {?} */ (defOrWrappedDef)).ngModule || undefined;\n        /** @type {?} */\n        var defType = (ngModule === undefined) ? (/** @type {?} */ (defOrWrappedDef)) : ngModule;\n        /** @type {?} */\n        var providers = (ngModule !== undefined) && (/** @type {?} */ (defOrWrappedDef)).providers ||\n            EMPTY_ARRAY;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return;\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     * @param {?} provider\n     * @return {?}\n     */\n    R3Injector.prototype.processProvider = /**\n     * Process a `SingleProvider` and add it.\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        /** @type {?} */\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        /** @type {?} */\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            /** @type {?} */\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(/** @type {?} */ ((/** @type {?} */ ((multiRecord_1)).multi))); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider; /** @type {?} */\n            ((multiRecord_1.multi)).push(provider);\n        }\n        else {\n            /** @type {?} */\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?} record\n     * @return {?}\n     */\n    R3Injector.prototype.hydrate = /**\n     * @template T\n     * @param {?} token\n     * @param {?} record\n     * @return {?}\n     */\n    function (token, record) {\n        if (record.value === CIRCULAR) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR;\n            record.value = /** @type {?} */ ((record.factory))();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return /** @type {?} */ (record.value);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    R3Injector.prototype.injectableDefInScope = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nexport { R3Injector };\nif (false) {\n    /**\n     * Map of tokens to records which contain the instances of those tokens.\n     * @type {?}\n     */\n    R3Injector.prototype.records;\n    /**\n     * The transitive set of `InjectorType`s which define this injector.\n     * @type {?}\n     */\n    R3Injector.prototype.injectorDefTypes;\n    /**\n     * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n     * @type {?}\n     */\n    R3Injector.prototype.onDestroy;\n    /**\n     * Flag indicating this injector provides the APP_ROOT_SCOPE token, and thus counts as the\n     * root scope.\n     * @type {?}\n     */\n    R3Injector.prototype.isRootInjector;\n    /**\n     * Flag indicating that this injector was previously destroyed.\n     * @type {?}\n     */\n    R3Injector.prototype.destroyed;\n    /** @type {?} */\n    R3Injector.prototype.parent;\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction injectableDefRecord(token) {\n    /** @type {?} */\n    var def = /** @type {?} */ ((/** @type {?} */ (token)).ngInjectableDef);\n    if (def === undefined) {\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n        // no-args constructor.\n        return makeRecord(function () { return new (/** @type {?} */ (token))(); });\n    }\n    return makeRecord(def.factory);\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction providerToRecord(provider) {\n    /** @type {?} */\n    var token = resolveForwardRef(provider);\n    /** @type {?} */\n    var value = NOT_YET;\n    /** @type {?} */\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, injectArgs(provider.deps || [])); };\n        }\n        else {\n            /** @type {?} */\n            var classRef_1 = (/** @type {?} */ (provider)).useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), [void 0].concat(injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\n/**\n * @template T\n * @param {?} factory\n * @param {?=} value\n * @param {?=} multi\n * @return {?}\n */\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\n/**\n * @template T\n * @param {?} input\n * @param {?} fn\n * @return {?}\n */\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isExistingProvider(value) {\n    return !!(/** @type {?} */ (value)).useExisting;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFactoryProvider(value) {\n    return !!(/** @type {?} */ (value)).useFactory;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasDeps(value) {\n    return !!(/** @type {?} */ (value)).deps;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && (/** @type {?} */ (value)).ngOnDestroy &&\n        typeof (/** @type {?} */ (value)).ngOnDestroy === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n//# sourceMappingURL=r3_injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { createInjector } from '../di/r3_injector';\nimport { ComponentFactoryResolver as viewEngine_ComponentFactoryResolver } from '../linker/component_factory_resolver';\nimport { NgModuleFactory as viewEngine_NgModuleFactory, NgModuleRef as viewEngine_NgModuleRef } from '../linker/ng_module_factory';\nimport { stringify } from '../util';\nimport { assertDefined } from './assert';\nimport { ComponentFactoryResolver } from './component_ref';\n/**\n * @record\n */\nexport function NgModuleType() { }\n/** @type {?} */\nNgModuleType.prototype.ngModuleDef;\n/** @type {?} */\nexport var COMPONENT_FACTORY_RESOLVER = {\n    provide: viewEngine_ComponentFactoryResolver,\n    useFactory: function () { return new ComponentFactoryResolver(); },\n    deps: [],\n};\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nNgModuleRef = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleRef, _super);\n    function NgModuleRef(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        /** @type {?} */\n        var ngModuleDef = (/** @type {?} */ ((ngModuleType))).ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        /** @type {?} */\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: viewEngine_NgModuleRef,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver();\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    };\n    return NgModuleRef;\n}(viewEngine_NgModuleRef));\n/**\n * @template T\n */\nexport { NgModuleRef };\nif (false) {\n    /** @type {?} */\n    NgModuleRef.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleRef.prototype.injector;\n    /** @type {?} */\n    NgModuleRef.prototype.componentFactoryResolver;\n    /** @type {?} */\n    NgModuleRef.prototype.instance;\n    /** @type {?} */\n    NgModuleRef.prototype.destroyCbs;\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nNgModuleFactory = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleFactory, _super);\n    function NgModuleFactory(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        return new NgModuleRef(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory;\n}(viewEngine_NgModuleFactory));\n/**\n * @template T\n */\nexport { NgModuleFactory };\nif (false) {\n    /** @type {?} */\n    NgModuleFactory.prototype.moduleType;\n}\n//# sourceMappingURL=ng_module_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { bindingUpdated, bindingUpdated2, bindingUpdated4, updateBinding, getBinding, getCreationMode, bindingUpdated3, getBindingRoot, } from './instructions';\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @template T\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn Function that returns a value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} value\n */\nexport function pureFunction0(slotOffset, pureFn, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return getCreationMode() ?\n        updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n        getBinding(bindingIndex);\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn Function that returns an updated value\n * @param {?} exp Updated expression value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated(bindingIndex, exp) ?\n        updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        getBinding(bindingIndex + 1);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated2(bindingIndex, exp1, exp2) ?\n        updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        getBinding(bindingIndex + 2);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n        updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        getBinding(bindingIndex + 3);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n        updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        getBinding(bindingIndex + 4);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated(bindingIndex + 4, exp5) || different ?\n        updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        getBinding(bindingIndex + 5);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n        updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        getBinding(bindingIndex + 6);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n        updateBinding(bindingIndex + 7, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        getBinding(bindingIndex + 7);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?} exp8\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n        updateBinding(bindingIndex + 8, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        getBinding(bindingIndex + 8);\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset from binding root to the reserved slot\n * @param {?} pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param {?} exps An array of binding values\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nexport function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    /** @type {?} */\n    var bindingIndex = getBindingRoot() + slotOffset;\n    /** @type {?} */\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n    }\n    return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n        getBinding(bindingIndex);\n}\n//# sourceMappingURL=pure_function.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Subject, Subscription } from 'rxjs';\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @template T\n */\nvar /**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @template T\n */\nEventEmitter = /** @class */ (function (_super) {\n    tslib_1.__extends(EventEmitter, _super);\n    /**\n     * Creates an instance of this class that can\n     * deliver events synchronously or asynchronously.\n     *\n     * @param isAsync When true, deliver events asynchronously.\n     *\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * Emits an event containing a given value.\n     * @param value The value to emit.\n     */\n    /**\n     * Emits an event containing a given value.\n     * @param {?=} value The value to emit.\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * Emits an event containing a given value.\n     * @param {?=} value The value to emit.\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param generatorOrNext When supplied, a custom handler for emitted events.\n     * @param error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     */\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param {?=} generatorOrNext When supplied, a custom handler for emitted events.\n     * @param {?=} error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param {?=} complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * Registers handlers for events emitted by this instance.\n     * @param {?=} generatorOrNext When supplied, a custom handler for emitted events.\n     * @param {?=} error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param {?=} complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        /** @type {?} */\n        var schedulerFn;\n        /** @type {?} */\n        var errorFn = function (err) { return null; };\n        /** @type {?} */\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        /** @type {?} */\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(Subject));\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @template T\n */\nexport { EventEmitter };\nif (false) {\n    /**\n     * Internal\n     * @type {?}\n     */\n    EventEmitter.prototype.__isAsync;\n}\n//# sourceMappingURL=event_emitter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @typedef {?} */\nvar ComponentTemplate;\nexport { ComponentTemplate };\n/** @typedef {?} */\nvar ComponentQuery;\nexport { ComponentQuery };\n/** @enum {number} */\nvar RenderFlags = {\n    /* Whether to run the creation block (e.g. create elements and directives) */\n    Create: 1,\n    /* Whether to run the update block (e.g. refresh bindings) */\n    Update: 2,\n};\nexport { RenderFlags };\n/**\n * A subclass of `Type` which has a static `ngComponentDef`:`ComponentDef` field making it\n * consumable for rendering.\n * @record\n * @template T\n */\nexport function ComponentType() { }\n/** @type {?} */\nComponentType.prototype.ngComponentDef;\n/**\n * A subclass of `Type` which has a static `ngDirectiveDef`:`DirectiveDef` field making it\n * consumable for rendering.\n * @record\n * @template T\n */\nexport function DirectiveType() { }\n/** @type {?} */\nDirectiveType.prototype.ngDirectiveDef;\n/** @enum {number} */\nvar DirectiveDefFlags = {\n    ContentQuery: 2,\n};\nexport { DirectiveDefFlags };\n/**\n * A subclass of `Type` which has a static `ngPipeDef`:`PipeDef` field making it\n * consumable for rendering.\n * @record\n * @template T\n */\nexport function PipeType() { }\n/** @type {?} */\nPipeType.prototype.ngPipeDef;\n/** @typedef {?} */\nvar DirectiveDefInternal;\nexport { DirectiveDefInternal };\n/**\n * Runtime information for classes that are inherited by components or directives\n * that aren't defined as components or directives.\n *\n * This is an internal data structure used by the render to determine what inputs\n * and outputs should be inherited.\n *\n * See: {\\@link defineBase}\n * @record\n * @template T\n */\nexport function BaseDef() { }\n/**\n * A dictionary mapping the inputs' minified property names to their public API names, which\n * are their aliases if any, or their original unminified property names\n * (as in `\\@Input('alias') propertyName: any;`).\n * @type {?}\n */\nBaseDef.prototype.inputs;\n/**\n * @deprecated This is only here because `NgOnChanges` incorrectly uses declared name instead of\n * public or minified name.\n * @type {?}\n */\nBaseDef.prototype.declaredInputs;\n/**\n * A dictionary mapping the outputs' minified property names to their public API names, which\n * are their aliases if any, or their original unminified property names\n * (as in `\\@Output('alias') propertyName: any;`).\n * @type {?}\n */\nBaseDef.prototype.outputs;\n// unsupported: template constraints.\n/**\n * Runtime link information for Directives.\n *\n * This is internal data structure used by the render to link\n * directives into templates.\n *\n * NOTE: Always use `defineDirective` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * @param Selector type metadata specifying the selector of the directive or component\n *\n * See: {\\@link defineDirective}\n * @record\n * @template T, Selector\n */\nexport function DirectiveDef() { }\n/**\n * Token representing the directive. Used by DI.\n * @type {?}\n */\nDirectiveDef.prototype.type;\n/**\n * Function that makes a directive public to the DI system.\n * @type {?}\n */\nDirectiveDef.prototype.diPublic;\n/**\n * The selectors that will be used to match nodes to this directive.\n * @type {?}\n */\nDirectiveDef.prototype.selectors;\n/**\n * Name under which the directive is exported (for use with local references in template)\n * @type {?}\n */\nDirectiveDef.prototype.exportAs;\n/**\n * Factory function used to create a new directive instance.\n * @type {?}\n */\nDirectiveDef.prototype.factory;\n/**\n * Function to create instances of content queries associated with a given directive.\n * @type {?}\n */\nDirectiveDef.prototype.contentQueries;\n/**\n * Refreshes content queries associated with directives in a given view\n * @type {?}\n */\nDirectiveDef.prototype.contentQueriesRefresh;\n/**\n * The number of host bindings (including pure fn bindings) in this directive/component.\n *\n * Used to calculate the length of the LViewData array for the *parent* component\n * of this directive/component.\n * @type {?}\n */\nDirectiveDef.prototype.hostVars;\n/**\n * Refreshes host bindings on the associated directive.\n * @type {?}\n */\nDirectiveDef.prototype.hostBindings;\n/**\n * Static attributes to set on host element.\n *\n * Even indices: attribute name\n * Odd indices: attribute value\n * @type {?}\n */\nDirectiveDef.prototype.attributes;\n/** @type {?} */\nDirectiveDef.prototype.onInit;\n/** @type {?} */\nDirectiveDef.prototype.doCheck;\n/** @type {?} */\nDirectiveDef.prototype.afterContentInit;\n/** @type {?} */\nDirectiveDef.prototype.afterContentChecked;\n/** @type {?} */\nDirectiveDef.prototype.afterViewInit;\n/** @type {?} */\nDirectiveDef.prototype.afterViewChecked;\n/** @type {?} */\nDirectiveDef.prototype.onDestroy;\n/**\n * The features applied to this directive\n * @type {?}\n */\nDirectiveDef.prototype.features;\n/** @typedef {?} */\nvar ComponentDefInternal;\nexport { ComponentDefInternal };\n// unsupported: template constraints.\n/**\n * Runtime link information for Components.\n *\n * This is internal data structure used by the render to link\n * components into templates.\n *\n * NOTE: Always use `defineComponent` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * See: {\\@link defineComponent}\n * @record\n * @template T, Selector\n */\nexport function ComponentDef() { }\n/**\n * Runtime unique component ID.\n * @type {?}\n */\nComponentDef.prototype.id;\n/**\n * The View template of the component.\n * @type {?}\n */\nComponentDef.prototype.template;\n/**\n * A set of styles that the component needs to be present for component to render correctly.\n * @type {?}\n */\nComponentDef.prototype.styles;\n/**\n * The number of nodes, local refs, and pipes in this component template.\n *\n * Used to calculate the length of the component's LViewData array, so we\n * can pre-fill the array and set the binding start index.\n * @type {?}\n */\nComponentDef.prototype.consts;\n/**\n * The number of bindings in this component template (including pure fn bindings).\n *\n * Used to calculate the length of the component's LViewData array, so we\n * can pre-fill the array and set the host binding start index.\n * @type {?}\n */\nComponentDef.prototype.vars;\n/**\n * Query-related instructions for a component.\n * @type {?}\n */\nComponentDef.prototype.viewQuery;\n/**\n * The view encapsulation type, which determines how styles are applied to\n * DOM elements. One of\n * - `Emulated` (default): Emulate native scoping of styles.\n * - `Native`: Use the native encapsulation mechanism of the renderer.\n * - `ShadowDom`: Use modern [ShadowDOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n *   create a ShadowRoot for component's host element.\n * - `None`: Do not provide any template or style encapsulation.\n * @type {?}\n */\nComponentDef.prototype.encapsulation;\n/**\n * Defines arbitrary developer-defined data to be stored on a renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @type {?}\n */\nComponentDef.prototype.data;\n/**\n * Whether or not this component's ChangeDetectionStrategy is OnPush\n * @type {?}\n */\nComponentDef.prototype.onPush;\n/**\n * Defines the set of injectable providers that are visible to a Directive and its content DOM\n * children.\n * @type {?}\n */\nComponentDef.prototype.providers;\n/**\n * Defines the set of injectable providers that are visible to a Directive and its view DOM\n * children only.\n * @type {?}\n */\nComponentDef.prototype.viewProviders;\n/**\n * Registry of directives and components that may be found in this view.\n *\n * The property is either an array of `DirectiveDef`s or a function which returns the array of\n * `DirectiveDef`s. The function is necessary to be able to support forward declarations.\n * @type {?}\n */\nComponentDef.prototype.directiveDefs;\n/**\n * Registry of pipes that may be found in this view.\n *\n * The property is either an array of `PipeDefs`s or a function which returns the array of\n * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n * @type {?}\n */\nComponentDef.prototype.pipeDefs;\n// unsupported: template constraints.\n/**\n * Runtime link information for Pipes.\n *\n * This is internal data structure used by the renderer to link\n * pipes into templates.\n *\n * NOTE: Always use `definePipe` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * See: {\\@link definePipe}\n * @record\n * @template T, S\n */\nexport function PipeDef() { }\n/**\n * Pipe name.\n *\n * Used to resolve pipe in templates.\n * @type {?}\n */\nPipeDef.prototype.name;\n/**\n * Factory function used to create a new pipe instance.\n * @type {?}\n */\nPipeDef.prototype.factory;\n/**\n * Whether or not the pipe is pure.\n *\n * Pure pipes result only depends on the pipe input and not on internal\n * state of the pipe.\n * @type {?}\n */\nPipeDef.prototype.pure;\n/** @type {?} */\nPipeDef.prototype.onDestroy;\n/** @typedef {?} */\nvar PipeDefInternal;\nexport { PipeDefInternal };\n/** @typedef {?} */\nvar DirectiveDefFeature;\nexport { DirectiveDefFeature };\n/** @typedef {?} */\nvar ComponentDefFeature;\nexport { ComponentDefFeature };\n/** @typedef {?} */\nvar DirectiveDefListOrFactory;\nexport { DirectiveDefListOrFactory };\n/** @typedef {?} */\nvar DirectiveDefList;\nexport { DirectiveDefList };\n/** @typedef {?} */\nvar DirectiveTypesOrFactory;\nexport { DirectiveTypesOrFactory };\n/** @typedef {?} */\nvar DirectiveTypeList;\nexport { DirectiveTypeList };\n/** @typedef {?} */\nvar PipeDefListOrFactory;\nexport { PipeDefListOrFactory };\n/** @typedef {?} */\nvar PipeDefList;\nexport { PipeDefList };\n/** @typedef {?} */\nvar PipeTypesOrFactory;\nexport { PipeTypesOrFactory };\n/** @typedef {?} */\nvar PipeTypeList;\nexport { PipeTypeList };\n/** @type {?} */\nexport var unusedValueExportToPlacateAjd = 1;\n/** @enum {number} */\nvar InitialStylingFlags = {\n    VALUES_MODE: 1,\n};\nexport { InitialStylingFlags };\n//# sourceMappingURL=definition.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\nimport { getSymbolIterator } from '../util';\nimport { assertDefined, assertEqual } from './assert';\nimport { ReadFromInjectorFn, getOrCreateNodeInjectorForNode } from './di';\nimport { assertPreviousIsParent, getOrCreateCurrentQueries, isContentQueryHost, store, storeCleanupWithContext } from './instructions';\nimport { unusedValueExportToPlacateAjd as unused1 } from './interfaces/definition';\nimport { unusedValueExportToPlacateAjd as unused2 } from './interfaces/injector';\nimport { unusedValueExportToPlacateAjd as unused3 } from './interfaces/node';\nimport { unusedValueExportToPlacateAjd as unused4 } from './interfaces/query';\nimport { DIRECTIVES, TVIEW } from './interfaces/view';\nimport { flatten } from './util';\n/** @type {?} */\nvar unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n * @record\n * @template T\n */\nexport function QueryPredicate() { }\n/**\n * If looking for directives then it contains the directive type.\n * @type {?}\n */\nQueryPredicate.prototype.type;\n/**\n * If selector then contains local names to query for.\n * @type {?}\n */\nQueryPredicate.prototype.selector;\n/**\n * Indicates which token should be read from DI for this query.\n * @type {?}\n */\nQueryPredicate.prototype.read;\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n * @record\n * @template T\n */\nexport function LQuery() { }\n/**\n * Next query. Used when queries are stored as a linked list in `LQueries`.\n * @type {?}\n */\nLQuery.prototype.next;\n/**\n * Destination to which the value should be added.\n * @type {?}\n */\nLQuery.prototype.list;\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n * @type {?}\n */\nLQuery.prototype.predicate;\n/**\n * Values which have been located.\n *\n * This is what builds up the `QueryList._valuesTree`.\n * @type {?}\n */\nLQuery.prototype.values;\n/**\n * A pointer to an array that stores collected values from views. This is necessary so we know a\n * container into which to insert nodes collected from views.\n * @type {?}\n */\nLQuery.prototype.containerValues;\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(parent, shallow, deep) {\n        this.parent = parent;\n        this.shallow = shallow;\n        this.deep = deep;\n    }\n    /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    LQueries_.prototype.track = /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    function (queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.clone = /**\n     * @return {?}\n     */\n    function () { return new LQueries_(this, null, this.deep); };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.container = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var shallowResults = copyQueriesToContainer(this.shallow);\n        /** @type {?} */\n        var deepResults = copyQueriesToContainer(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.createView = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var shallowResults = copyQueriesToView(this.shallow);\n        /** @type {?} */\n        var deepResults = copyQueriesToView(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    LQueries_.prototype.insertView = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        insertView(index, this.shallow);\n        insertView(index, this.deep);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    LQueries_.prototype.addNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        add(this.deep, node);\n        if (isContentQueryHost(node.tNode)) {\n            add(this.shallow, node);\n            if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                // if node has a content query and parent also has a content query\n                // both queries need to check this node for shallow matches\n                add(/** @type {?} */ ((this.parent)).shallow, node);\n            }\n            return this.parent;\n        }\n        isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.removeView = /**\n     * @return {?}\n     */\n    function () {\n        removeView(this.shallow);\n        removeView(this.deep);\n    };\n    return LQueries_;\n}());\nexport { LQueries_ };\nif (false) {\n    /** @type {?} */\n    LQueries_.prototype.parent;\n    /** @type {?} */\n    LQueries_.prototype.shallow;\n    /** @type {?} */\n    LQueries_.prototype.deep;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction isRootNodeOfQuery(tNode) {\n    return tNode.parent === null || isContentQueryHost(tNode.parent);\n}\n/**\n * @param {?} query\n * @return {?}\n */\nfunction copyQueriesToContainer(query) {\n    /** @type {?} */\n    var result = null;\n    while (query) {\n        /** @type {?} */\n        var containerValues = []; // prepare room for views\n        query.values.push(containerValues);\n        /** @type {?} */\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: containerValues,\n            containerValues: null\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\n/**\n * @param {?} query\n * @return {?}\n */\nfunction copyQueriesToView(query) {\n    /** @type {?} */\n    var result = null;\n    while (query) {\n        /** @type {?} */\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: [],\n            containerValues: query.values\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\n/**\n * @param {?} index\n * @param {?} query\n * @return {?}\n */\nfunction insertView(index, query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.'); /** @type {?} */\n        ((query.containerValues)).splice(index, 0, query.values);\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @return {?}\n */\nfunction removeView(query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n        /** @type {?} */\n        var containerValues = /** @type {?} */ ((query.containerValues));\n        /** @type {?} */\n        var viewValuesIdx = containerValues.indexOf(query.values);\n        /** @type {?} */\n        var removed = containerValues.splice(viewValuesIdx, 1);\n        // mark a query as dirty only when removed view had matching modes\n        ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n        if (removed[0].length) {\n            query.list.setDirty();\n        }\n        query = query.next;\n    }\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param {?} tNode static data of a node to check\n * @param {?} selector selector to match\n * @return {?} directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    /** @type {?} */\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return /** @type {?} */ (localNames[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param {?} node Node on which directives are present.\n * @param {?} type Type of a directive to look for.\n * @return {?} Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    /** @type {?} */\n    var defs = /** @type {?} */ ((node.view[TVIEW].directives));\n    /** @type {?} */\n    var flags = node.tNode.flags;\n    /** @type {?} */\n    var count = flags & 4095 /* DirectiveCountMask */;\n    /** @type {?} */\n    var start = flags >> 15 /* DirectiveStartingIndexShift */;\n    /** @type {?} */\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        /** @type {?} */\n        var def = /** @type {?} */ (defs[i]);\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} nodeInjector\n * @param {?} node\n * @param {?} read\n * @param {?} directiveIdx\n * @return {?}\n */\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        /** @type {?} */\n        var matchingIdx = getIdxOfMatchingDirective(node, /** @type {?} */ (read));\n        if (matchingIdx !== null) {\n            return /** @type {?} */ ((node.view[DIRECTIVES]))[matchingIdx];\n        }\n    }\n    return null;\n}\n/**\n * @param {?} query\n * @param {?} node\n * @return {?}\n */\nfunction add(query, node) {\n    /** @type {?} */\n    var nodeInjector = getOrCreateNodeInjectorForNode(/** @type {?} */ (node));\n    while (query) {\n        /** @type {?} */\n        var predicate = query.predicate;\n        /** @type {?} */\n        var type = predicate.type;\n        if (type) {\n            /** @type {?} */\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                /** @type {?} */\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            /** @type {?} */\n            var selector = /** @type {?} */ ((predicate.selector));\n            for (var i = 0; i < selector.length; i++) {\n                /** @type {?} */\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    /** @type {?} */\n                    var result = readFromNodeInjector(nodeInjector, node, /** @type {?} */ ((predicate.read)), directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @param {?} matchingValue\n * @return {?}\n */\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\n/**\n * @template T\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createPredicate(predicate, read) {\n    /** @type {?} */\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : /** @type {?} */ (predicate),\n        selector: isArray ? /** @type {?} */ (predicate) : null,\n        read: read\n    };\n}\n/**\n * @template T\n * @param {?} previous\n * @param {?} queryList\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: (/** @type {?} */ ((queryList)))._valuesTree,\n        containerValues: null\n    };\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nQueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /**\n         * \\@internal\n         */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList_.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._values.slice(0); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._values))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._values.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList_.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._values = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.setDirty = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList_;\n}());\nif (false) {\n    /** @type {?} */\n    QueryList_.prototype.dirty;\n    /** @type {?} */\n    QueryList_.prototype.changes;\n    /** @type {?} */\n    QueryList_.prototype._values;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    QueryList_.prototype._valuesTree;\n}\n/** @type {?} */\nexport var QueryList = /** @type {?} */ (QueryList_);\n/**\n * Creates and returns a QueryList.\n *\n * @template T\n * @param {?} memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param {?} predicate The type for which the query will search\n * @param {?=} descend Whether or not to descend into children\n * @param {?=} read What to save in the query\n * @return {?} QueryList<T>\n */\nexport function query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    /** @type {?} */\n    var queryList = new QueryList();\n    /** @type {?} */\n    var queries = getOrCreateCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(null, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n * @param {?} queryList\n * @return {?}\n */\nexport function queryRefresh(queryList) {\n    /** @type {?} */\n    var queryListImpl = (/** @type {?} */ ((queryList)));\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=query.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '../is_dev_mode';\nimport { InertBodyHelper } from './inert_body';\nimport { _sanitizeUrl, sanitizeSrcset } from './url_sanitizer';\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags) {\n    /** @type {?} */\n    var res = {};\n    for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n        var t = _a[_i];\n        res[t] = true;\n    }\n    return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    /** @type {?} */\n    var res = {};\n    for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n        var s = sets_1[_a];\n        for (var v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n/** @type {?} */\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n/** @type {?} */\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n/** @type {?} */\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n/** @type {?} */\nvar OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n/** @type {?} */\nvar BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n/** @type {?} */\nvar INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n/** @type {?} */\nvar VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n/** @type {?} */\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n/** @type {?} */\nvar SRCSET_ATTRS = tagSet('srcset');\n/** @type {?} */\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n/** @type {?} */\nvar VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar /**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nSanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        /** @type {?} */\n        var current = /** @type {?} */ ((el.firstChild));\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(/** @type {?} */ (current));\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(/** @type {?} */ ((current.nodeValue)));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = /** @type {?} */ ((current.firstChild));\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(/** @type {?} */ (current));\n                }\n                /** @type {?} */\n                var next = this.checkClobberedElement(current, /** @type {?} */ ((current.nextSibling)));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, /** @type {?} */ ((current.parentNode)));\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.startElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        /** @type {?} */\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            /** @type {?} */\n            var elAttr = elAttrs.item(i);\n            /** @type {?} */\n            var attrName = /** @type {?} */ ((elAttr)).name;\n            /** @type {?} */\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            /** @type {?} */\n            var value = /** @type {?} */ ((elAttr)).value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    /**\n     * @param {?} current\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.endElement = /**\n     * @param {?} current\n     * @return {?}\n     */\n    function (current) {\n        /** @type {?} */\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.chars = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) { this.buf.push(encodeEntities(chars)); };\n    /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + ((/** @type {?} */ (node))).outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\nif (false) {\n    /** @type {?} */\n    SanitizingHtmlSerializer.prototype.sanitizedSomething;\n    /** @type {?} */\n    SanitizingHtmlSerializer.prototype.buf;\n}\n/** @type {?} */\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n/** @type {?} */\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        /** @type {?} */\n        var hi = match.charCodeAt(0);\n        /** @type {?} */\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n/** @type {?} */\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nexport function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    /** @type {?} */\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        /** @type {?} */\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        /** @type {?} */\n        var mXSSAttempts = 5;\n        /** @type {?} */\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = /** @type {?} */ ((inertBodyElement)).innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        /** @type {?} */\n        var sanitizer = new SanitizingHtmlSerializer();\n        /** @type {?} */\n        var safeHtml = sanitizer.sanitizeChildren(/** @type {?} */ (getTemplateContent(/** @type {?} */ ((inertBodyElement)))) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            /** @type {?} */\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction getTemplateContent(el) {\n    return 'content' in (/** @type {?} */ (el /** Microsoft/TypeScript#21517 */) /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n        el.content :\n        null;\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n//# sourceMappingURL=html_sanitizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nexport { SecurityContext };\nSecurityContext[SecurityContext.NONE] = 'NONE';\nSecurityContext[SecurityContext.HTML] = 'HTML';\nSecurityContext[SecurityContext.STYLE] = 'STYLE';\nSecurityContext[SecurityContext.SCRIPT] = 'SCRIPT';\nSecurityContext[SecurityContext.URL] = 'URL';\nSecurityContext[SecurityContext.RESOURCE_URL] = 'RESOURCE_URL';\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n * @abstract\n */\nvar /**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n * @abstract\n */\nSanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n * @abstract\n */\nexport { Sanitizer };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    Sanitizer.prototype.sanitize = function (context, value) { };\n}\n//# sourceMappingURL=security.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '../is_dev_mode';\nimport { _sanitizeUrl } from './url_sanitizer';\n/** *\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n  @type {?} */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n/** @type {?} */\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n/** @type {?} */\nvar COLOR_FNS = '(?:rgb|hsl)a?';\n/** @type {?} */\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n/** @type {?} */\nvar CSS3_FNS = '(?:calc|attr)';\n/** @type {?} */\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n/** @type {?} */\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/** *\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n  @type {?} */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value) {\n    /** @type {?} */\n    var outsideSingle = true;\n    /** @type {?} */\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        /** @type {?} */\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nexport function _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    /** @type {?} */\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n/**\n * Used to intercept and sanitize style values before they are written to the renderer.\n *\n * This function is designed to be called in two modes. When a value is not provided\n * then the function will return a boolean whether a property will be sanitized later.\n * If a value is provided then the sanitized version of that will be returned.\n * @record\n */\nexport function StyleSanitizeFn() { }\n//# sourceMappingURL=style_sanitizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n  @type {?} */\nexport var Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v) {\n    return typeof v === 'function';\n}\n//# sourceMappingURL=type.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Type, isType } from '../type';\nimport { global, stringify } from '../util';\nimport { ANNOTATIONS, PARAMETERS, PROP_METADATA } from '../util/decorators';\n/** *\n * Attention: These regex has to hold even if the code is minified!\n  @type {?} */\nexport var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n/** @type {?} */\nexport var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n/** @type {?} */\nexport var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        /** @type {?} */\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        /** @type {?} */\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        /** @type {?} */\n        var tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            /** @type {?} */\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            /** @type {?} */\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            /** @type {?} */\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        /** @type {?} */\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        /** @type {?} */\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        /** @type {?} */\n        var parentCtor = getParentCtor(type);\n        /** @type {?} */\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            /** @type {?} */\n            var annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        /** @type {?} */\n        var parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        /** @type {?} */\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            /** @type {?} */\n            var propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            /** @type {?} */\n            var propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            /** @type {?} */\n            var propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        /** @type {?} */\n        var parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            /** @type {?} */\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        /** @type {?} */\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                /** @type {?} */\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return {}; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        /** @type {?} */\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nexport { ReflectionCapabilities };\nif (false) {\n    /** @type {?} */\n    ReflectionCapabilities.prototype._reflect;\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        /** @type {?} */\n        var decoratorType = decoratorInvocation.type;\n        /** @type {?} */\n        var annotationCls = decoratorType.annotationCls;\n        /** @type {?} */\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    /** @type {?} */\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    /** @type {?} */\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n//# sourceMappingURL=reflection_capabilities.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { LiteralExpr, WrappedNodeExpr, compileInjectable as compileR3Injectable, jitExpression } from '@angular/compiler';\nimport { getClosureSafeProperty } from '../../util/property';\nimport { angularCoreEnv } from './environment';\nimport { NG_INJECTABLE_DEF } from './fields';\nimport { convertDependencies, reflectDependencies } from './util';\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n * @param {?} type\n * @param {?=} srcMeta\n * @return {?}\n */\nexport function compileInjectable(type, srcMeta) {\n    /** @type {?} */\n    var meta = srcMeta || { providedIn: null };\n    /** @type {?} */\n    var def = null;\n    Object.defineProperty(type, NG_INJECTABLE_DEF, {\n        get: function () {\n            if (def === null) {\n                /** @type {?} */\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                /** @type {?} */\n                var ctorDeps = reflectDependencies(type);\n                /** @type {?} */\n                var userDeps = undefined;\n                if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                    userDeps = convertDependencies(meta.deps);\n                }\n                /** @type {?} */\n                var useClass = undefined;\n                /** @type {?} */\n                var useFactory = undefined;\n                /** @type {?} */\n                var useValue = undefined;\n                /** @type {?} */\n                var useExisting = undefined;\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    useClass = new WrappedNodeExpr(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    useClass = new WrappedNodeExpr(meta.useClass);\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    useValue = new WrappedNodeExpr(meta.useValue);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    useFactory = new WrappedNodeExpr(meta.useFactory);\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    useExisting = new WrappedNodeExpr(meta.useExisting);\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                var _a = compileR3Injectable({\n                    name: type.name,\n                    type: new WrappedNodeExpr(type),\n                    providedIn: computeProvidedIn(meta.providedIn),\n                    useClass: useClass,\n                    useFactory: useFactory,\n                    useValue: useValue,\n                    useExisting: useExisting,\n                    ctorDeps: ctorDeps,\n                    userDeps: userDeps,\n                }), expression = _a.expression, statements = _a.statements;\n                def = jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n            }\n            return def;\n        },\n    });\n}\n/**\n * @param {?} providedIn\n * @return {?}\n */\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new LiteralExpr(providedIn);\n    }\n    else {\n        return new WrappedNodeExpr(providedIn);\n    }\n}\n/** @typedef {?} */\nvar UseClassProvider;\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseClassProvider(meta) {\n    return (/** @type {?} */ (meta)).useClass !== undefined;\n}\n/** @type {?} */\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ0 = GET_PROPERTY_NAME;\n/** @type {?} */\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 }, GET_PROPERTY_NAME);\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseValueProvider(meta) {\n    return USE_VALUE in meta;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseFactoryProvider(meta) {\n    return (/** @type {?} */ (meta)).useFactory !== undefined;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction isUseExistingProvider(meta) {\n    return (/** @type {?} */ (meta)).useExisting !== undefined;\n}\nexport { ɵ0 };\n//# sourceMappingURL=injectable.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjectable, defineInjector } from './di/defs';\nimport { inject, injectArgs } from './di/injector';\nimport * as ivyOn from './ivy_switch_on';\nimport { ReflectionCapabilities } from './reflection/reflection_capabilities';\nimport { getClosureSafeProperty } from './util/property';\n/**\n * @return {?}\n */\nfunction noop() { }\n/**\n * @record\n */\nexport function DirectiveCompiler() { }\n/** @type {?} */\nexport var R3_COMPILE_COMPONENT__POST_NGCC__ = ivyOn.R3_COMPILE_COMPONENT;\n/** @type {?} */\nexport var R3_COMPILE_DIRECTIVE__POST_NGCC__ = ivyOn.R3_COMPILE_DIRECTIVE;\n/** @type {?} */\nexport var R3_COMPILE_INJECTABLE__POST_NGCC__ = ivyOn.R3_COMPILE_INJECTABLE;\n/** @type {?} */\nexport var R3_COMPILE_NGMODULE__POST_NGCC__ = ivyOn.R3_COMPILE_NGMODULE;\n/** @type {?} */\nexport var R3_COMPILE_PIPE__POST_NGCC__ = ivyOn.R3_COMPILE_PIPE;\n/** @type {?} */\nexport var ivyEnable__POST_NGCC__ = ivyOn.ivyEnabled;\n/** @type {?} */\nvar R3_COMPILE_COMPONENT__PRE_NGCC__ = noop;\n/** @type {?} */\nvar R3_COMPILE_DIRECTIVE__PRE_NGCC__ = noop;\n/** @type {?} */\nvar R3_COMPILE_INJECTABLE__PRE_NGCC__ = preR3InjectableCompile;\n/** @type {?} */\nvar R3_COMPILE_NGMODULE__PRE_NGCC__ = preR3NgModuleCompile;\n/** @type {?} */\nvar R3_COMPILE_PIPE__PRE_NGCC__ = noop;\n/** @type {?} */\nvar ivyEnable__PRE_NGCC__ = false;\n/** @type {?} */\nexport var ivyEnabled = ivyEnable__PRE_NGCC__;\n/** @type {?} */\nexport var R3_COMPILE_COMPONENT = R3_COMPILE_COMPONENT__PRE_NGCC__;\n/** @type {?} */\nexport var R3_COMPILE_DIRECTIVE = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\n/** @type {?} */\nexport var R3_COMPILE_INJECTABLE = R3_COMPILE_INJECTABLE__PRE_NGCC__;\n/** @type {?} */\nexport var R3_COMPILE_NGMODULE = R3_COMPILE_NGMODULE__PRE_NGCC__;\n/** @type {?} */\nexport var R3_COMPILE_PIPE = R3_COMPILE_PIPE__PRE_NGCC__;\n/**\n * @param {?} moduleType\n * @param {?} metadata\n * @return {?}\n */\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    /** @type {?} */\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = imports.concat([metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/** @type {?} */\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ0 = GET_PROPERTY_NAME;\n/** @type {?} */\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 }, GET_PROPERTY_NAME);\n/** @type {?} */\nvar EMPTY_ARRAY = [];\n/**\n * @param {?} type\n * @param {?=} provider\n * @return {?}\n */\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        /** @type {?} */\n        var reflectionCapabilities = new ReflectionCapabilities();\n        /** @type {?} */\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ (deps_1)))))(); };\n    }\n    if (USE_VALUE in provider) {\n        /** @type {?} */\n        var valueProvider_1 = (/** @type {?} */ (provider));\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        var existingProvider_1 = (/** @type {?} */ (provider));\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        /** @type {?} */\n        var factoryProvider_1 = (/** @type {?} */ (provider));\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, injectArgs(factoryProvider_1.deps || EMPTY_ARRAY)); };\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        /** @type {?} */\n        var classProvider_1 = (/** @type {?} */ (provider));\n        /** @type {?} */\n        var deps_2 = (/** @type {?} */ (provider)).deps;\n        if (!deps_2) {\n            /** @type {?} */\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            var _a;\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, [void 0].concat(injectArgs(deps_2))))();\n        };\n    }\n    else {\n        /** @type {?} */\n        var deps_3 = (/** @type {?} */ (provider)).deps;\n        if (!deps_3) {\n            /** @type {?} */\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ ((deps_3))))))(); };\n    }\n}\n/**\n * Supports \\@Injectable() in JIT mode for Render2.\n * @param {?} injectableType\n * @param {?} options\n * @return {?}\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        /** @nocollapse */ injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\nexport { ɵ0 };\n//# sourceMappingURL=ivy_switch_legacy.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description Represents the version of Angular\n *\n *\n */\nvar /**\n * \\@description Represents the version of Angular\n *\n *\n */\nVersion = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@description Represents the version of Angular\n *\n *\n */\nexport { Version };\nif (false) {\n    /** @type {?} */\n    Version.prototype.major;\n    /** @type {?} */\n    Version.prototype.minor;\n    /** @type {?} */\n    Version.prototype.patch;\n    /** @type {?} */\n    Version.prototype.full;\n}\n/** @type {?} */\nexport var VERSION = new Version('7.0.0-beta.4-a2418a9037');\n//# sourceMappingURL=version.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nexport var ERROR_TYPE = 'ngType';\n/** @type {?} */\nexport var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n/** @type {?} */\nexport var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n/** @type {?} */\nexport var ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error) {\n    return (/** @type {?} */ (error))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n//# sourceMappingURL=errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError } from './errors';\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nvar /**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        /** @type {?} */\n        var originalError = this._findOriginalError(error);\n        /** @type {?} */\n        var context = this._findContext(error);\n        /** @type {?} */\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        /** @type {?} */\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nexport { ErrorHandler };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ErrorHandler.prototype._console;\n}\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message, originalError) {\n    /** @type {?} */\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    /** @type {?} */\n    var error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n//# sourceMappingURL=error_handler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { wrappedError } from '../error_handler';\nimport { ERROR_ORIGINAL_ERROR } from '../errors';\nimport { stringify } from '../util';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    /** @type {?} */\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        /** @type {?} */\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        /** @type {?} */\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\nexport function InjectionError() { }\n/** @type {?} */\nInjectionError.prototype.keys;\n/** @type {?} */\nInjectionError.prototype.injectors;\n/** @type {?} */\nInjectionError.prototype.constructResolvingMessage;\n/** @type {?} */\nInjectionError.prototype.addKey;\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    /** @type {?} */\n    var keys = [key];\n    /** @type {?} */\n    var errMsg = constructResolvingMessage(keys);\n    /** @type {?} */\n    var error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc, params) {\n    /** @type {?} */\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        /** @type {?} */\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n//# sourceMappingURL=reflective_errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringify } from '../util';\nimport { resolveForwardRef } from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar /**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nexport { ReflectiveKey };\nif (false) {\n    /** @type {?} */\n    ReflectiveKey.prototype.displayName;\n    /** @type {?} */\n    ReflectiveKey.prototype.token;\n    /** @type {?} */\n    ReflectiveKey.prototype.id;\n}\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        /** @type {?} */\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nexport { KeyRegistry };\nif (false) {\n    /** @type {?} */\n    KeyRegistry.prototype._allKeys;\n}\n/** @type {?} */\nvar _globalKeyRegistry = new KeyRegistry();\n//# sourceMappingURL=reflective_key.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar /**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nReflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport { Reflector };\nif (false) {\n    /** @type {?} */\n    Reflector.prototype.reflectionCapabilities;\n}\n//# sourceMappingURL=reflector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { reflector } from '../reflection/reflection';\nimport { Type } from '../type';\nimport { resolveForwardRef } from './forward_ref';\nimport { InjectionToken } from './injection_token';\nimport { Inject, Optional, Self, SkipSelf } from './metadata';\nimport { invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError } from './reflective_errors';\nimport { ReflectiveKey } from './reflective_key';\n/**\n * @record\n */\nfunction NormalizedProvider() { }\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar /**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport { ReflectiveDependency };\nif (false) {\n    /** @type {?} */\n    ReflectiveDependency.prototype.key;\n    /** @type {?} */\n    ReflectiveDependency.prototype.optional;\n    /** @type {?} */\n    ReflectiveDependency.prototype.visibility;\n}\n/** @type {?} */\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a `Provider` used by the `Injector`.\n *\n * \\@usageNotes\n * This is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\nexport function ResolvedReflectiveProvider() { }\n/**\n * A key, usually a `Type<any>`.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.key;\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.resolvedFactories;\n/**\n * Indicates if the provider is a multi-provider or a regular provider.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.multiProvider;\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\nexport { ResolvedReflectiveProvider_ };\nif (false) {\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.resolvedFactory;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.key;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.resolvedFactories;\n    /** @type {?} */\n    ResolvedReflectiveProvider_.prototype.multiProvider;\n}\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@experimental\n */\nvar /**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@experimental\n */\nResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@experimental\n */\nexport { ResolvedReflectiveFactory };\nif (false) {\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     * @type {?}\n     */\n    ResolvedReflectiveFactory.prototype.factory;\n    /**\n     * Arguments (dependencies) to the `factory` function.\n     * @type {?}\n     */\n    ResolvedReflectiveFactory.prototype.dependencies;\n}\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    /** @type {?} */\n    var factoryFn;\n    /** @type {?} */\n    var resolvedDeps;\n    if (provider.useClass) {\n        /** @type {?} */\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers) {\n    /** @type {?} */\n    var normalized = _normalizeProviders(providers, []);\n    /** @type {?} */\n    var resolved = normalized.map(resolveReflectiveProvider);\n    /** @type {?} */\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        var provider = providers[i];\n        /** @type {?} */\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            /** @type {?} */\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nexport function constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        /** @type {?} */\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    /** @type {?} */\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    /** @type {?} */\n    var token = null;\n    /** @type {?} */\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    /** @type {?} */\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        /** @type {?} */\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n//# sourceMappingURL=reflective_provider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injector, THROW_IF_NOT_FOUND } from './injector';\nimport { Self, SkipSelf } from './metadata';\nimport { cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError } from './reflective_errors';\nimport { ReflectiveKey } from './reflective_key';\nimport { resolveReflectiveProviders } from './reflective_provider';\n/** @type {?} */\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar /**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        /** @type {?} */\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nexport { ReflectiveInjector };\nif (false) {\n    /**\n     * Parent of this injector.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var parent = ReflectiveInjector.resolveAndCreate([]);\n     * var child = parent.resolveAndCreateChild([]);\n     * expect(child.parent).toBe(parent);\n     * ```\n     * @abstract\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.parent = function () { };\n    /**\n     * Resolves an array of providers and creates a child injector from those providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n     * var child = parent.resolveAndCreateChild([ChildProvider]);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n    /**\n     * Creates a child injector from previously resolved providers.\n     *\n     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n     * -->\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class ParentProvider {}\n     * class ChildProvider {}\n     *\n     * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n     * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n     *\n     * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n     * var child = parent.createChildFromResolved(childProviders);\n     *\n     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n     * ```\n     * @abstract\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n    /**\n     * Resolves a provider and instantiates an object in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     *\n     * var car = injector.resolveAndInstantiate(Car);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n    /**\n     * Instantiates an object using a resolved provider in the context of the injector.\n     *\n     * The created object does not get cached by the injector.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n     * var carProvider = ReflectiveInjector.resolve([Car])[0];\n     * var car = injector.instantiateResolved(carProvider);\n     * expect(car.engine).toBe(injector.get(Engine));\n     * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n     * ```\n     * @abstract\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n    /**\n     * @abstract\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n}\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        /** @type {?} */\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        /** @type {?} */\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        /** @type {?} */\n        var inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            /** @type {?} */\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory) {\n        var _this = this;\n        /** @type {?} */\n        var factory = ResolvedReflectiveFactory.factory;\n        /** @type {?} */\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        /** @type {?} */\n        var obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        /** @type {?} */\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        /** @type {?} */\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            /** @type {?} */\n            var inj_ = /** @type {?} */ (inj);\n            /** @type {?} */\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nexport { ReflectiveInjector_ };\nif (false) {\n    /** @type {?} */\n    ReflectiveInjector_.INJECTOR_KEY;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ReflectiveInjector_.prototype._constructionCounter;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ReflectiveInjector_.prototype._providers;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.parent;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.keyIds;\n    /** @type {?} */\n    ReflectiveInjector_.prototype.objs;\n}\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    /** @type {?} */\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n//# sourceMappingURL=reflective_injector.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isPromise } from '../src/util/lang';\nimport { Inject, Injectable, InjectionToken, Optional } from './di';\n/** *\n * A function that will be executed when an application is initialized.\n  @type {?} */\nexport var APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        /** @type {?} */\n        var asyncInitPromises = [];\n        /** @type {?} */\n        var complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                /** @type {?} */\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n    ]; };\n    return ApplicationInitStatus;\n}());\nexport { ApplicationInitStatus };\nif (false) {\n    /** @type {?} */\n    ApplicationInitStatus.prototype.resolve;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.reject;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.initialized;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.donePromise;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.done;\n    /** @type {?} */\n    ApplicationInitStatus.prototype.appInits;\n}\n//# sourceMappingURL=application_init.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from './di';\n/** *\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n  @type {?} */\nexport var APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/** *\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n  @type {?} */\nexport var APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/** *\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n  @type {?} */\nexport var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/** *\n * A token that indicates an opaque platform id.\n * \\@experimental\n  @type {?} */\nexport var PLATFORM_ID = new InjectionToken('Platform ID');\n/** *\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n  @type {?} */\nexport var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/** *\n * A token which indicates the root directory of the application\n * \\@experimental\n  @type {?} */\nexport var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n//# sourceMappingURL=application_tokens.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from './di';\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    return Console;\n}());\nexport { Console };\n//# sourceMappingURL=console.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '../di/injectable';\nimport { InjectionToken } from '../di/injection_token';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n * @template T\n */\nvar /**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n * @template T\n */\nModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n * @template T\n */\nexport { ModuleWithComponentFactories };\nif (false) {\n    /** @type {?} */\n    ModuleWithComponentFactories.prototype.ngModuleFactory;\n    /** @type {?} */\n    ModuleWithComponentFactories.prototype.componentFactories;\n}\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.getModuleId = /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { return undefined; };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    return Compiler;\n}());\nexport { Compiler };\n/** @typedef {?} */\nvar CompilerOptions;\nexport { CompilerOptions };\n/** *\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n  @type {?} */\nexport var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar /**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nCompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nexport { CompilerFactory };\nif (false) {\n    /**\n     * @abstract\n     * @param {?=} options\n     * @return {?}\n     */\n    CompilerFactory.prototype.createCompiler = function (options) { };\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { global } from '../util';\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\nexport function WtfScopeFn() { }\n/**\n * @record\n */\nfunction WTF() { }\n/** @type {?} */\nWTF.prototype.trace;\n/**\n * @record\n */\nfunction Trace() { }\n/** @type {?} */\nTrace.prototype.events;\n/** @type {?} */\nTrace.prototype.leaveScope;\n/** @type {?} */\nTrace.prototype.beginTimeRange;\n/** @type {?} */\nTrace.prototype.endTimeRange;\n/**\n * @record\n */\nexport function Range() { }\n/**\n * @record\n */\nfunction Events() { }\n/** @type {?} */\nEvents.prototype.createScope;\n/**\n * @record\n */\nexport function Scope() { }\n/** @type {?} */\nvar trace;\n/** @type {?} */\nvar events;\n/**\n * @return {?}\n */\nexport function detectWTF() {\n    /** @type {?} */\n    var wtf = (/** @type {?} */ (global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n//# sourceMappingURL=wtf_impl.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar /**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nNgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        /** @type {?} */\n        var self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new (/** @type {?} */ ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec'])));\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        /** @type {?} */\n        var zone = (/** @type {?} */ ((this)))._inner;\n        /** @type {?} */\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nexport { NgZone };\nif (false) {\n    /** @type {?} */\n    NgZone.prototype.hasPendingMicrotasks;\n    /** @type {?} */\n    NgZone.prototype.hasPendingMacrotasks;\n    /**\n     * Whether there are no outstanding microtasks or macrotasks.\n     * @type {?}\n     */\n    NgZone.prototype.isStable;\n    /**\n     * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n     * @type {?}\n     */\n    NgZone.prototype.onUnstable;\n    /**\n     * Notifies when there is no more microtasks enqueued in the current VM Turn.\n     * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n     * For this reason this event can fire multiple times per VM Turn.\n     * @type {?}\n     */\n    NgZone.prototype.onMicrotaskEmpty;\n    /**\n     * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n     * implies we are about to relinquish VM turn.\n     * This event gets called just once.\n     * @type {?}\n     */\n    NgZone.prototype.onStable;\n    /**\n     * Notifies that an error has been delivered.\n     * @type {?}\n     */\n    NgZone.prototype.onError;\n}\n/**\n * @return {?}\n */\nfunction noop() { }\n/** @type {?} */\nvar EMPTY_PAYLOAD = {};\n/**\n * @record\n */\nfunction NgZonePrivate() { }\n/** @type {?} */\nNgZonePrivate.prototype._outer;\n/** @type {?} */\nNgZonePrivate.prototype._inner;\n/** @type {?} */\nNgZonePrivate.prototype._nesting;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMacrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.isStable;\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar /**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nNoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport { NoopNgZone };\nif (false) {\n    /** @type {?} */\n    NoopNgZone.prototype.hasPendingMicrotasks;\n    /** @type {?} */\n    NoopNgZone.prototype.hasPendingMacrotasks;\n    /** @type {?} */\n    NoopNgZone.prototype.isStable;\n    /** @type {?} */\n    NoopNgZone.prototype.onUnstable;\n    /** @type {?} */\n    NoopNgZone.prototype.onMicrotaskEmpty;\n    /** @type {?} */\n    NoopNgZone.prototype.onStable;\n    /** @type {?} */\n    NoopNgZone.prototype.onError;\n}\n//# sourceMappingURL=ng_zone.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '../di';\nimport { scheduleMicroTask } from '../util';\nimport { NgZone } from '../zone/ng_zone';\n/**\n * @record\n */\nexport function PendingMacrotask() { }\n/** @type {?} */\nPendingMacrotask.prototype.source;\n/** @type {?} */\nPendingMacrotask.prototype.creationLocation;\n/** @type {?|undefined} */\nPendingMacrotask.prototype.runCount;\n/** @type {?} */\nPendingMacrotask.prototype.data;\n/**\n * @record\n */\nexport function TaskData() { }\n/** @type {?|undefined} */\nTaskData.prototype.target;\n/** @type {?|undefined} */\nTaskData.prototype.delay;\n/** @type {?|undefined} */\nTaskData.prototype.isPeriodic;\n/** @typedef {?} */\nvar DoneCallback;\nexport { DoneCallback };\n/** @typedef {?} */\nvar UpdateCallback;\nexport { UpdateCallback };\n/**\n * @record\n */\nfunction WaitCallback() { }\n/** @type {?} */\nWaitCallback.prototype.timeoutId;\n/** @type {?} */\nWaitCallback.prototype.doneCb;\n/** @type {?|undefined} */\nWaitCallback.prototype.updateCb;\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    /**\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    /** @type {?} */\n                    var cb = /** @type {?} */ ((_this._callbacks.pop()));\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            /** @type {?} */\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.getPendingTasks = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        // Copy the tasks data so that we don't leak tasks.\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: /** @type {?} */ ((/** @type {?} */ (t)).creationLocation),\n                data: t.data\n            };\n        });\n    };\n    /**\n     * @param {?} cb\n     * @param {?=} timeout\n     * @param {?=} updateCb\n     * @return {?}\n     */\n    Testability.prototype.addCallback = /**\n     * @param {?} cb\n     * @param {?=} timeout\n     * @param {?=} updateCb\n     * @return {?}\n     */\n    function (cb, timeout, updateCb) {\n        var _this = this;\n        /** @type {?} */\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push(/** @type {?} */ ({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb }));\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param {?} doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param {?=} timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param {?=} updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param {?} doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param {?=} timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param {?=} updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     * @return {?}\n     */\n    function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(/** @type {?} */ (doneCb), timeout, /** @type {?} */ (updateCb));\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone }\n    ]; };\n    return Testability;\n}());\nexport { Testability };\nif (false) {\n    /** @type {?} */\n    Testability.prototype._pendingCount;\n    /** @type {?} */\n    Testability.prototype._isZoneStable;\n    /**\n     * Whether any work was done since the last 'whenStable' callback. This is\n     * useful to detect if this could have potentially destabilized another\n     * component while it is stabilizing.\n     * \\@internal\n     * @type {?}\n     */\n    Testability.prototype._didWork;\n    /** @type {?} */\n    Testability.prototype._callbacks;\n    /** @type {?} */\n    Testability.prototype.taskTrackingZone;\n    /** @type {?} */\n    Testability.prototype._ngZone;\n}\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\nexport { TestabilityRegistry };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    TestabilityRegistry.prototype._applications;\n}\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\nexport function GetTestability() { }\n/** @type {?} */\nGetTestability.prototype.addToWindow;\n/** @type {?} */\nGetTestability.prototype.findTestabilityInTree;\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\n/** @type {?} */\nvar _testabilityGetter = new _NoopGetTestability();\n//# sourceMappingURL=testability.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Observable, merge } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { ApplicationInitStatus } from './application_init';\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER } from './application_tokens';\nimport { Console } from './console';\nimport { Injectable, InjectionToken, Injector } from './di';\nimport { ErrorHandler } from './error_handler';\nimport { isDevMode } from './is_dev_mode';\nimport { CompilerFactory } from './linker/compiler';\nimport { ComponentFactory } from './linker/component_factory';\nimport { ComponentFactoryBoundToModule, ComponentFactoryResolver } from './linker/component_factory_resolver';\nimport { NgModuleRef } from './linker/ng_module_factory';\nimport { wtfCreateScope, wtfLeave } from './profile/profile';\nimport { assertNgModuleType } from './render3/assert';\nimport { NgModuleFactory as R3NgModuleFactory } from './render3/ng_module_ref';\nimport { Testability, TestabilityRegistry } from './testability/testability';\nimport { scheduleMicroTask, stringify } from './util';\nimport { isPromise } from './util/lang';\nimport { NgZone, NoopNgZone } from './zone/ng_zone';\n/** @type {?} */\nvar _platform;\n/** @type {?} */\nvar compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n/**\n * @template M\n * @param {?} injector\n * @param {?} options\n * @param {?} moduleType\n * @return {?}\n */\nfunction compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n    /** @type {?} */\n    var compilerFactory = injector.get(CompilerFactory);\n    /** @type {?} */\n    var compiler = compilerFactory.createCompiler([options]);\n    return compiler.compileModuleAsync(moduleType);\n}\n/**\n * @template M\n * @param {?} injector\n * @param {?} options\n * @param {?} moduleType\n * @return {?}\n */\nfunction compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n    ngDevMode && assertNgModuleType(moduleType);\n    return Promise.resolve(new R3NgModuleFactory(moduleType));\n}\n/** @type {?} */\nexport var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar /**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nNgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nexport { NgProbeToken };\nif (false) {\n    /** @type {?} */\n    NgProbeToken.prototype.name;\n    /** @type {?} */\n    NgProbeToken.prototype.token;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    /** @type {?} */\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    /** @type {?} */\n    var desc = \"Platform: \" + name;\n    /** @type {?} */\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        /** @type {?} */\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                /** @type {?} */\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken) {\n    /** @type {?} */\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n * @record\n */\nexport function BootstrapOptions() { }\n/**\n * Optionally specify which `NgZone` should be used.\n *\n * - Provide your own `NgZone` instance.\n * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n * - `noop` - Use `NoopNgZone` which does nothing.\n * @type {?|undefined}\n */\nBootstrapOptions.prototype.ngZone;\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        /** @type {?} */\n        var ngZoneOption = options ? options.ngZone : undefined;\n        /** @type {?} */\n        var ngZone = getNgZone(ngZoneOption);\n        /** @type {?} */\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            /** @type {?} */\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            /** @type {?} */\n            var moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            /** @type {?} */\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                /** @type {?} */\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        /** @type {?} */\n        var options = optionsReducer({}, compilerOptions);\n        return compileNgModuleFactory(this.injector, options, moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        /** @type {?} */\n        var appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector }\n    ]; };\n    return PlatformRef;\n}());\nexport { PlatformRef };\nif (false) {\n    /** @type {?} */\n    PlatformRef.prototype._modules;\n    /** @type {?} */\n    PlatformRef.prototype._destroyListeners;\n    /** @type {?} */\n    PlatformRef.prototype._destroyed;\n    /** @type {?} */\n    PlatformRef.prototype._injector;\n}\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    /** @type {?} */\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        /** @type {?} */\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = tslib_1.__assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        /** @type {?} */\n        var isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        /** @type {?} */\n        var isStable = new Observable(function (observer) {\n            /** @type {?} */\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            /** @type {?} */\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge(isCurrentlyStable, isStable.pipe(share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * \\@usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * \\@usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        /** @type {?} */\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        /** @type {?} */\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        /** @type {?} */\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        /** @type {?} */\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        /** @type {?} */\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        /** @type {?} */\n        var scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        /** @type {?} */\n        var view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        /** @type {?} */\n        var view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        /** @type {?} */\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Console },\n        { type: Injector },\n        { type: ErrorHandler },\n        { type: ComponentFactoryResolver },\n        { type: ApplicationInitStatus }\n    ]; };\n    return ApplicationRef;\n}());\nexport { ApplicationRef };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ApplicationRef._tickScope;\n    /** @type {?} */\n    ApplicationRef.prototype._bootstrapListeners;\n    /** @type {?} */\n    ApplicationRef.prototype._views;\n    /** @type {?} */\n    ApplicationRef.prototype._runningTick;\n    /** @type {?} */\n    ApplicationRef.prototype._enforceNoNewChanges;\n    /** @type {?} */\n    ApplicationRef.prototype._stable;\n    /**\n     * Get a list of component types registered to this application.\n     * This list is populated even before the component is created.\n     * @type {?}\n     */\n    ApplicationRef.prototype.componentTypes;\n    /**\n     * Get a list of components registered to this application.\n     * @type {?}\n     */\n    ApplicationRef.prototype.components;\n    /**\n     * Returns an Observable that indicates when the application is stable or unstable.\n     * @type {?}\n     */\n    ApplicationRef.prototype.isStable;\n    /** @type {?} */\n    ApplicationRef.prototype._zone;\n    /** @type {?} */\n    ApplicationRef.prototype._console;\n    /** @type {?} */\n    ApplicationRef.prototype._injector;\n    /** @type {?} */\n    ApplicationRef.prototype._exceptionHandler;\n    /** @type {?} */\n    ApplicationRef.prototype._componentFactoryResolver;\n    /** @type {?} */\n    ApplicationRef.prototype._initStatus;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    /** @type {?} */\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n//# sourceMappingURL=application_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { NgZone } from './zone/ng_zone';\n//# sourceMappingURL=zone.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter } from '../event_emitter';\nimport { getSymbolIterator } from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * @template T\n */\nvar /**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * @template T\n */\nQueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * @template T\n */\nexport { QueryList };\nif (false) {\n    /** @type {?} */\n    QueryList.prototype.dirty;\n    /** @type {?} */\n    QueryList.prototype._results;\n    /** @type {?} */\n    QueryList.prototype.changes;\n    /** @type {?} */\n    QueryList.prototype.length;\n    /** @type {?} */\n    QueryList.prototype.first;\n    /** @type {?} */\n    QueryList.prototype.last;\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        /** @type {?} */\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n//# sourceMappingURL=query_list.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, Optional } from '../di';\nimport { Compiler } from './compiler';\n/** @type {?} */\nvar _SEPARATOR = '#';\n/** @type {?} */\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar /**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nSystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nexport { SystemJsNgModuleLoaderConfig };\nif (false) {\n    /**\n     * Prefix to add when computing the name of the factory module for a given module name.\n     * @type {?}\n     */\n    SystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n    /**\n     * Suffix to add when computing the name of the factory module for a given module name.\n     * @type {?}\n     */\n    SystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n/** @type {?} */\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        /** @type {?} */\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        /** @type {?} */\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\nexport { SystemJsNgModuleLoader };\nif (false) {\n    /** @type {?} */\n    SystemJsNgModuleLoader.prototype._config;\n    /** @type {?} */\n    SystemJsNgModuleLoader.prototype._compiler;\n}\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n//# sourceMappingURL=system_js_ng_module_factory_loader.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ChangeDetectorRef } from '../change_detection/change_detector_ref';\n/**\n * @abstract\n */\nvar /**\n * @abstract\n */\nViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * @abstract\n */\nexport { ViewRef };\nif (false) {\n    /**\n     * Destroys the view and all of the data structures associated with it.\n     * @abstract\n     * @return {?}\n     */\n    ViewRef.prototype.destroy = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ViewRef.prototype.destroyed = function () { };\n    /**\n     * @abstract\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef.prototype.onDestroy = function (callback) { };\n}\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * \\@usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n * @template C\n */\nvar /**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * \\@usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n * @template C\n */\nEmbeddedViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * \\@usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n * @template C\n */\nexport { EmbeddedViewRef };\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.rootNodes = function () { };\n}\n/**\n * @record\n */\nexport function InternalViewRef() { }\n/** @type {?} */\nInternalViewRef.prototype.detachFromAppRef;\n/** @type {?} */\nInternalViewRef.prototype.attachToAppRef;\n//# sourceMappingURL=view_ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\nexport { EventListener };\nif (false) {\n    /** @type {?} */\n    EventListener.prototype.name;\n    /** @type {?} */\n    EventListener.prototype.callback;\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar /**\n * \\@experimental All debugging apis are currently experimental.\n */\nDebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this.nativeNode = nativeNode;\n        this._debugContext = _debugContext;\n        this.listeners = [];\n        this.parent = null;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport { DebugNode };\nif (false) {\n    /** @type {?} */\n    DebugNode.prototype.listeners;\n    /** @type {?} */\n    DebugNode.prototype.parent;\n    /** @type {?} */\n    DebugNode.prototype.nativeNode;\n    /** @type {?} */\n    DebugNode.prototype._debugContext;\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar /**\n * \\@experimental All debugging apis are currently experimental.\n */\nDebugElement = /** @class */ (function (_super) {\n    tslib_1.__extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        /** @type {?} */\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var _a;\n        /** @type {?} */\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        /** @type {?} */\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        /** @type {?} */\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport { DebugElement };\nif (false) {\n    /** @type {?} */\n    DebugElement.prototype.name;\n    /** @type {?} */\n    DebugElement.prototype.properties;\n    /** @type {?} */\n    DebugElement.prototype.attributes;\n    /** @type {?} */\n    DebugElement.prototype.classes;\n    /** @type {?} */\n    DebugElement.prototype.styles;\n    /** @type {?} */\n    DebugElement.prototype.childNodes;\n    /** @type {?} */\n    DebugElement.prototype.nativeElement;\n}\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n/** @type {?} */\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes() {\n    return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n * @template T\n */\nexport function Predicate() { }\n//# sourceMappingURL=debug_node.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { looseIdentical, stringify } from '../../util';\nimport { isListLikeIterable, iterateListLike } from '../change_detection_util';\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nexport { DefaultIterableDifferFactory };\n/** @type {?} */\nvar trackByIdentity = function (index, item) { return item; };\nvar ɵ0 = trackByIdentity;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @template V\n */\nvar /**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @template V\n */\nDefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var nextIt = this._itHead;\n        /** @type {?} */\n        var nextRemove = this._removalsHead;\n        /** @type {?} */\n        var addRemoveOffset = 0;\n        /** @type {?} */\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            /** @type {?} */\n            var record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            /** @type {?} */\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            /** @type {?} */\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    /** @type {?} */\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    /** @type {?} */\n                    var localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            /** @type {?} */\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            /** @type {?} */\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        /** @type {?} */\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        /** @type {?} */\n        var record = this._itHead;\n        /** @type {?} */\n        var mayBeDirty = false;\n        /** @type {?} */\n        var index;\n        /** @type {?} */\n        var item;\n        /** @type {?} */\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            /** @type {?} */\n            var record = void 0;\n            /** @type {?} */\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        /** @type {?} */\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        /** @type {?} */\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            /** @type {?} */\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        /** @type {?} */\n        var prev = record._prevRemoved;\n        /** @type {?} */\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        /** @type {?} */\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        /** @type {?} */\n        var prev = record._prev;\n        /** @type {?} */\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @template V\n */\nexport { DefaultIterableDiffer };\nif (false) {\n    /** @type {?} */\n    DefaultIterableDiffer.prototype.length;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype.collection;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._linkedRecords;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._unlinkedRecords;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._previousItHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._itHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._itTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._additionsHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._additionsTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._movesHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._movesTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._removalsHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._removalsTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._identityChangesHead;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._identityChangesTail;\n    /** @type {?} */\n    DefaultIterableDiffer.prototype._trackByFn;\n}\n/**\n * @template V\n */\nvar /**\n * @template V\n */\nIterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n/**\n * @template V\n */\nexport { IterableChangeRecord_ };\nif (false) {\n    /** @type {?} */\n    IterableChangeRecord_.prototype.currentIndex;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.previousIndex;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextPrevious;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prev;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._next;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prevDup;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextDup;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._prevRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextAdded;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextMoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    IterableChangeRecord_.prototype._nextIdentityChange;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.item;\n    /** @type {?} */\n    IterableChangeRecord_.prototype.trackById;\n}\n/**\n * @template V\n */\nvar /**\n * @template V\n */\n_DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        /** @type {?} */\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        /** @type {?} */\n        var prev = record._prevDup;\n        /** @type {?} */\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    _DuplicateItemRecordList.prototype._head;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    _DuplicateItemRecordList.prototype._tail;\n}\n/**\n * @template V\n */\nvar /**\n * @template V\n */\n_DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        /** @type {?} */\n        var key = record.trackById;\n        /** @type {?} */\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        /** @type {?} */\n        var key = trackById;\n        /** @type {?} */\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        /** @type {?} */\n        var key = record.trackById;\n        /** @type {?} */\n        var recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nif (false) {\n    /** @type {?} */\n    _DuplicateMap.prototype.map;\n}\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    /** @type {?} */\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    /** @type {?} */\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\nexport { ɵ0 };\n//# sourceMappingURL=default_iterable_differ.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { looseIdentical, stringify } from '../../util';\nimport { isJsObject } from '../change_detection_util';\n/**\n * @template K, V\n */\nvar /**\n * @template K, V\n */\nDefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\n/**\n * @template K, V\n */\nexport { DefaultKeyValueDifferFactory };\n/**\n * @template K, V\n */\nvar /**\n * @template K, V\n */\nDefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        /** @type {?} */\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                /** @type {?} */\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            /** @type {?} */\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            /** @type {?} */\n            var record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            /** @type {?} */\n            var prev = record_1._prev;\n            /** @type {?} */\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        /** @type {?} */\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            /** @type {?} */\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * @template K, V\n */\nexport { DefaultKeyValueDiffer };\nif (false) {\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._records;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._mapHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._appendAfter;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._previousMapHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._changesHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._changesTail;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._additionsHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._additionsTail;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._removalsHead;\n    /** @type {?} */\n    DefaultKeyValueDiffer.prototype._removalsTail;\n}\n/**\n * @template K, V\n */\nvar /**\n * @template K, V\n */\nKeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\nif (false) {\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.previousValue;\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.currentValue;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextPrevious;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._next;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._prev;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextAdded;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextRemoved;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    KeyValueChangeRecord_.prototype._nextChanged;\n    /** @type {?} */\n    KeyValueChangeRecord_.prototype.key;\n}\n//# sourceMappingURL=default_keyvalue_differ.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjectable } from '../../di/defs';\nimport { Optional, SkipSelf } from '../../di/metadata';\nimport { DefaultIterableDifferFactory } from '../differs/default_iterable_differ';\n/** @typedef {?} */\nvar NgIterable;\nexport { NgIterable };\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n *\n * @record\n * @template V\n */\nexport function IterableDiffer() { }\n/**\n * Compute a difference between the previous state and the new `object` state.\n *\n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nIterableDiffer.prototype.diff;\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n *\n * @record\n * @template V\n */\nexport function IterableChanges() { }\n/**\n * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nIterableChanges.prototype.forEachItem;\n/**\n * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n * new `Iterable`.\n *\n * NOTE: These are not necessarily the actual operations which were applied to the original\n * `Iterable`, rather these are a set of computed operations which may not be the same as the\n * ones applied.\n *\n * \\@param record A change which needs to be applied\n * \\@param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n *        original `Iterable` location, where as `previousIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * \\@param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n *        original `Iterable` location, where as `currentIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * @type {?}\n */\nIterableChanges.prototype.forEachOperation;\n/**\n * Iterate over changes in the order of original `Iterable` showing where the original items\n * have moved.\n * @type {?}\n */\nIterableChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nIterableChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all moved items.\n * @type {?}\n */\nIterableChanges.prototype.forEachMovedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nIterableChanges.prototype.forEachRemovedItem;\n/**\n * Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n * changed.\n * @type {?}\n */\nIterableChanges.prototype.forEachIdentityChange;\n/**\n * Record representing the item change information.\n *\n *\n * @record\n * @template V\n */\nexport function IterableChangeRecord() { }\n/**\n * Current index of the item in `Iterable` or null if removed.\n * @type {?}\n */\nIterableChangeRecord.prototype.currentIndex;\n/**\n * Previous index of the item in `Iterable` or null if added.\n * @type {?}\n */\nIterableChangeRecord.prototype.previousIndex;\n/**\n * The item.\n * @type {?}\n */\nIterableChangeRecord.prototype.item;\n/**\n * Track by identity as computed by the `TrackByFunction`.\n * @type {?}\n */\nIterableChangeRecord.prototype.trackById;\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n * @template V\n */\nexport function CollectionChangeRecord() { }\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n *\n * @record\n * @template T\n */\nexport function TrackByFunction() { }\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n *\n * @record\n */\nexport function IterableDifferFactory() { }\n/** @type {?} */\nIterableDifferFactory.prototype.supports;\n/** @type {?} */\nIterableDifferFactory.prototype.create;\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            /** @type {?} */\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        /** @type {?} */\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    /** @nocollapse */ IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nexport { IterableDiffers };\nif (false) {\n    /** @type {?} */\n    IterableDiffers.ngInjectableDef;\n    /**\n     * @deprecated v4.0.0 - Should be private\n     * @type {?}\n     */\n    IterableDiffers.prototype.factories;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n//# sourceMappingURL=iterable_differs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, SkipSelf } from '../../di';\n/**\n * A differ that tracks changes made to an object over time.\n *\n *\n * @record\n * @template K, V\n */\nexport function KeyValueDiffer() { }\n/**\n * Compute a difference between the previous state and the new `object` state.\n *\n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n/**\n * Compute a difference between the previous state and the new `object` state.\n *\n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n *\n * @record\n * @template K, V\n */\nexport function KeyValueChanges() { }\n/**\n * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachItem;\n/**\n * Iterate over changes in the order of original Map showing where the original items\n * have moved.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all keys for which values have changed.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachChangedItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachRemovedItem;\n/**\n * Record representing the item change information.\n *\n *\n * @record\n * @template K, V\n */\nexport function KeyValueChangeRecord() { }\n/**\n * Current key in the Map.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.key;\n/**\n * Current value for the key or `null` if removed.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.currentValue;\n/**\n * Previous value for the key or `null` if added.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.previousValue;\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n *\n * @record\n */\nexport function KeyValueDifferFactory() { }\n/**\n * Test to see if the differ knows how to diff this kind of object.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.supports;\n/**\n * Create a `KeyValueDiffer`.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.create;\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar /**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nKeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            /** @type {?} */\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        /** @type {?} */\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nexport { KeyValueDiffers };\nif (false) {\n    /**\n     * @deprecated v4.0.0 - Should be private.\n     * @type {?}\n     */\n    KeyValueDiffers.prototype.factories;\n}\n//# sourceMappingURL=keyvalue_differs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_INITIALIZER, ApplicationInitStatus } from './application_init';\nimport { ApplicationRef } from './application_ref';\nimport { APP_ID_RANDOM_PROVIDER } from './application_tokens';\nimport { IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers } from './change_detection/change_detection';\nimport { Console } from './console';\nimport { Injector } from './di';\nimport { Inject, Optional, SkipSelf } from './di/metadata';\nimport { ErrorHandler } from './error_handler';\nimport { LOCALE_ID } from './i18n/tokens';\nimport { ComponentFactoryResolver } from './linker';\nimport { Compiler } from './linker/compiler';\nimport { NgModule } from './metadata';\nimport { NgZone } from './zone';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/** @type {?} */\nexport var APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef }\n    ]; };\n    return ApplicationModule;\n}());\nexport { ApplicationModule };\n//# sourceMappingURL=application_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// unsupported: template constraints.\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n * @template D\n */\nexport function DefinitionFactory() { }\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\nexport function NodeLogger() { }\n// unsupported: template constraints.\n/**\n * @record\n * @template DF\n */\nexport function Definition() { }\n/** @type {?} */\nDefinition.prototype.factory;\n/**\n * @record\n */\nexport function NgModuleDefinition() { }\n/** @type {?} */\nNgModuleDefinition.prototype.providers;\n/** @type {?} */\nNgModuleDefinition.prototype.providersByKey;\n/** @type {?} */\nNgModuleDefinition.prototype.modules;\n/** @type {?} */\nNgModuleDefinition.prototype.isRoot;\n/**\n * @record\n */\nexport function NgModuleDefinitionFactory() { }\n/**\n * @record\n */\nexport function ViewDefinition() { }\n/** @type {?} */\nViewDefinition.prototype.flags;\n/** @type {?} */\nViewDefinition.prototype.updateDirectives;\n/** @type {?} */\nViewDefinition.prototype.updateRenderer;\n/** @type {?} */\nViewDefinition.prototype.handleEvent;\n/**\n * Order: Depth first.\n * Especially providers are before elements / anchors.\n * @type {?}\n */\nViewDefinition.prototype.nodes;\n/**\n * aggregated NodeFlags for all nodes *\n * @type {?}\n */\nViewDefinition.prototype.nodeFlags;\n/** @type {?} */\nViewDefinition.prototype.rootNodeFlags;\n/** @type {?} */\nViewDefinition.prototype.lastRenderRootNode;\n/** @type {?} */\nViewDefinition.prototype.bindingCount;\n/** @type {?} */\nViewDefinition.prototype.outputCount;\n/**\n * Binary or of all query ids that are matched by one of the nodes.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nViewDefinition.prototype.nodeMatchedQueries;\n/**\n * @record\n */\nexport function ViewDefinitionFactory() { }\n/**\n * @record\n */\nexport function ViewUpdateFn() { }\n/**\n * @record\n */\nexport function NodeCheckFn() { }\n/** @enum {number} */\nvar ArgumentType = {\n    Inline: 0, Dynamic: 1,\n};\nexport { ArgumentType };\n/**\n * @record\n */\nexport function ViewHandleEventFn() { }\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\nexport { ViewFlags };\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\nexport function NodeDef() { }\n/** @type {?} */\nNodeDef.prototype.flags;\n/** @type {?} */\nNodeDef.prototype.nodeIndex;\n/** @type {?} */\nNodeDef.prototype.checkIndex;\n/** @type {?} */\nNodeDef.prototype.parent;\n/** @type {?} */\nNodeDef.prototype.renderParent;\n/**\n * this is checked against NgContentDef.index to find matched nodes\n * @type {?}\n */\nNodeDef.prototype.ngContentIndex;\n/**\n * number of transitive children\n * @type {?}\n */\nNodeDef.prototype.childCount;\n/**\n * aggregated NodeFlags for all transitive children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.childFlags;\n/**\n * aggregated NodeFlags for all direct children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.directChildFlags;\n/** @type {?} */\nNodeDef.prototype.bindingIndex;\n/** @type {?} */\nNodeDef.prototype.bindings;\n/** @type {?} */\nNodeDef.prototype.bindingFlags;\n/** @type {?} */\nNodeDef.prototype.outputIndex;\n/** @type {?} */\nNodeDef.prototype.outputs;\n/**\n * references that the user placed on the element\n * @type {?}\n */\nNodeDef.prototype.references;\n/**\n * ids and value types of all queries that are matched by this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueries;\n/**\n * Binary or of all matched query ids of this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueryIds;\n/**\n * Binary or of all query ids that are matched by one of the children.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nNodeDef.prototype.childMatchedQueries;\n/** @type {?} */\nNodeDef.prototype.element;\n/** @type {?} */\nNodeDef.prototype.provider;\n/** @type {?} */\nNodeDef.prototype.text;\n/** @type {?} */\nNodeDef.prototype.query;\n/** @type {?} */\nNodeDef.prototype.ngContent;\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    TypeNgModule: 1073741824,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\nexport { NodeFlags };\n/**\n * @record\n */\nexport function BindingDef() { }\n/** @type {?} */\nBindingDef.prototype.flags;\n/** @type {?} */\nBindingDef.prototype.ns;\n/** @type {?} */\nBindingDef.prototype.name;\n/** @type {?} */\nBindingDef.prototype.nonMinifiedName;\n/** @type {?} */\nBindingDef.prototype.securityContext;\n/** @type {?} */\nBindingDef.prototype.suffix;\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\nexport { BindingFlags };\n/**\n * @record\n */\nexport function OutputDef() { }\n/** @type {?} */\nOutputDef.prototype.type;\n/** @type {?} */\nOutputDef.prototype.target;\n/** @type {?} */\nOutputDef.prototype.eventName;\n/** @type {?} */\nOutputDef.prototype.propName;\n/** @enum {number} */\nvar OutputType = {\n    ElementOutput: 0, DirectiveOutput: 1,\n};\nexport { OutputType };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\nexport { QueryValueType };\n/**\n * @record\n */\nexport function ElementDef() { }\n/** @type {?} */\nElementDef.prototype.name;\n/** @type {?} */\nElementDef.prototype.ns;\n/**\n * ns, name, value\n * @type {?}\n */\nElementDef.prototype.attrs;\n/** @type {?} */\nElementDef.prototype.template;\n/** @type {?} */\nElementDef.prototype.componentProvider;\n/** @type {?} */\nElementDef.prototype.componentRendererType;\n/** @type {?} */\nElementDef.prototype.componentView;\n/**\n * visible public providers for DI in the view,\n * as see from this element. This does not include private providers.\n * @type {?}\n */\nElementDef.prototype.publicProviders;\n/**\n * same as visiblePublicProviders, but also includes private providers\n * that are located on this element.\n * @type {?}\n */\nElementDef.prototype.allProviders;\n/** @type {?} */\nElementDef.prototype.handleEvent;\n/**\n * @record\n */\nexport function ElementHandleEventFn() { }\n/**\n * @record\n */\nexport function ProviderDef() { }\n/** @type {?} */\nProviderDef.prototype.token;\n/** @type {?} */\nProviderDef.prototype.value;\n/** @type {?} */\nProviderDef.prototype.deps;\n/**\n * @record\n */\nexport function NgModuleProviderDef() { }\n/** @type {?} */\nNgModuleProviderDef.prototype.flags;\n/** @type {?} */\nNgModuleProviderDef.prototype.index;\n/** @type {?} */\nNgModuleProviderDef.prototype.token;\n/** @type {?} */\nNgModuleProviderDef.prototype.value;\n/** @type {?} */\nNgModuleProviderDef.prototype.deps;\n/**\n * @record\n */\nexport function DepDef() { }\n/** @type {?} */\nDepDef.prototype.flags;\n/** @type {?} */\nDepDef.prototype.token;\n/** @type {?} */\nDepDef.prototype.tokenKey;\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Self: 4,\n    Value: 8,\n};\nexport { DepFlags };\n/**\n * @record\n */\nexport function TextDef() { }\n/** @type {?} */\nTextDef.prototype.prefix;\n/**\n * @record\n */\nexport function QueryDef() { }\n/** @type {?} */\nQueryDef.prototype.id;\n/** @type {?} */\nQueryDef.prototype.filterId;\n/** @type {?} */\nQueryDef.prototype.bindings;\n/**\n * @record\n */\nexport function QueryBindingDef() { }\n/** @type {?} */\nQueryBindingDef.prototype.propName;\n/** @type {?} */\nQueryBindingDef.prototype.bindingType;\n/** @enum {number} */\nvar QueryBindingType = {\n    First: 0, All: 1,\n};\nexport { QueryBindingType };\n/**\n * @record\n */\nexport function NgContentDef() { }\n/**\n * this index is checked against NodeDef.ngContentIndex to find the nodes\n * that are matched by this ng-content.\n * Note that a NodeDef with an ng-content can be reprojected, i.e.\n * have a ngContentIndex on its own.\n * @type {?}\n */\nNgContentDef.prototype.index;\n/**\n * @record\n */\nexport function NgModuleData() { }\n/** @type {?} */\nNgModuleData.prototype._def;\n/** @type {?} */\nNgModuleData.prototype._parent;\n/** @type {?} */\nNgModuleData.prototype._providers;\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ViewData() { }\n/** @type {?} */\nViewData.prototype.def;\n/** @type {?} */\nViewData.prototype.root;\n/** @type {?} */\nViewData.prototype.renderer;\n/** @type {?} */\nViewData.prototype.parentNodeDef;\n/** @type {?} */\nViewData.prototype.parent;\n/** @type {?} */\nViewData.prototype.viewContainerParent;\n/** @type {?} */\nViewData.prototype.component;\n/** @type {?} */\nViewData.prototype.context;\n/** @type {?} */\nViewData.prototype.nodes;\n/** @type {?} */\nViewData.prototype.state;\n/** @type {?} */\nViewData.prototype.oldValues;\n/** @type {?} */\nViewData.prototype.disposables;\n/** @type {?} */\nViewData.prototype.initIndex;\n/** @enum {number} */\nvar ViewState = {\n    BeforeFirstCheck: 1,\n    FirstCheck: 2,\n    Attached: 4,\n    ChecksEnabled: 8,\n    IsProjectedView: 16,\n    CheckProjectedView: 32,\n    CheckProjectedViews: 64,\n    Destroyed: 128,\n    // InitState Uses 3 bits\n    InitState_Mask: 1792,\n    InitState_BeforeInit: 0,\n    InitState_CallingOnInit: 256,\n    InitState_CallingAfterContentInit: 512,\n    InitState_CallingAfterViewInit: 768,\n    InitState_AfterInit: 1024,\n    CatDetectChanges: 12,\n    CatInit: 13,\n};\nexport { ViewState };\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nexport function shiftInitState(view, priorInitState, newInitState) {\n    /** @type {?} */\n    var state = view.state;\n    /** @type {?} */\n    var initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nexport function shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\nexport function DisposableFn() { }\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nvar /**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nNodeData = /** @class */ (function () {\n    function NodeData() {\n    }\n    return NodeData;\n}());\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport { NodeData };\nif (false) {\n    /** @type {?} */\n    NodeData.prototype.__brand;\n}\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function TextData() { }\n/** @type {?} */\nTextData.prototype.renderText;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ElementData() { }\n/** @type {?} */\nElementData.prototype.renderElement;\n/** @type {?} */\nElementData.prototype.componentView;\n/** @type {?} */\nElementData.prototype.viewContainer;\n/** @type {?} */\nElementData.prototype.template;\n/**\n * @record\n */\nexport function ViewContainerData() { }\n/** @type {?} */\nViewContainerData.prototype._embeddedViews;\n/**\n * @record\n */\nexport function TemplateData() { }\n/** @type {?} */\nTemplateData.prototype._projectedViews;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ProviderData() { }\n/** @type {?} */\nProviderData.prototype.instance;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function PureExpressionData() { }\n/** @type {?} */\nPureExpressionData.prototype.value;\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\nexport function RootData() { }\n/** @type {?} */\nRootData.prototype.injector;\n/** @type {?} */\nRootData.prototype.ngModule;\n/** @type {?} */\nRootData.prototype.projectableNodes;\n/** @type {?} */\nRootData.prototype.selectorOrNode;\n/** @type {?} */\nRootData.prototype.renderer;\n/** @type {?} */\nRootData.prototype.rendererFactory;\n/** @type {?} */\nRootData.prototype.errorHandler;\n/** @type {?} */\nRootData.prototype.sanitizer;\n/**\n * @abstract\n */\nvar /**\n * @abstract\n */\nDebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @abstract\n */\nexport { DebugContext };\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.view = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.nodeIndex = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.injector = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.component = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.providerTokens = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.references = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.context = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.componentRenderElement = function () { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    DebugContext.prototype.renderNode = function () { };\n    /**\n     * @abstract\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext.prototype.logError = function (console, values) { };\n}\n/** @enum {number} */\nvar CheckType = {\n    CheckAndUpdate: 0, CheckNoChanges: 1,\n};\nexport { CheckType };\n/**\n * @record\n */\nexport function ProviderOverride() { }\n/** @type {?} */\nProviderOverride.prototype.token;\n/** @type {?} */\nProviderOverride.prototype.flags;\n/** @type {?} */\nProviderOverride.prototype.value;\n/** @type {?} */\nProviderOverride.prototype.deps;\n/** @type {?} */\nProviderOverride.prototype.deprecatedBehavior;\n/** *\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n  @type {?} */\nexport var Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n//# sourceMappingURL=types.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext } from '../errors';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    /** @type {?} */\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg, context) {\n    /** @type {?} */\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n//# sourceMappingURL=errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { WrappedValue, devModeEqual } from '../change_detection/change_detection';\nimport { SOURCE } from '../di/injector';\nimport { ViewEncapsulation } from '../metadata/view';\nimport { looseIdentical, stringify } from '../util';\nimport { expressionChangedAfterItHasBeenCheckedError } from './errors';\nimport { Services, asElementData, asTextData } from './types';\n/** @type {?} */\nexport var NOOP = function () { };\n/** @type {?} */\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token) {\n    /** @type {?} */\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        /** @type {?} */\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        /** @type {?} */\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\n/** @type {?} */\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n/** @type {?} */\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\n/** @type {?} */\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nexport function resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        /** @type {?} */\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(view, def, bindingIdx, value) {\n    /** @type {?} */\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(view, def, bindingIdx, value) {\n    /** @type {?} */\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        /** @type {?} */\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view) {\n    /** @type {?} */\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nexport function markParentViewsForCheckProjectedViews(view, endView) {\n    /** @type {?} */\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view) {\n    if (view.parent) {\n        /** @type {?} */\n        var parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view) {\n    /** @type {?} */\n    var parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(matchedQueriesDsl) {\n    /** @type {?} */\n    var matchedQueries = {};\n    /** @type {?} */\n    var matchedQueryIds = 0;\n    /** @type {?} */\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nexport function splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        /** @type {?} */\n        var token;\n        /** @type {?} */\n        var flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view, renderHost, def) {\n    /** @type {?} */\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\n/** @type {?} */\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nexport function resolveDefinition(factory) {\n    /** @type {?} */\n    var value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view) {\n    /** @type {?} */\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/** @enum {number} */\nvar RenderNodeAction = {\n    Collect: 0, AppendChild: 1, InsertBefore: 2, RemoveChild: 3,\n};\nexport { RenderNodeAction };\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    var hostView = /** @type {?} */ ((compView)).parent;\n    /** @type {?} */\n    var hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    /** @type {?} */\n    var startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    /** @type {?} */\n    var endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        var nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        /** @type {?} */\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        /** @type {?} */\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                /** @type {?} */\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            var embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\n/** @type {?} */\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name) {\n    if (name[0] === ':') {\n        /** @type {?} */\n        var match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings) {\n    /** @type {?} */\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount, constAndInterp) {\n    /** @type {?} */\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\n/** @type {?} */\nexport var EMPTY_ARRAY = [];\n/** @type {?} */\nexport var EMPTY_MAP = {};\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation } from '../metadata/view';\nimport { SecurityContext } from '../sanitization/security';\nimport { asElementData } from './types';\nimport { NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace } from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    /** @type {?} */\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    var _a;\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n    /** @type {?} */\n    var ns = /** @type {?} */ ((null));\n    /** @type {?} */\n    var name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n    }\n    bindings = bindings || [];\n    /** @type {?} */\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        /** @type {?} */\n        var securityContext = /** @type {?} */ ((undefined));\n        /** @type {?} */\n        var suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    /** @type {?} */\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    /** @type {?} */\n    var attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view, renderHost, def) {\n    /** @type {?} */\n    var elDef = /** @type {?} */ ((def.element));\n    /** @type {?} */\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    /** @type {?} */\n    var renderer = view.renderer;\n    /** @type {?} */\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        /** @type {?} */\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        /** @type {?} */\n        var preserveContent = (!!elDef.componentRendererType &&\n            elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n        el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        /** @type {?} */\n        var output = def.outputs[i];\n        /** @type {?} */\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        /** @type {?} */\n        var listenTarget = output.target;\n        /** @type {?} */\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        /** @type {?} */\n        var disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var bindLen = def.bindings.length;\n    /** @type {?} */\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view, def, values) {\n    /** @type {?} */\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    /** @type {?} */\n    var binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    var elData = asElementData(view, def.nodeIndex);\n    /** @type {?} */\n    var renderNode = elData.renderElement;\n    /** @type {?} */\n    var name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            /** @type {?} */\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode, ns, name, value) {\n    /** @type {?} */\n    var securityContext = binding.securityContext;\n    /** @type {?} */\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    /** @type {?} */\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode, name, value) {\n    /** @type {?} */\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode, name);\n    }\n    else {\n        renderer.removeClass(renderNode, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode, name, value) {\n    /** @type {?} */\n    var renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        /** @type {?} */\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    /** @type {?} */\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode, name, value) {\n    /** @type {?} */\n    var securityContext = binding.securityContext;\n    /** @type {?} */\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode, name, renderValue);\n}\n//# sourceMappingURL=element.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { resolveForwardRef } from '../di/forward_ref';\nimport { INJECTOR, Injector, setCurrentInjector } from '../di/injector';\nimport { APP_ROOT } from '../di/scope';\nimport { NgModuleRef } from '../linker/ng_module_factory';\nimport { stringify } from '../util';\nimport { splitDepsDsl, tokenKey } from './util';\n/** @type {?} */\nvar UNDEFINED_VALUE = new Object();\n/** @type {?} */\nvar InjectorRefTokenKey = tokenKey(Injector);\n/** @type {?} */\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\n/** @type {?} */\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers) {\n    /** @type {?} */\n    var providersByKey = {};\n    /** @type {?} */\n    var modules = [];\n    /** @type {?} */\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        var provider = providers[i];\n        if (provider.token === APP_ROOT && provider.value === true) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data) {\n    /** @type {?} */\n    var def = data._def;\n    /** @type {?} */\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    /** @type {?} */\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        /** @type {?} */\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        /** @type {?} */\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            /** @type {?} */\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            /** @type {?} */\n            var injectableDef = /** @type {?} */ (depDef.token.ngInjectableDef);\n            /** @type {?} */\n            var key = tokenKey_1;\n            /** @type {?} */\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} scope\n * @return {?}\n */\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\n/**\n * @param {?} ngModule\n * @param {?} def\n * @return {?}\n */\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule, providerDef) {\n    /** @type {?} */\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule, lifecycles) {\n    /** @type {?} */\n    var def = ngModule._def;\n    /** @type {?} */\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            /** @type {?} */\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                /** @type {?} */\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=ng_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Services } from './types';\nimport { declaredViewContainer, renderNode, visitRootRenderNodes } from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    /** @type {?} */\n    var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    /** @type {?} */\n    var prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    /** @type {?} */\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    /** @type {?} */\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    /** @type {?} */\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData, viewIndex) {\n    /** @type {?} */\n    var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    /** @type {?} */\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    /** @type {?} */\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        /** @type {?} */\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    /** @type {?} */\n    var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    /** @type {?} */\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    /** @type {?} */\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    /** @type {?} */\n    var prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    /** @type {?} */\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    /** @type {?} */\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=view_attach.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injector } from '../di/injector';\nimport { ComponentFactory, ComponentRef } from '../linker/component_factory';\nimport { ComponentFactoryBoundToModule, ComponentFactoryResolver } from '../linker/component_factory_resolver';\nimport { ElementRef } from '../linker/element_ref';\nimport { NgModuleRef } from '../linker/ng_module_factory';\nimport { TemplateRef } from '../linker/template_ref';\nimport { stringify } from '../util';\nimport { VERSION } from '../version';\nimport { callNgModuleLifecycle, initNgModule, resolveNgModuleDep } from './ng_module';\nimport { Services, asElementData, asProviderData, asTextData } from './types';\nimport { markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl } from './util';\nimport { attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView } from './view_attach';\n/** @type {?} */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var inputsArr = [];\n            /** @type {?} */\n            var inputs = /** @type {?} */ ((this._inputs));\n            for (var propName in inputs) {\n                /** @type {?} */\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                /** @type {?} */\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        /** @type {?} */\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        /** @type {?} */\n        var componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        /** @type {?} */\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        /** @type {?} */\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ComponentFactory_.prototype.viewDefFactory;\n    /** @type {?} */\n    ComponentFactory_.prototype.selector;\n    /** @type {?} */\n    ComponentFactory_.prototype.componentType;\n    /** @type {?} */\n    ComponentFactory_.prototype._inputs;\n    /** @type {?} */\n    ComponentFactory_.prototype._outputs;\n    /** @type {?} */\n    ComponentFactory_.prototype.ngContentSelectors;\n}\nvar ComponentRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nif (false) {\n    /** @type {?} */\n    ComponentRef_.prototype.hostView;\n    /** @type {?} */\n    ComponentRef_.prototype.instance;\n    /** @type {?} */\n    ComponentRef_.prototype.changeDetectorRef;\n    /** @type {?} */\n    ComponentRef_.prototype._elDef;\n    /** @type {?} */\n    ComponentRef_.prototype._view;\n    /** @type {?} */\n    ComponentRef_.prototype._viewRef;\n    /** @type {?} */\n    ComponentRef_.prototype._component;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /** @deprecated No replacement */\n        get: /**\n         * @deprecated No replacement\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var view = this._view;\n            /** @type {?} */\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            /** @type {?} */\n            var view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var view = this._embeddedViews[index];\n        if (view) {\n            /** @type {?} */\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        /** @type {?} */\n        var viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        /** @type {?} */\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        /** @type {?} */\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        var viewRef_ = /** @type {?} */ (viewRef);\n        /** @type {?} */\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewContainerRef_.prototype._embeddedViews;\n    /** @type {?} */\n    ViewContainerRef_.prototype._view;\n    /** @type {?} */\n    ViewContainerRef_.prototype._elDef;\n    /** @type {?} */\n    ViewContainerRef_.prototype._data;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nexport { ViewRef_ };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ViewRef_.prototype._view;\n    /** @type {?} */\n    ViewRef_.prototype._viewContainerRef;\n    /** @type {?} */\n    ViewRef_.prototype._appRef;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    TemplateRef_.prototype._projectedViews;\n    /** @type {?} */\n    TemplateRef_.prototype._parentView;\n    /** @type {?} */\n    TemplateRef_.prototype._def;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        /** @type {?} */\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nif (false) {\n    /** @type {?} */\n    Injector_.prototype.view;\n    /** @type {?} */\n    Injector_.prototype.elDef;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view, index) {\n    /** @type {?} */\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        /** @type {?} */\n        var elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        /** @type {?} */\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        /** @type {?} */\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        /** @type {?} */\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        /** @type {?} */\n        var parentElement = this.delegate.parentNode(node);\n        /** @type {?} */\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            /** @type {?} */\n            var node = viewRootNodes[i];\n            /** @type {?} */\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nif (false) {\n    /** @type {?} */\n    RendererAdapter.prototype.delegate;\n}\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        /** @type {?} */\n        var flags = 0 /* None */;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\nif (false) {\n    /** @type {?} */\n    NgModuleRef_.prototype._destroyListeners;\n    /** @type {?} */\n    NgModuleRef_.prototype._destroyed;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgModuleRef_.prototype._providers;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgModuleRef_.prototype._modules;\n    /** @type {?} */\n    NgModuleRef_.prototype.injector;\n    /** @type {?} */\n    NgModuleRef_.prototype._moduleType;\n    /** @type {?} */\n    NgModuleRef_.prototype._parent;\n    /** @type {?} */\n    NgModuleRef_.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleRef_.prototype._def;\n}\n//# sourceMappingURL=refs.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectorRef, SimpleChange, WrappedValue } from '../change_detection/change_detection';\nimport { INJECTOR, Injector, resolveForwardRef } from '../di';\nimport { ElementRef } from '../linker/element_ref';\nimport { TemplateRef } from '../linker/template_ref';\nimport { ViewContainerRef } from '../linker/view_container_ref';\nimport { Renderer as RendererV1, Renderer2 } from '../render/api';\nimport { stringify } from '../util';\nimport { isObservable } from '../util/lang';\nimport { createChangeDetectorRef, createInjector, createRendererV1 } from './refs';\nimport { Services, asElementData, asProviderData, shouldCallLifecycleInitHook } from './types';\nimport { calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl } from './util';\n/** @type {?} */\nvar RendererV1TokenKey = tokenKey(RendererV1);\n/** @type {?} */\nvar Renderer2TokenKey = tokenKey(Renderer2);\n/** @type {?} */\nvar ElementRefTokenKey = tokenKey(ElementRef);\n/** @type {?} */\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n/** @type {?} */\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\n/** @type {?} */\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n/** @type {?} */\nvar InjectorRefTokenKey = tokenKey(Injector);\n/** @type {?} */\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    /** @type {?} */\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    /** @type {?} */\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view, def) {\n    /** @type {?} */\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view, def) {\n    /** @type {?} */\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    /** @type {?} */\n    var instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            /** @type {?} */\n            var output = def.outputs[i];\n            /** @type {?} */\n            var outputObservable = instance[/** @type {?} */ ((output.propName))];\n            if (isObservable(outputObservable)) {\n                /** @type {?} */\n                var subscription = outputObservable.subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n                ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n            else {\n                throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n            }\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    var directive = providerData.instance;\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var changes = /** @type {?} */ ((undefined));\n    /** @type {?} */\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(view, def, values) {\n    /** @type {?} */\n    var providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    var directive = providerData.instance;\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var changes = /** @type {?} */ ((undefined));\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    /** @type {?} */\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    /** @type {?} */\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    /** @type {?} */\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/** @type {?} */\nexport var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    /** @type {?} */\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    /** @type {?} */\n    var tokenKey = depDef.tokenKey;\n    if (tokenKey === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    /** @type {?} */\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey) {\n                case RendererV1TokenKey: {\n                    /** @type {?} */\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    /** @type {?} */\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    /** @type {?} */\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector(searchView, elDef);\n                default:\n                    /** @type {?} */\n                    var providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey];\n                    if (providerDef_1) {\n                        /** @type {?} */\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = /** @type {?} */ ((viewParentEl(searchView)));\n        searchView = /** @type {?} */ ((searchView.parent));\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    /** @type {?} */\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    /** @type {?} */\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        /** @type {?} */\n        var compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    /** @type {?} */\n    var binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    var propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        /** @type {?} */\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        /** @type {?} */\n        var binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    /** @type {?} */\n    var nodes = view.def.nodes;\n    /** @type {?} */\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = nodes[i];\n        /** @type {?} */\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    /** @type {?} */\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    /** @type {?} */\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n//# sourceMappingURL=provider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '../linker/element_ref';\nimport { QueryList } from '../linker/query_list';\nimport { asElementData, asProviderData, asQueryList } from './types';\nimport { declaredViewContainer, filterQueryId, isEmbeddedView } from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(flags, id, bindings) {\n    /** @type {?} */\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        /** @type {?} */\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nexport function createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view) {\n    /** @type {?} */\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        /** @type {?} */\n        var tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        /** @type {?} */\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            /** @type {?} */\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            /** @type {?} */\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view, nodeDef) {\n    /** @type {?} */\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    /** @type {?} */\n    var directiveInstance;\n    /** @type {?} */\n    var newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        /** @type {?} */\n        var elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    /** @type {?} */\n    var bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    /** @type {?} */\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        /** @type {?} */\n        var binding = bindings[i];\n        /** @type {?} */\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        /** @type {?} */\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            /** @type {?} */\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                /** @type {?} */\n                var embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    /** @type {?} */\n                    var embeddedView = embeddedViews[k];\n                    /** @type {?} */\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            /** @type {?} */\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    /** @type {?} */\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n//# sourceMappingURL=query.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getParentRenderElement, visitProjectedRenderNodes } from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view, renderHost, def) {\n    /** @type {?} */\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    /** @type {?} */\n    var ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n//# sourceMappingURL=ng_content.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { asTextData } from './types';\nimport { checkAndUpdateBinding, getParentRenderElement } from './util';\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nexport function textDef(checkIndex, ngContentIndex, staticText) {\n    /** @type {?} */\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view, renderHost, def) {\n    /** @type {?} */\n    var renderNode;\n    /** @type {?} */\n    var renderer = view.renderer;\n    renderNode = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    /** @type {?} */\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode);\n    }\n    return { renderText: renderNode };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        var value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        /** @type {?} */\n        var renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view, def, values) {\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        /** @type {?} */\n        var renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    /** @type {?} */\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n//# sourceMappingURL=text.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs } from './element';\nimport { expressionChangedAfterItHasBeenCheckedError } from './errors';\nimport { appendNgContent } from './ng_content';\nimport { callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance } from './provider';\nimport { checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression } from './pure_expression';\nimport { checkAndUpdateQuery, createQuery } from './query';\nimport { createTemplateData, createViewContainerData } from './refs';\nimport { checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText } from './text';\nimport { Services, asElementData, asQueryList, asTextData, shiftInitState } from './types';\nimport { NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey } from './util';\nimport { detachProjectedView } from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    /** @type {?} */\n    var viewBindingCount = 0;\n    /** @type {?} */\n    var viewDisposableCount = 0;\n    /** @type {?} */\n    var viewNodeFlags = 0;\n    /** @type {?} */\n    var viewRootNodeFlags = 0;\n    /** @type {?} */\n    var viewMatchedQueries = 0;\n    /** @type {?} */\n    var currentParent = null;\n    /** @type {?} */\n    var currentRenderParent = null;\n    /** @type {?} */\n    var currentElementHasPublicProviders = false;\n    /** @type {?} */\n    var currentElementHasPrivateProviders = false;\n    /** @type {?} */\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            /** @type {?} */\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            /** @type {?} */\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            /** @type {?} */\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                /** @type {?} */\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    var handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    /** @type {?} */\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        /** @type {?} */\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        /** @type {?} */\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent, anchorDef, viewDef, context) {\n    /** @type {?} */\n    var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root, def, context) {\n    /** @type {?} */\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    /** @type {?} */\n    var rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    /** @type {?} */\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    /** @type {?} */\n    var nodes = new Array(def.nodes.length);\n    /** @type {?} */\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    /** @type {?} */\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    /** @type {?} */\n    var renderHost;\n    if (isComponentView(view)) {\n        /** @type {?} */\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    /** @type {?} */\n    var def = view.def;\n    /** @type {?} */\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        /** @type {?} */\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                /** @type {?} */\n                var el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                /** @type {?} */\n                var componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    /** @type {?} */\n                    var compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    /** @type {?} */\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                /** @type {?} */\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    /** @type {?} */\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    /** @type {?} */\n                    var compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    /** @type {?} */\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    /** @type {?} */\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            /** @type {?} */\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    /** @type {?} */\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    /** @type {?} */\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    /** @type {?} */\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        /** @type {?} */\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = 'CreateViewNodes';\nViewAction[ViewAction.CheckNoChanges] = 'CheckNoChanges';\nViewAction[ViewAction.CheckNoChangesProjectedViews] = 'CheckNoChangesProjectedViews';\nViewAction[ViewAction.CheckAndUpdate] = 'CheckAndUpdate';\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = 'CheckAndUpdateProjectedViews';\nViewAction[ViewAction.Destroy] = 'Destroy';\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    /** @type {?} */\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    /** @type {?} */\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            var embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    /** @type {?} */\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    /** @type {?} */\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n//# sourceMappingURL=view.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { asPureExpressionData } from './types';\nimport { calcBindingFlags, checkAndUpdateBinding } from './util';\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nexport function pureObjectDef(checkIndex, propToIndex) {\n    /** @type {?} */\n    var keys = Object.keys(propToIndex);\n    /** @type {?} */\n    var nbKeys = keys.length;\n    /** @type {?} */\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        /** @type {?} */\n        var key = keys[i];\n        /** @type {?} */\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    /** @type {?} */\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        /** @type {?} */\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var changed = false;\n    /** @type {?} */\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        var data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(view, def, values) {\n    /** @type {?} */\n    var bindings = def.bindings;\n    /** @type {?} */\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        var data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                var pipe = values[0];\n                /** @type {?} */\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n//# sourceMappingURL=pure_expression.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex } from '../debug/debug_node';\nimport { ErrorHandler } from '../error_handler';\nimport { isDevMode } from '../is_dev_mode';\nimport { RendererFactory2 } from '../render/api';\nimport { Sanitizer } from '../sanitization/security';\nimport { tokenKey } from '../view/util';\nimport { isViewDebugError, viewDestroyedError, viewWrappedDebugError } from './errors';\nimport { resolveDep } from './provider';\nimport { dirtyParentQueries, getQueryValue } from './query';\nimport { createInjector, createNgModuleRef, getComponentViewDefinitionFactory } from './refs';\nimport { Services, asElementData, asPureExpressionData } from './types';\nimport { NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, viewParentEl } from './util';\nimport { checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView } from './view';\n/** @type {?} */\nvar initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    /** @type {?} */\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    /** @type {?} */\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    /** @type {?} */\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    /** @type {?} */\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    /** @type {?} */\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    /** @type {?} */\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n    /** @type {?} */\n    var defWithOverride = applyProviderOverridesToView(viewDef);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n    /** @type {?} */\n    var overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef = overrideComponentView;\n    }\n    else {\n        viewDef = applyProviderOverridesToView(viewDef);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    /** @type {?} */\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n/** @type {?} */\nvar providerOverrides = new Map();\n/** @type {?} */\nvar providerOverridesWithScope = new Map();\n/** @type {?} */\nvar viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(/** @type {?} */ (override.token), override);\n    }\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    /** @type {?} */\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    /** @type {?} */\n    var compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    /** @type {?} */\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        /** @type {?} */\n        var elIndicesWithOverwrittenProviders = [];\n        /** @type {?} */\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            /** @type {?} */\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef, elIndex) {\n        for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n            /** @type {?} */\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                /** @type {?} */\n                var provider = /** @type {?} */ ((nodeDef.provider));\n                /** @type {?} */\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        /** @type {?} */\n        var hasOverrides = false;\n        /** @type {?} */\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            /** @type {?} */\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            /** @type {?} */\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            /** @type {?} */\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            /** @type {?} */\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    /** @type {?} */\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = 'create';\nDebugAction[DebugAction.detectChanges] = 'detectChanges';\nDebugAction[DebugAction.checkNoChanges] = 'checkNoChanges';\nDebugAction[DebugAction.destroy] = 'destroy';\nDebugAction[DebugAction.handleEvent] = 'handleEvent';\n/** @type {?} */\nvar _currentAction;\n/** @type {?} */\nvar _currentView;\n/** @type {?} */\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        /** @type {?} */\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        /** @type {?} */\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    /** @type {?} */\n    var changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        /** @type {?} */\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            /** @type {?} */\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                /** @type {?} */\n                var binding = nodeDef.bindings[i];\n                /** @type {?} */\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            /** @type {?} */\n            var elDef = /** @type {?} */ ((nodeDef.parent));\n            /** @type {?} */\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    /** @type {?} */\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\n/** @type {?} */\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        var elDef = this.nodeDef;\n        /** @type {?} */\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    /** @type {?} */\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    /** @type {?} */\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        /** @type {?} */\n        var logViewDef;\n        /** @type {?} */\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        /** @type {?} */\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        /** @type {?} */\n        var currRenderNodeIndex = -1;\n        /** @type {?} */\n        var nodeLogger = function () {\n            var _a;\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\nif (false) {\n    /** @type {?} */\n    DebugContext_.prototype.nodeDef;\n    /** @type {?} */\n    DebugContext_.prototype.elView;\n    /** @type {?} */\n    DebugContext_.prototype.elDef;\n    /** @type {?} */\n    DebugContext_.prototype.view;\n    /** @type {?} */\n    DebugContext_.prototype.nodeIndex;\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef, nodeIndex) {\n    /** @type {?} */\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        /** @type {?} */\n        var nodeDef = viewDef.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    /** @type {?} */\n    var oldAction = _currentAction;\n    /** @type {?} */\n    var oldView = _currentView;\n    /** @type {?} */\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        /** @type {?} */\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nexport { DebugRendererFactory2 };\nif (false) {\n    /** @type {?} */\n    DebugRendererFactory2.prototype.delegate;\n}\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        /**\n         * Factory function used to create a `DebugContext` when a node is created.\n         *\n         * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n         *\n         * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n         * or a Render context.\n         */\n        this.debugContextFactory = getCurrentDebugContext;\n        this.data = this.delegate.data;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.debugContextFactory(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        /** @type {?} */\n        var el = this.delegate.createElement(name, namespace);\n        /** @type {?} */\n        var debugCtx = this.debugContext;\n        if (debugCtx) {\n            /** @type {?} */\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var comment = this.delegate.createComment(value);\n        /** @type {?} */\n        var debugCtx = this.debugContext;\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var text = this.delegate.createText(value);\n        /** @type {?} */\n        var debugCtx = this.debugContext;\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        /** @type {?} */\n        var debugEl = getDebugNode(parent);\n        /** @type {?} */\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        /** @type {?} */\n        var debugEl = getDebugNode(parent);\n        /** @type {?} */\n        var debugChildEl = getDebugNode(newChild);\n        /** @type {?} */\n        var debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        /** @type {?} */\n        var debugEl = getDebugNode(parent);\n        /** @type {?} */\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @param {?=} preserveContent\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @param {?=} preserveContent\n     * @return {?}\n     */\n    function (selectorOrNode, preserveContent) {\n        /** @type {?} */\n        var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n        /** @type {?} */\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            /** @type {?} */\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            /** @type {?} */\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        /** @type {?} */\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            /** @type {?} */\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\nexport { DebugRenderer2 };\nif (false) {\n    /** @type {?} */\n    DebugRenderer2.prototype.data;\n    /**\n     * Factory function used to create a `DebugContext` when a node is created.\n     *\n     * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n     *\n     * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n     * or a Render context.\n     * @type {?}\n     */\n    DebugRenderer2.prototype.debugContextFactory;\n    /** @type {?} */\n    DebugRenderer2.prototype.delegate;\n}\n//# sourceMappingURL=services.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injector } from '../di/injector';\nimport { NgModuleFactory } from '../linker/ng_module_factory';\nimport { initServicesIfNeeded } from './services';\nimport { Services } from './types';\nimport { resolveDefinition } from './util';\n/**\n * @param {?} override\n * @return {?}\n */\nexport function overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nexport function overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nexport function clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nexport function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction cloneNgModuleDefinition(def) {\n    /** @type {?} */\n    var providers = Array.from(def.providers);\n    /** @type {?} */\n    var modules = Array.from(def.modules);\n    /** @type {?} */\n    var providersByKey = {};\n    for (var key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n    };\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        /** @type {?} */\n        var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\nif (false) {\n    /** @type {?} */\n    NgModuleFactory_.prototype.moduleType;\n    /** @type {?} */\n    NgModuleFactory_.prototype._bootstrapComponents;\n    /** @type {?} */\n    NgModuleFactory_.prototype._ngModuleDefFactory;\n}\n//# sourceMappingURL=entrypoint.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injector } from '../di/injector';\nimport { DebugRendererFactory2 } from '../view/services';\nimport * as di from './di';\nimport { NG_HOST_SYMBOL, _getViewData } from './instructions';\nimport { CONTEXT, DIRECTIVES, TVIEW } from './interfaces/view';\n/**\n * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n *\n * The created DebugRenderer know how to create a Debug Context specific to IVY.\n */\nvar /**\n * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n *\n * The created DebugRenderer know how to create a Debug Context specific to IVY.\n */\nRender3DebugRendererFactory2 = /** @class */ (function (_super) {\n    tslib_1.__extends(Render3DebugRendererFactory2, _super);\n    function Render3DebugRendererFactory2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    Render3DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        /** @type {?} */\n        var renderer = /** @type {?} */ (_super.prototype.createRenderer.call(this, element, renderData));\n        renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n        return renderer;\n    };\n    return Render3DebugRendererFactory2;\n}(DebugRendererFactory2));\n/**\n * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n *\n * The created DebugRenderer know how to create a Debug Context specific to IVY.\n */\nexport { Render3DebugRendererFactory2 };\n/**\n * Stores context information about view nodes.\n *\n * Used in tests to retrieve information those nodes.\n */\nvar /**\n * Stores context information about view nodes.\n *\n * Used in tests to retrieve information those nodes.\n */\nRender3DebugContext = /** @class */ (function () {\n    function Render3DebugContext(viewData) {\n        this.viewData = viewData;\n        // The LNode will be created next and appended to viewData\n        this.nodeIndex = viewData ? viewData.length : null;\n    }\n    Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.viewData; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this.nodeIndex !== null) {\n                /** @type {?} */\n                var lElementNode = this.view[this.nodeIndex];\n                /** @type {?} */\n                var nodeInjector = lElementNode.nodeInjector;\n                if (nodeInjector) {\n                    return new di.NodeInjector(nodeInjector);\n                }\n            }\n            return Injector.NULL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // TODO(vicb): why/when\n            if (this.nodeIndex === null) {\n                return null;\n            }\n            /** @type {?} */\n            var tView = this.view[TVIEW];\n            /** @type {?} */\n            var components = tView.components;\n            return (components && components.indexOf(this.nodeIndex) == -1) ?\n                null :\n                this.view[this.nodeIndex].data[CONTEXT];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n        // TODO(vicb): add view providers when supported\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var matchedDirectives = [];\n            // TODO(vicb): why/when\n            if (this.nodeIndex === null) {\n                return matchedDirectives;\n            }\n            /** @type {?} */\n            var directives = this.view[DIRECTIVES];\n            if (directives) {\n                /** @type {?} */\n                var currentNode = this.view[this.nodeIndex];\n                for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                    /** @type {?} */\n                    var directive = directives[dirIndex];\n                    if (directive[NG_HOST_SYMBOL] === currentNode) {\n                        matchedDirectives.push(directive.constructor);\n                    }\n                }\n            }\n            return matchedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // TODO(vicb): implement retrieving references\n            throw new Error('Not implemented yet in ivy');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this.nodeIndex === null) {\n                return null;\n            }\n            /** @type {?} */\n            var lNode = this.view[this.nodeIndex];\n            return lNode.view[CONTEXT];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () { throw new Error('Not implemented in ivy'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () { throw new Error('Not implemented in ivy'); },\n        enumerable: true,\n        configurable: true\n    });\n    // TODO(vicb): check previous implementation\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    Render3DebugContext.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, values);\n    };\n    return Render3DebugContext;\n}());\nif (false) {\n    /** @type {?} */\n    Render3DebugContext.prototype.nodeIndex;\n    /** @type {?} */\n    Render3DebugContext.prototype.viewData;\n}\n//# sourceMappingURL=debug.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AstPath, CssSelector, RecursiveTemplateAstVisitor, identifierName, templateVisitAll } from '@angular/compiler';\nimport * as ts from 'typescript';\nexport function isParseSourceSpan(value) {\n    return value && !!value.start;\n}\nexport function spanOf(span) {\n    if (!span)\n        return undefined;\n    if (isParseSourceSpan(span)) {\n        return { start: span.start.offset, end: span.end.offset };\n    }\n    else {\n        if (span.endSourceSpan) {\n            return { start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset };\n        }\n        else if (span.children && span.children.length) {\n            return {\n                start: span.sourceSpan.start.offset,\n                end: spanOf(span.children[span.children.length - 1]).end\n            };\n        }\n        return { start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset };\n    }\n}\nexport function inSpan(position, span, exclusive) {\n    return span != null && (exclusive ? position >= span.start && position < span.end :\n        position >= span.start && position <= span.end);\n}\nexport function offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nexport function isNarrower(spanA, spanB) {\n    return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\nexport function hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nexport function getSelectors(info) {\n    var map = new Map();\n    var selectors = flatten(info.directives.map(function (directive) {\n        var selectors = CssSelector.parse(directive.selector);\n        selectors.forEach(function (selector) { return map.set(selector, directive); });\n        return selectors;\n    }));\n    return { selectors: selectors, map: map };\n}\nexport function flatten(a) {\n    var _a;\n    return (_a = []).concat.apply(_a, a);\n}\nexport function removeSuffix(value, suffix) {\n    if (value.endsWith(suffix))\n        return value.substring(0, value.length - suffix.length);\n    return value;\n}\nexport function uniqueByName(elements) {\n    if (elements) {\n        var result = [];\n        var set = new Set();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (!set.has(element.name)) {\n                set.add(element.name);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nexport function isTypescriptVersion(low, high) {\n    var version = ts.version;\n    if (version.substring(0, low.length) < low)\n        return false;\n    if (high && (version.substring(0, high.length) > high))\n        return false;\n    return true;\n}\nexport function diagnosticInfoFromTemplateInfo(info) {\n    return {\n        fileName: info.fileName,\n        offset: info.template.span.start,\n        query: info.template.query,\n        members: info.template.members,\n        htmlAst: info.htmlAst,\n        templateAst: info.templateAst\n    };\n}\nexport function findTemplateAstAt(ast, position, allowWidening) {\n    if (allowWidening === void 0) { allowWidening = false; }\n    var path = [];\n    var visitor = new /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (inSpan(position, span)) {\n                var len = path.length;\n                if (!len || allowWidening || isNarrower(span, spanOf(path[len - 1]))) {\n                    path.push(ast);\n                }\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ignore reference, variable and providers\n                visit(ast.attrs);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ingnore providers\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitDirective = function (ast, context) {\n            // Ignore the host properties of a directive\n            var result = this.visitChildren(context, function (visit) { visit(ast.inputs); });\n            // We never care about the diretive itself, just its inputs.\n            if (path[path.length - 1] == ast) {\n                path.pop();\n            }\n            return result;\n        };\n        return class_1;\n    }(RecursiveTemplateAstVisitor));\n    templateVisitAll(visitor, ast);\n    return new AstPath(path, position);\n}\n//# sourceMappingURL=utils.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ASTWithSource, AstPath as AstPathBase, NullAstVisitor, visitAstChildren } from '@angular/compiler';\nimport { AstType } from '@angular/compiler-cli/src/language_services';\nimport { BuiltinType } from './types';\nimport { inSpan } from './utils';\nfunction findAstAt(ast, position, excludeEmpty) {\n    if (excludeEmpty === void 0) { excludeEmpty = false; }\n    var path = [];\n    var visitor = new /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast) {\n            if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n                path.push(ast);\n                visitAstChildren(ast, this);\n            }\n        };\n        return class_1;\n    }(NullAstVisitor));\n    // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n    // the visit() method above would never see it.\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    visitor.visit(ast);\n    return new AstPathBase(path, position);\n}\nexport function getExpressionCompletions(scope, ast, position, query) {\n    var path = findAstAt(ast, position);\n    if (path.empty)\n        return undefined;\n    var tail = path.tail;\n    var result = scope;\n    function getType(ast) { return new AstType(scope, query, {}).getType(ast); }\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { result = undefined; },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) { },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                result = query.getPipes();\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitQuote: function (ast) {\n            // For a quote, return the members of any (if there are any).\n            result = query.getBuiltinType(BuiltinType.Any).members();\n        },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n    });\n    return result && result.values();\n}\nexport function getExpressionSymbol(scope, ast, position, query) {\n    var path = findAstAt(ast, position, /* excludeEmpty */ true);\n    if (path.empty)\n        return undefined;\n    var tail = path.tail;\n    function getType(ast) { return new AstType(scope, query, {}).getType(ast); }\n    var symbol = undefined;\n    var span = undefined;\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                var pipes = query.getPipes();\n                if (pipes) {\n                    symbol = pipes.get(ast.name);\n                    span = ast.span;\n                }\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n    });\n    if (symbol && span) {\n        return { symbol: symbol, span: span };\n    }\n}\n//# sourceMappingURL=expressions.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar values = [\n    'ID',\n    'CDATA',\n    'NAME',\n    ['ltr', 'rtl'],\n    ['rect', 'circle', 'poly', 'default'],\n    'NUMBER',\n    ['nohref'],\n    ['ismap'],\n    ['declare'],\n    ['DATA', 'REF', 'OBJECT'],\n    ['GET', 'POST'],\n    'IDREF',\n    ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n    ['checked'],\n    ['disabled'],\n    ['readonly'],\n    ['multiple'],\n    ['selected'],\n    ['button', 'submit', 'reset'],\n    ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n    ['none', 'groups', 'rows', 'cols', 'all'],\n    ['left', 'center', 'right', 'justify', 'char'],\n    ['top', 'middle', 'bottom', 'baseline'],\n    'IDREFS',\n    ['row', 'col', 'rowgroup', 'colgroup'],\n    ['defer']\n];\nvar groups = [\n    { id: 0 },\n    {\n        onclick: 1,\n        ondblclick: 1,\n        onmousedown: 1,\n        onmouseup: 1,\n        onmouseover: 1,\n        onmousemove: 1,\n        onmouseout: 1,\n        onkeypress: 1,\n        onkeydown: 1,\n        onkeyup: 1\n    },\n    { lang: 2, dir: 3 },\n    { onload: 1, onunload: 1 },\n    { name: 1 },\n    { href: 1 },\n    { type: 1 },\n    { alt: 1 },\n    { tabindex: 5 },\n    { media: 1 },\n    { nohref: 6 },\n    { usemap: 1 },\n    { src: 1 },\n    { onfocus: 1, onblur: 1 },\n    { charset: 1 },\n    { declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1 },\n    { title: 1 },\n    { value: 1 },\n    { cite: 1 },\n    { datetime: 1 },\n    { accept: 1 },\n    { shape: 4, coords: 1 },\n    { for: 11\n    },\n    { action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1 },\n    { valuetype: 9 },\n    { longdesc: 1 },\n    { width: 1 },\n    { disabled: 14 },\n    { readonly: 15, onselect: 1 },\n    { accesskey: 1 },\n    { size: 5, multiple: 16 },\n    { onchange: 1 },\n    { label: 1 },\n    { selected: 17 },\n    { type: 12, checked: 13, size: 1, maxlength: 5 },\n    { rows: 5, cols: 5 },\n    { type: 18 },\n    { height: 1 },\n    { summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1 },\n    { align: 21, char: 1, charoff: 1, valign: 22 },\n    { span: 5 },\n    { abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5 },\n    { profile: 1 },\n    { 'http-equiv': 2, name: 2, content: 1, scheme: 1 },\n    { class: 1, style: 1 },\n    { hreflang: 2, rel: 1, rev: 1 },\n    { ismap: 7 },\n    { defer: 25, event: 1, for: 1 }\n];\nvar elements = {\n    TT: [0, 1, 2, 16, 44],\n    I: [0, 1, 2, 16, 44],\n    B: [0, 1, 2, 16, 44],\n    BIG: [0, 1, 2, 16, 44],\n    SMALL: [0, 1, 2, 16, 44],\n    EM: [0, 1, 2, 16, 44],\n    STRONG: [0, 1, 2, 16, 44],\n    DFN: [0, 1, 2, 16, 44],\n    CODE: [0, 1, 2, 16, 44],\n    SAMP: [0, 1, 2, 16, 44],\n    KBD: [0, 1, 2, 16, 44],\n    VAR: [0, 1, 2, 16, 44],\n    CITE: [0, 1, 2, 16, 44],\n    ABBR: [0, 1, 2, 16, 44],\n    ACRONYM: [0, 1, 2, 16, 44],\n    SUB: [0, 1, 2, 16, 44],\n    SUP: [0, 1, 2, 16, 44],\n    SPAN: [0, 1, 2, 16, 44],\n    BDO: [0, 2, 16, 44],\n    BR: [0, 16, 44],\n    BODY: [0, 1, 2, 3, 16, 44],\n    ADDRESS: [0, 1, 2, 16, 44],\n    DIV: [0, 1, 2, 16, 44],\n    A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n    MAP: [0, 1, 2, 4, 16, 44],\n    AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n    LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n    IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n    OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n    PARAM: [0, 4, 6, 17, 24],\n    HR: [0, 1, 2, 16, 44],\n    P: [0, 1, 2, 16, 44],\n    H1: [0, 1, 2, 16, 44],\n    H2: [0, 1, 2, 16, 44],\n    H3: [0, 1, 2, 16, 44],\n    H4: [0, 1, 2, 16, 44],\n    H5: [0, 1, 2, 16, 44],\n    H6: [0, 1, 2, 16, 44],\n    PRE: [0, 1, 2, 16, 44],\n    Q: [0, 1, 2, 16, 18, 44],\n    BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n    INS: [0, 1, 2, 16, 18, 19, 44],\n    DEL: [0, 1, 2, 16, 18, 19, 44],\n    DL: [0, 1, 2, 16, 44],\n    DT: [0, 1, 2, 16, 44],\n    DD: [0, 1, 2, 16, 44],\n    OL: [0, 1, 2, 16, 44],\n    UL: [0, 1, 2, 16, 44],\n    LI: [0, 1, 2, 16, 44],\n    FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n    LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n    INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n    SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n    OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n    OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n    TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n    FIELDSET: [0, 1, 2, 16, 44],\n    LEGEND: [0, 1, 2, 16, 29, 44],\n    BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n    TABLE: [0, 1, 2, 16, 26, 38, 44],\n    CAPTION: [0, 1, 2, 16, 44],\n    COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n    COL: [0, 1, 2, 16, 26, 39, 40, 44],\n    THEAD: [0, 1, 2, 16, 39, 44],\n    TBODY: [0, 1, 2, 16, 39, 44],\n    TFOOT: [0, 1, 2, 16, 39, 44],\n    TR: [0, 1, 2, 16, 39, 44],\n    TH: [0, 1, 2, 16, 39, 41, 44],\n    TD: [0, 1, 2, 16, 39, 41, 44],\n    HEAD: [2, 42],\n    TITLE: [2],\n    BASE: [5],\n    META: [2, 43],\n    STYLE: [2, 6, 9, 16],\n    SCRIPT: [6, 12, 14, 47],\n    NOSCRIPT: [0, 1, 2, 16, 44],\n    HTML: [2]\n};\nvar defaultAttributes = [0, 1, 2, 4];\nexport function elementNames() {\n    return Object.keys(elements).sort().map(function (v) { return v.toLowerCase(); });\n}\nfunction compose(indexes) {\n    var result = {};\n    if (indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            var group = groups[index];\n            for (var name_1 in group)\n                if (group.hasOwnProperty(name_1))\n                    result[name_1] = values[group[name_1]];\n        }\n    }\n    return result;\n}\nexport function attributeNames(element) {\n    return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\nexport function attributeType(element, attribute) {\n    return compose(elements[element.toUpperCase()] || defaultAttributes)[attribute.toLowerCase()];\n}\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar attrToPropMap = {\n    'class': 'className',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex'\n};\nvar EVENT = 'event';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\nvar SchemaInformation = /** @class */ (function () {\n    function SchemaInformation() {\n        var _this = this;\n        this.schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var parts = encodedType.split('|');\n            var properties = parts[1].split(',');\n            var typeParts = (parts[0] + '^').split('^');\n            var typeName = typeParts[0];\n            var type = {};\n            typeName.split(',').forEach(function (tag) { return _this.schema[tag.toLowerCase()] = type; });\n            var superName = typeParts[1];\n            var superType = superName && _this.schema[superName.toLowerCase()];\n            if (superType) {\n                for (var key in superType) {\n                    type[key] = superType[key];\n                }\n            }\n            properties.forEach(function (property) {\n                if (property == '') {\n                }\n                else if (property.startsWith('*')) {\n                    type[property.substring(1)] = EVENT;\n                }\n                else if (property.startsWith('!')) {\n                    type[property.substring(1)] = BOOLEAN;\n                }\n                else if (property.startsWith('#')) {\n                    type[property.substring(1)] = NUMBER;\n                }\n                else if (property.startsWith('%')) {\n                    type[property.substring(1)] = OBJECT;\n                }\n                else {\n                    type[property] = STRING;\n                }\n            });\n        });\n    }\n    SchemaInformation.prototype.allKnownElements = function () { return Object.keys(this.schema); };\n    SchemaInformation.prototype.eventsOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] === EVENT; });\n    };\n    SchemaInformation.prototype.propertiesOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] !== EVENT; });\n    };\n    SchemaInformation.prototype.typeOf = function (elementName, property) {\n        return (this.schema[elementName.toLowerCase()] || {})[property];\n    };\n    Object.defineProperty(SchemaInformation, \"instance\", {\n        get: function () {\n            var result = SchemaInformation._instance;\n            if (!result) {\n                result = SchemaInformation._instance = new SchemaInformation();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SchemaInformation;\n}());\nexport { SchemaInformation };\nexport function eventNames(elementName) {\n    return SchemaInformation.instance.eventsOf(elementName);\n}\nexport function propertyNames(elementName) {\n    return SchemaInformation.instance.propertiesOf(elementName);\n}\nexport function propertyType(elementName, propertyName) {\n    return SchemaInformation.instance.typeOf(elementName, propertyName);\n}\n//# sourceMappingURL=html_info.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { CssSelector, Element, ImplicitReceiver, NAMED_ENTITIES, NullTemplateVisitor, ParseSpan, PropertyRead, SelectorMatcher, TagContentType, Text, findNode, getHtmlTagDefinition, splitNsName } from '@angular/compiler';\nimport { getExpressionScope } from '@angular/compiler-cli/src/language_services';\nimport { getExpressionCompletions } from './expressions';\nimport { attributeNames, elementNames, eventNames, propertyNames } from './html_info';\nimport { diagnosticInfoFromTemplateInfo, findTemplateAstAt, flatten, getSelectors, hasTemplateReference, inSpan, removeSuffix, spanOf, uniqueByName } from './utils';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar hiddenHtmlElements = {\n    html: true,\n    script: true,\n    noscript: true,\n    base: true,\n    body: true,\n    title: true,\n    head: true,\n    link: true,\n};\nexport function getTemplateCompletions(templateInfo) {\n    var result = undefined;\n    var htmlAst = templateInfo.htmlAst, templateAst = templateInfo.templateAst, template = templateInfo.template;\n    // The templateNode starts at the delimiter character so we add 1 to skip it.\n    if (templateInfo.position != null) {\n        var templatePosition_1 = templateInfo.position - template.span.start;\n        var path_1 = findNode(htmlAst, templatePosition_1);\n        var mostSpecific = path_1.tail;\n        if (path_1.empty || !mostSpecific) {\n            result = elementCompletions(templateInfo, path_1);\n        }\n        else {\n            var astPosition_1 = templatePosition_1 - mostSpecific.sourceSpan.start.offset;\n            mostSpecific.visit({\n                visitElement: function (ast) {\n                    var startTagSpan = spanOf(ast.sourceSpan);\n                    var tagLen = ast.name.length;\n                    if (templatePosition_1 <=\n                        startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                        // If we are in the tag then return the element completions.\n                        result = elementCompletions(templateInfo, path_1);\n                    }\n                    else if (templatePosition_1 < startTagSpan.end) {\n                        // We are in the attribute section of the element (but not in an attribute).\n                        // Return the attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                },\n                visitAttribute: function (ast) {\n                    if (!ast.valueSpan || !inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        // We are in the name of an attribute. Show attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                    else if (ast.valueSpan && inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        result = attributeValueCompletions(templateInfo, templatePosition_1, ast);\n                    }\n                },\n                visitText: function (ast) {\n                    // Check if we are in a entity.\n                    result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition_1);\n                    if (result)\n                        return result;\n                    result = interpolationCompletions(templateInfo, templatePosition_1);\n                    if (result)\n                        return result;\n                    var element = path_1.first(Element);\n                    if (element) {\n                        var definition = getHtmlTagDefinition(element.name);\n                        if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                            result = voidElementAttributeCompletions(templateInfo, path_1);\n                            if (!result) {\n                                // If the element can hold content Show element completions.\n                                result = elementCompletions(templateInfo, path_1);\n                            }\n                        }\n                    }\n                    else {\n                        // If no element container, implies parsable data so show elements.\n                        result = voidElementAttributeCompletions(templateInfo, path_1);\n                        if (!result) {\n                            result = elementCompletions(templateInfo, path_1);\n                        }\n                    }\n                },\n                visitComment: function (ast) { },\n                visitExpansion: function (ast) { },\n                visitExpansionCase: function (ast) { }\n            }, null);\n        }\n    }\n    return result;\n}\nfunction attributeCompletions(info, path) {\n    var item = path.tail instanceof Element ? path.tail : path.parentOf(path.tail);\n    if (item instanceof Element) {\n        return attributeCompletionsForElement(info, item.name, item);\n    }\n    return undefined;\n}\nfunction attributeCompletionsForElement(info, elementName, element) {\n    var attributes = getAttributeInfosForElement(info, elementName, element);\n    // Map all the attributes to a completion\n    return attributes.map(function (attr) { return ({\n        kind: attr.fromHtml ? 'html attribute' : 'attribute',\n        name: nameOfAttr(attr),\n        sort: attr.name\n    }); });\n}\nfunction getAttributeInfosForElement(info, elementName, element) {\n    var attributes = [];\n    // Add html attributes\n    var htmlAttributes = attributeNames(elementName) || [];\n    if (htmlAttributes) {\n        attributes.push.apply(attributes, htmlAttributes.map(function (name) { return ({ name: name, fromHtml: true }); }));\n    }\n    // Add html properties\n    var htmlProperties = propertyNames(elementName);\n    if (htmlProperties) {\n        attributes.push.apply(attributes, htmlProperties.map(function (name) { return ({ name: name, input: true }); }));\n    }\n    // Add html events\n    var htmlEvents = eventNames(elementName);\n    if (htmlEvents) {\n        attributes.push.apply(attributes, htmlEvents.map(function (name) { return ({ name: name, output: true }); }));\n    }\n    var _a = getSelectors(info), selectors = _a.selectors, selectorMap = _a.map;\n    if (selectors && selectors.length) {\n        // All the attributes that are selectable should be shown.\n        var applicableSelectors = selectors.filter(function (selector) { return !selector.element || selector.element == elementName; });\n        var selectorAndAttributeNames = applicableSelectors.map(function (selector) { return ({ selector: selector, attrs: selector.attrs.filter(function (a) { return !!a; }) }); });\n        var attrs_1 = flatten(selectorAndAttributeNames.map(function (selectorAndAttr) {\n            var directive = selectorMap.get(selectorAndAttr.selector);\n            var result = selectorAndAttr.attrs.map(function (name) { return ({ name: name, input: name in directive.inputs, output: name in directive.outputs }); });\n            return result;\n        }));\n        // Add template attribute if a directive contains a template reference\n        selectorAndAttributeNames.forEach(function (selectorAndAttr) {\n            var selector = selectorAndAttr.selector;\n            var directive = selectorMap.get(selector);\n            if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n                selector.attrs[0]) {\n                attrs_1.push({ name: selector.attrs[0], template: true });\n            }\n        });\n        // All input and output properties of the matching directives should be added.\n        var elementSelector = element ?\n            createElementCssSelector(element) :\n            createElementCssSelector(new Element(elementName, [], [], null, null, null));\n        var matcher = new SelectorMatcher();\n        matcher.addSelectables(selectors);\n        matcher.match(elementSelector, function (selector) {\n            var directive = selectorMap.get(selector);\n            if (directive) {\n                attrs_1.push.apply(attrs_1, Object.keys(directive.inputs).map(function (name) { return ({ name: name, input: true }); }));\n                attrs_1.push.apply(attrs_1, Object.keys(directive.outputs).map(function (name) { return ({ name: name, output: true }); }));\n            }\n        });\n        // If a name shows up twice, fold it into a single value.\n        attrs_1 = foldAttrs(attrs_1);\n        // Now expand them back out to ensure that input/output shows up as well as input and\n        // output.\n        attributes.push.apply(attributes, flatten(attrs_1.map(expandedAttr)));\n    }\n    return attributes;\n}\nfunction attributeValueCompletions(info, position, attr) {\n    var path = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = path.tail;\n    var dinfo = diagnosticInfoFromTemplateInfo(info);\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, attr, function () { return getExpressionScope(dinfo, path, false); });\n        mostSpecific.visit(visitor, null);\n        if (!visitor.result || !visitor.result.length) {\n            // Try allwoing widening the path\n            var widerPath_1 = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n            if (widerPath_1.tail) {\n                var widerVisitor = new ExpressionVisitor(info, position, attr, function () { return getExpressionScope(dinfo, widerPath_1, false); });\n                widerPath_1.tail.visit(widerVisitor, null);\n                return widerVisitor.result;\n            }\n        }\n        return visitor.result;\n    }\n}\nfunction elementCompletions(info, path) {\n    var htmlNames = elementNames().filter(function (name) { return !(name in hiddenHtmlElements); });\n    // Collect the elements referenced by the selectors\n    var directiveElements = getSelectors(info)\n        .selectors.map(function (selector) { return selector.element; })\n        .filter(function (name) { return !!name; });\n    var components = directiveElements.map(function (name) { return ({ kind: 'component', name: name, sort: name }); });\n    var htmlElements = htmlNames.map(function (name) { return ({ kind: 'element', name: name, sort: name }); });\n    // Return components and html elements\n    return uniqueByName(htmlElements.concat(components));\n}\nfunction entityCompletions(value, position) {\n    // Look for entity completions\n    var re = /&[A-Za-z]*;?(?!\\d)/g;\n    var found;\n    var result = undefined;\n    while (found = re.exec(value)) {\n        var len = found[0].length;\n        if (position >= found.index && position < (found.index + len)) {\n            result = Object.keys(NAMED_ENTITIES)\n                .map(function (name) { return ({ kind: 'entity', name: \"&\" + name + \";\", sort: name }); });\n            break;\n        }\n    }\n    return result;\n}\nfunction interpolationCompletions(info, position) {\n    // Look for an interpolation in at the position.\n    var templatePath = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = templatePath.tail;\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, undefined, function () { return getExpressionScope(diagnosticInfoFromTemplateInfo(info), templatePath, false); });\n        mostSpecific.visit(visitor, null);\n        return uniqueByName(visitor.result);\n    }\n}\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info, path) {\n    var tail = path.tail;\n    if (tail instanceof Text) {\n        var match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n        // The position must be after the match, otherwise we are still in a place where elements\n        // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n        if (match &&\n            path.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n            return attributeCompletionsForElement(info, match[3]);\n        }\n    }\n}\nvar ExpressionVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpressionVisitor, _super);\n    function ExpressionVisitor(info, position, attr, getExpressionScope) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.position = position;\n        _this.attr = attr;\n        _this.getExpressionScope = getExpressionScope || (function () { return info.template.members; });\n        return _this;\n    }\n    ExpressionVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitElementProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitEvent = function (ast) { this.attributeValueCompletions(ast.handler); };\n    ExpressionVisitor.prototype.visitElement = function (ast) {\n        var _this = this;\n        if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n            // The value is a template expression but the expression AST was not produced when the\n            // TemplateAst was produce so\n            // do that now.\n            var key_1 = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n            // Find the selector\n            var selectorInfo = getSelectors(this.info);\n            var selectors = selectorInfo.selectors;\n            var selector_1 = selectors.filter(function (s) { return s.attrs.some(function (attr, i) { return i % 2 == 0 && attr == key_1; }); })[0];\n            var templateBindingResult = this.info.expressionParser.parseTemplateBindings(key_1, this.attr.value, null);\n            // find the template binding that contains the position\n            if (!this.attr.valueSpan)\n                return;\n            var valueRelativePosition_1 = this.position - this.attr.valueSpan.start.offset - 1;\n            var bindings = templateBindingResult.templateBindings;\n            var binding = bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span, /* exclusive */ true); }) ||\n                bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span); });\n            var keyCompletions = function () {\n                var keys = [];\n                if (selector_1) {\n                    var attrNames = selector_1.attrs.filter(function (_, i) { return i % 2 == 0; });\n                    keys = attrNames.filter(function (name) { return name.startsWith(key_1) && name != key_1; })\n                        .map(function (name) { return lowerName(name.substr(key_1.length)); });\n                }\n                keys.push('let');\n                _this.result = keys.map(function (key) { return ({ kind: 'key', name: key, sort: key }); });\n            };\n            if (!binding || (binding.key == key_1 && !binding.expression)) {\n                // We are in the root binding. We should return `let` and keys that are left in the\n                // selector.\n                keyCompletions();\n            }\n            else if (binding.keyIsVar) {\n                var equalLocation = this.attr.value.indexOf('=');\n                this.result = [];\n                if (equalLocation >= 0 && valueRelativePosition_1 >= equalLocation) {\n                    // We are after the '=' in a let clause. The valid values here are the members of the\n                    // template reference's type parameter.\n                    var directiveMetadata = selectorInfo.map.get(selector_1);\n                    if (directiveMetadata) {\n                        var contextTable = this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n                        if (contextTable) {\n                            this.result = this.symbolsToCompletions(contextTable.values());\n                        }\n                    }\n                }\n                else if (binding.key && valueRelativePosition_1 <= (binding.key.length - key_1.length)) {\n                    keyCompletions();\n                }\n            }\n            else {\n                // If the position is in the expression or after the key or there is no key, return the\n                // expression completions\n                if ((binding.expression && inSpan(valueRelativePosition_1, binding.expression.ast.span)) ||\n                    (binding.key &&\n                        valueRelativePosition_1 > binding.span.start + (binding.key.length - key_1.length)) ||\n                    !binding.key) {\n                    var span = new ParseSpan(0, this.attr.value.length);\n                    this.attributeValueCompletions(binding.expression ? binding.expression.ast :\n                        new PropertyRead(span, new ImplicitReceiver(span), ''), valueRelativePosition_1);\n                }\n                else {\n                    keyCompletions();\n                }\n            }\n        }\n    };\n    ExpressionVisitor.prototype.visitBoundText = function (ast) {\n        var expressionPosition = this.position - ast.sourceSpan.start.offset;\n        if (inSpan(expressionPosition, ast.value.span)) {\n            var completions = getExpressionCompletions(this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n            if (completions) {\n                this.result = this.symbolsToCompletions(completions);\n            }\n        }\n    };\n    ExpressionVisitor.prototype.attributeValueCompletions = function (value, position) {\n        var symbols = getExpressionCompletions(this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position, this.info.template.query);\n        if (symbols) {\n            this.result = this.symbolsToCompletions(symbols);\n        }\n    };\n    ExpressionVisitor.prototype.symbolsToCompletions = function (symbols) {\n        return symbols.filter(function (s) { return !s.name.startsWith('__') && s.public; })\n            .map(function (symbol) { return ({ kind: symbol.kind, name: symbol.name, sort: symbol.name }); });\n    };\n    Object.defineProperty(ExpressionVisitor.prototype, \"attributeValuePosition\", {\n        get: function () {\n            if (this.attr && this.attr.valueSpan) {\n                return this.position - this.attr.valueSpan.start.offset - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ExpressionVisitor;\n}(NullTemplateVisitor));\nfunction getSourceText(template, span) {\n    return template.source.substring(span.start, span.end);\n}\nfunction nameOfAttr(attr) {\n    var name = attr.name;\n    if (attr.output) {\n        name = removeSuffix(name, 'Events');\n        name = removeSuffix(name, 'Changed');\n    }\n    var result = [name];\n    if (attr.input) {\n        result.unshift('[');\n        result.push(']');\n    }\n    if (attr.output) {\n        result.unshift('(');\n        result.push(')');\n    }\n    if (attr.template) {\n        result.unshift('*');\n    }\n    return result.join('');\n}\nvar templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(element.name)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n        var attr = _a[_i];\n        if (!attr.name.match(templateAttr)) {\n            var _b = splitNsName(attr.name), _ = _b[0], attrNameNoNs = _b[1];\n            cssSelector.addAttribute(attrNameNoNs, attr.value);\n            if (attr.name.toLowerCase() == 'class') {\n                var classes = attr.value.split(/s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n    }\n    return cssSelector;\n}\nfunction foldAttrs(attrs) {\n    var inputOutput = new Map();\n    var templates = new Map();\n    var result = [];\n    attrs.forEach(function (attr) {\n        if (attr.fromHtml) {\n            return attr;\n        }\n        if (attr.template) {\n            var duplicate = templates.get(attr.name);\n            if (!duplicate) {\n                result.push({ name: attr.name, template: true });\n                templates.set(attr.name, attr);\n            }\n        }\n        if (attr.input || attr.output) {\n            var duplicate = inputOutput.get(attr.name);\n            if (duplicate) {\n                duplicate.input = duplicate.input || attr.input;\n                duplicate.output = duplicate.output || attr.output;\n            }\n            else {\n                var cloneAttr = { name: attr.name };\n                if (attr.input)\n                    cloneAttr.input = true;\n                if (attr.output)\n                    cloneAttr.output = true;\n                result.push(cloneAttr);\n                inputOutput.set(attr.name, cloneAttr);\n            }\n        }\n    });\n    return result;\n}\nfunction expandedAttr(attr) {\n    if (attr.input && attr.output) {\n        return [\n            attr, { name: attr.name, input: true, output: false },\n            { name: attr.name, input: false, output: true }\n        ];\n    }\n    return [attr];\n}\nfunction lowerName(name) {\n    return name && (name[0].toLowerCase() + name.substr(1));\n}\n//# sourceMappingURL=completions.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Attribute, ElementAst, findNode, tokenReference } from '@angular/compiler';\nimport { getExpressionScope } from '@angular/compiler-cli/src/language_services';\nimport { getExpressionSymbol } from './expressions';\nimport { diagnosticInfoFromTemplateInfo, findTemplateAstAt, inSpan, offsetSpan, spanOf } from './utils';\nexport function locateSymbol(info) {\n    if (!info.position)\n        return undefined;\n    var templatePosition = info.position - info.template.span.start;\n    var path = findTemplateAstAt(info.templateAst, templatePosition);\n    if (path.tail) {\n        var symbol_1 = undefined;\n        var span_1 = undefined;\n        var attributeValueSymbol_1 = function (ast, inEvent) {\n            if (inEvent === void 0) { inEvent = false; }\n            var attribute = findAttribute(info);\n            if (attribute) {\n                if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = getExpressionScope(dinfo, path, inEvent);\n                    if (attribute.valueSpan) {\n                        var expressionOffset = attribute.valueSpan.start.offset + 1;\n                        var result = getExpressionSymbol(scope, ast, templatePosition - expressionOffset, info.template.query);\n                        if (result) {\n                            symbol_1 = result.symbol;\n                            span_1 = offsetSpan(result.span, expressionOffset);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        path.tail.visit({\n            visitNgContent: function (ast) { },\n            visitEmbeddedTemplate: function (ast) { },\n            visitElement: function (ast) {\n                var component = ast.directives.find(function (d) { return d.directive.isComponent; });\n                if (component) {\n                    symbol_1 = info.template.query.getTypeSymbol(component.directive.type.reference);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'component');\n                    span_1 = spanOf(ast);\n                }\n                else {\n                    // Find a directive that matches the element name\n                    var directive = ast.directives.find(function (d) { return d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0; });\n                    if (directive) {\n                        symbol_1 = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                        symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'directive');\n                        span_1 = spanOf(ast);\n                    }\n                }\n            },\n            visitReference: function (ast) {\n                symbol_1 = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n                span_1 = spanOf(ast);\n            },\n            visitVariable: function (ast) { },\n            visitEvent: function (ast) {\n                if (!attributeValueSymbol_1(ast.handler, /* inEvent */ true)) {\n                    symbol_1 = findOutputBinding(info, path, ast);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'event');\n                    span_1 = spanOf(ast);\n                }\n            },\n            visitElementProperty: function (ast) { attributeValueSymbol_1(ast.value); },\n            visitAttr: function (ast) { },\n            visitBoundText: function (ast) {\n                var expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n                if (inSpan(expressionPosition, ast.value.span)) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = getExpressionScope(dinfo, path, /* includeEvent */ false);\n                    var result = getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n                    if (result) {\n                        symbol_1 = result.symbol;\n                        span_1 = offsetSpan(result.span, ast.sourceSpan.start.offset);\n                    }\n                }\n            },\n            visitText: function (ast) { },\n            visitDirective: function (ast) {\n                symbol_1 = info.template.query.getTypeSymbol(ast.directive.type.reference);\n                span_1 = spanOf(ast);\n            },\n            visitDirectiveProperty: function (ast) {\n                if (!attributeValueSymbol_1(ast.value)) {\n                    symbol_1 = findInputBinding(info, path, ast);\n                    span_1 = spanOf(ast);\n                }\n            }\n        }, null);\n        if (symbol_1 && span_1) {\n            return { symbol: symbol_1, span: offsetSpan(span_1, info.template.span.start) };\n        }\n    }\n}\nfunction findAttribute(info) {\n    if (info.position) {\n        var templatePosition = info.position - info.template.span.start;\n        var path = findNode(info.htmlAst, templatePosition);\n        return path.first(Attribute);\n    }\n}\nfunction findInputBinding(info, path, binding) {\n    var element = path.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedInput = invertMap(directive.directive.inputs);\n            var fieldName = invertedInput[binding.templateName];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction findOutputBinding(info, path, binding) {\n    var element = path.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedOutputs = invertMap(directive.directive.outputs);\n            var fieldName = invertedOutputs[binding.name];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction invertMap(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var name_1 = _a[_i];\n        var v = obj[name_1];\n        result[v] = name_1;\n    }\n    return result;\n}\n/**\n * Wrap a symbol and change its kind to component.\n */\nvar OverrideKindSymbol = /** @class */ (function () {\n    function OverrideKindSymbol(sym, kindOverride) {\n        this.sym = sym;\n        this.kind = kindOverride;\n    }\n    Object.defineProperty(OverrideKindSymbol.prototype, \"name\", {\n        get: function () { return this.sym.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"language\", {\n        get: function () { return this.sym.language; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"type\", {\n        get: function () { return this.sym.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"container\", {\n        get: function () { return this.sym.container; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"public\", {\n        get: function () { return this.sym.public; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"callable\", {\n        get: function () { return this.sym.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"nullable\", {\n        get: function () { return this.sym.nullable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"definition\", {\n        get: function () { return this.sym.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    OverrideKindSymbol.prototype.members = function () { return this.sym.members(); };\n    OverrideKindSymbol.prototype.signatures = function () { return this.sym.signatures(); };\n    OverrideKindSymbol.prototype.selectSignature = function (types) { return this.sym.selectSignature(types); };\n    OverrideKindSymbol.prototype.indexed = function (argument) { return this.sym.indexed(argument); };\n    return OverrideKindSymbol;\n}());\n//# sourceMappingURL=locate_symbol.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompilerConfig, DomElementSchemaRegistry, HtmlParser, I18NHtmlParser, Lexer, Parser, TemplateParser } from '@angular/compiler';\nimport { getTemplateCompletions } from './completions';\nimport { getDefinition } from './definitions';\nimport { getDeclarationDiagnostics, getTemplateDiagnostics } from './diagnostics';\nimport { getHover } from './hover';\nimport { DiagnosticKind } from './types';\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nexport function createLanguageService(host) {\n    return new LanguageServiceImpl(host);\n}\nvar LanguageServiceImpl = /** @class */ (function () {\n    function LanguageServiceImpl(host) {\n        this.host = host;\n    }\n    Object.defineProperty(LanguageServiceImpl.prototype, \"metadataResolver\", {\n        get: function () { return this.host.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageServiceImpl.prototype.getTemplateReferences = function () { return this.host.getTemplateReferences(); };\n    LanguageServiceImpl.prototype.getDiagnostics = function (fileName) {\n        var results = [];\n        var templates = this.host.getTemplates(fileName);\n        if (templates && templates.length) {\n            results.push.apply(results, getTemplateDiagnostics(fileName, this, templates));\n        }\n        var declarations = this.host.getDeclarations(fileName);\n        if (declarations && declarations.length) {\n            var summary = this.host.getAnalyzedModules();\n            results.push.apply(results, getDeclarationDiagnostics(declarations, summary));\n        }\n        return uniqueBySpan(results);\n    };\n    LanguageServiceImpl.prototype.getPipesAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return templateInfo.pipes;\n        }\n        return [];\n    };\n    LanguageServiceImpl.prototype.getCompletionsAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getTemplateCompletions(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getDefinitionAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getDefinition(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getHoverAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getHover(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getTemplateAstAtPosition = function (fileName, position) {\n        var template = this.host.getTemplateAt(fileName, position);\n        if (template) {\n            var astResult = this.getTemplateAst(template, fileName);\n            if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n                astResult.directives && astResult.pipes && astResult.expressionParser)\n                return {\n                    position: position,\n                    fileName: fileName,\n                    template: template,\n                    htmlAst: astResult.htmlAst,\n                    directive: astResult.directive,\n                    directives: astResult.directives,\n                    pipes: astResult.pipes,\n                    templateAst: astResult.templateAst,\n                    expressionParser: astResult.expressionParser\n                };\n        }\n        return undefined;\n    };\n    LanguageServiceImpl.prototype.getTemplateAst = function (template, contextFile) {\n        var _this = this;\n        var result = undefined;\n        try {\n            var resolvedMetadata = this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type);\n            var metadata = resolvedMetadata && resolvedMetadata.metadata;\n            if (metadata) {\n                var rawHtmlParser = new HtmlParser();\n                var htmlParser = new I18NHtmlParser(rawHtmlParser);\n                var expressionParser = new Parser(new Lexer());\n                var config = new CompilerConfig();\n                var parser = new TemplateParser(config, this.host.resolver.getReflector(), expressionParser, new DomElementSchemaRegistry(), htmlParser, null, []);\n                var htmlResult = htmlParser.parse(template.source, '', true);\n                var analyzedModules = this.host.getAnalyzedModules();\n                var errors = undefined;\n                var ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n                if (!ngModule) {\n                    // Reported by the the declaration diagnostics.\n                    ngModule = findSuitableDefaultModule(analyzedModules);\n                }\n                if (ngModule) {\n                    var resolvedDirectives = ngModule.transitiveModule.directives.map(function (d) { return _this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference); });\n                    var directives = removeMissing(resolvedDirectives).map(function (d) { return d.metadata.toSummary(); });\n                    var pipes = ngModule.transitiveModule.pipes.map(function (p) { return _this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary(); });\n                    var schemas = ngModule.schemas;\n                    var parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n                    result = {\n                        htmlAst: htmlResult.rootNodes,\n                        templateAst: parseResult.templateAst,\n                        directive: metadata, directives: directives, pipes: pipes,\n                        parseErrors: parseResult.errors, expressionParser: expressionParser, errors: errors\n                    };\n                }\n            }\n        }\n        catch (e) {\n            var span = template.span;\n            if (e.fileName == contextFile) {\n                span = template.query.getSpanAt(e.line, e.column) || span;\n            }\n            result = { errors: [{ kind: DiagnosticKind.Error, message: e.message, span: span }] };\n        }\n        return result || {};\n    };\n    return LanguageServiceImpl;\n}());\nfunction removeMissing(values) {\n    return values.filter(function (e) { return !!e; });\n}\nfunction uniqueBySpan(elements) {\n    if (elements) {\n        var result = [];\n        var map = new Map();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var span = element.span;\n            var set = map.get(span.start);\n            if (!set) {\n                set = new Set();\n                map.set(span.start, set);\n            }\n            if (!set.has(span.end)) {\n                set.add(span.end);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nfunction findSuitableDefaultModule(modules) {\n    var result = undefined;\n    var resultSize = 0;\n    for (var _i = 0, _a = modules.ngModules; _i < _a.length; _i++) {\n        var module_1 = _a[_i];\n        var moduleSize = module_1.transitiveModule.directives.length;\n        if (moduleSize > resultSize) {\n            result = module_1;\n            resultSize = moduleSize;\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=language_service.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getTemplateExpressionDiagnostics } from '@angular/compiler-cli/src/language_services';\nimport { DiagnosticKind } from './types';\nimport { offsetSpan, spanOf } from './utils';\nexport function getTemplateDiagnostics(fileName, astProvider, templates) {\n    var results = [];\n    var _loop_1 = function (template) {\n        var ast = astProvider.getTemplateAst(template, fileName);\n        if (ast) {\n            if (ast.parseErrors && ast.parseErrors.length) {\n                results.push.apply(results, ast.parseErrors.map(function (e) { return ({\n                    kind: DiagnosticKind.Error,\n                    span: offsetSpan(spanOf(e.span), template.span.start),\n                    message: e.msg\n                }); }));\n            }\n            else if (ast.templateAst && ast.htmlAst) {\n                var info = {\n                    templateAst: ast.templateAst,\n                    htmlAst: ast.htmlAst,\n                    offset: template.span.start,\n                    query: template.query,\n                    members: template.members\n                };\n                var expressionDiagnostics = getTemplateExpressionDiagnostics(info);\n                results.push.apply(results, expressionDiagnostics);\n            }\n            if (ast.errors) {\n                results.push.apply(results, ast.errors.map(function (e) { return ({ kind: e.kind, span: e.span || template.span, message: e.message }); }));\n            }\n        }\n    };\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var template = templates_1[_i];\n        _loop_1(template);\n    }\n    return results;\n}\nexport function getDeclarationDiagnostics(declarations, modules) {\n    var results = [];\n    var directives = undefined;\n    var _loop_2 = function (declaration) {\n        var report = function (message, span) {\n            results.push({\n                kind: DiagnosticKind.Error,\n                span: span || declaration.declarationSpan, message: message\n            });\n        };\n        for (var _i = 0, _a = declaration.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            report(error.message, error.span);\n        }\n        if (declaration.metadata) {\n            if (declaration.metadata.isComponent) {\n                if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n                    report(\"Component '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n                var _b = declaration.metadata.template, template = _b.template, templateUrl = _b.templateUrl;\n                if (template === null && !templateUrl) {\n                    report(\"Component '\" + declaration.type.name + \"' must have a template or templateUrl\");\n                }\n                else if (template && templateUrl) {\n                    report(\"Component '\" + declaration.type.name + \"' must not have both template and templateUrl\");\n                }\n            }\n            else {\n                if (!directives) {\n                    directives = new Set();\n                    modules.ngModules.forEach(function (module) {\n                        module.declaredDirectives.forEach(function (directive) { directives.add(directive.reference); });\n                    });\n                }\n                if (!directives.has(declaration.type)) {\n                    report(\"Directive '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n            }\n        }\n    };\n    for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n        var declaration = declarations_1[_i];\n        _loop_2(declaration);\n    }\n    return results;\n}\n//# sourceMappingURL=diagnostics.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { locateSymbol } from './locate_symbol';\nexport function getHover(info) {\n    var result = locateSymbol(info);\n    if (result) {\n        return { text: hoverTextOf(result.symbol), span: result.span };\n    }\n}\nfunction hoverTextOf(symbol) {\n    var result = [{ text: symbol.kind }, { text: ' ' }, { text: symbol.name, language: symbol.language }];\n    var container = symbol.container;\n    if (container) {\n        result.push({ text: ' of ' }, { text: container.name, language: container.language });\n    }\n    return result;\n}\n//# sourceMappingURL=hover.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MetadataCollector, createMetadataReaderCache, readMetadata } from '@angular/compiler-cli/src/language_services';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nvar ReflectorModuleModuleResolutionHost = /** @class */ (function () {\n    function ReflectorModuleModuleResolutionHost(host, getProgram) {\n        var _this = this;\n        this.host = host;\n        this.getProgram = getProgram;\n        // Note: verboseInvalidExpressions is important so that\n        // the collector will collect errors instead of throwing\n        this.metadataCollector = new MetadataCollector({ verboseInvalidExpression: true });\n        if (host.directoryExists)\n            this.directoryExists = function (directoryName) { return _this.host.directoryExists(directoryName); };\n    }\n    ReflectorModuleModuleResolutionHost.prototype.fileExists = function (fileName) { return !!this.host.getScriptSnapshot(fileName); };\n    ReflectorModuleModuleResolutionHost.prototype.readFile = function (fileName) {\n        var snapshot = this.host.getScriptSnapshot(fileName);\n        if (snapshot) {\n            return snapshot.getText(0, snapshot.getLength());\n        }\n        // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n        return undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.getSourceFileMetadata = function (fileName) {\n        var sf = this.getProgram().getSourceFile(fileName);\n        return sf ? this.metadataCollector.getMetadata(sf) : undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.cacheMetadata = function (fileName) {\n        // Don't cache the metadata for .ts files as they might change in the editor!\n        return fileName.endsWith('.d.ts');\n    };\n    return ReflectorModuleModuleResolutionHost;\n}());\nvar ReflectorHost = /** @class */ (function () {\n    function ReflectorHost(getProgram, serviceHost, options) {\n        this.options = options;\n        this.metadataReaderCache = createMetadataReaderCache();\n        this.hostAdapter = new ReflectorModuleModuleResolutionHost(serviceHost, getProgram);\n        this.moduleResolutionCache =\n            ts.createModuleResolutionCache(serviceHost.getCurrentDirectory(), function (s) { return s; });\n    }\n    ReflectorHost.prototype.getMetadataFor = function (modulePath) {\n        return readMetadata(modulePath, this.hostAdapter, this.metadataReaderCache);\n    };\n    ReflectorHost.prototype.moduleNameToFileName = function (moduleName, containingFile) {\n        if (!containingFile) {\n            if (moduleName.indexOf('.') === 0) {\n                throw new Error('Resolution of relative paths requires a containing file.');\n            }\n            // Any containing file gives the same result for absolute imports\n            containingFile = path.join(this.options.basePath, 'index.ts').replace(/\\\\/g, '/');\n        }\n        var resolved = ts.resolveModuleName(moduleName, containingFile, this.options, this.hostAdapter)\n            .resolvedModule;\n        return resolved ? resolved.resolvedFileName : null;\n    };\n    ReflectorHost.prototype.getOutputName = function (filePath) { return filePath; };\n    return ReflectorHost;\n}());\nexport { ReflectorHost };\n//# sourceMappingURL=reflector_host.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AotSummaryResolver, CompileMetadataResolver, CompilerConfig, DEFAULT_INTERPOLATION_CONFIG, DirectiveNormalizer, DirectiveResolver, DomElementSchemaRegistry, HtmlParser, JitSummaryResolver, NgModuleResolver, ParseTreeResult, PipeResolver, ResourceLoader, StaticReflector, StaticSymbolCache, StaticSymbolResolver, analyzeNgModules, createOfflineCompileUrlResolver, isFormattedError } from '@angular/compiler';\nimport { getClassMembersFromDeclaration, getPipesTable, getSymbolQuery } from '@angular/compiler-cli/src/language_services';\nimport { ViewEncapsulation, ɵConsole as Console } from '@angular/core';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport { createLanguageService } from './language_service';\nimport { ReflectorHost } from './reflector_host';\n/**\n * Create a `LanguageServiceHost`\n */\nexport function createLanguageServiceFromTypescript(host, service) {\n    var ngHost = new TypeScriptServiceHost(host, service);\n    var ngServer = createLanguageService(ngHost);\n    ngHost.setSite(ngServer);\n    return ngServer;\n}\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nvar DummyHtmlParser = /** @class */ (function (_super) {\n    tslib_1.__extends(DummyHtmlParser, _super);\n    function DummyHtmlParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new ParseTreeResult([], []);\n    };\n    return DummyHtmlParser;\n}(HtmlParser));\nexport { DummyHtmlParser };\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nvar DummyResourceLoader = /** @class */ (function (_super) {\n    tslib_1.__extends(DummyResourceLoader, _super);\n    function DummyResourceLoader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyResourceLoader.prototype.get = function (url) { return Promise.resolve(''); };\n    return DummyResourceLoader;\n}(ResourceLoader));\nexport { DummyResourceLoader };\n/**\n * An implementation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nvar TypeScriptServiceHost = /** @class */ (function () {\n    function TypeScriptServiceHost(host, tsService) {\n        this.host = host;\n        this.tsService = tsService;\n        this._staticSymbolCache = new StaticSymbolCache();\n        this._typeCache = [];\n        this.modulesOutOfDate = true;\n        this.fileVersions = new Map();\n    }\n    TypeScriptServiceHost.prototype.setSite = function (service) { this.service = service; };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"resolver\", {\n        /**\n         * Angular LanguageServiceHost implementation\n         */\n        get: function () {\n            var _this = this;\n            this.validate();\n            var result = this._resolver;\n            if (!result) {\n                var moduleResolver = new NgModuleResolver(this.reflector);\n                var directiveResolver = new DirectiveResolver(this.reflector);\n                var pipeResolver = new PipeResolver(this.reflector);\n                var elementSchemaRegistry = new DomElementSchemaRegistry();\n                var resourceLoader = new DummyResourceLoader();\n                var urlResolver = createOfflineCompileUrlResolver();\n                var htmlParser = new DummyHtmlParser();\n                // This tracks the CompileConfig in codegen.ts. Currently these options\n                // are hard-coded.\n                var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n                var directiveNormalizer = new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n                result = this._resolver = new CompileMetadataResolver(config, htmlParser, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(), elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache, this.reflector, function (error, type) { return _this.collectError(error, type && type.filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateReferences = function () {\n        this.ensureTemplateMap();\n        return this.templateReferences || [];\n    };\n    TypeScriptServiceHost.prototype.getTemplateAt = function (fileName, position) {\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            this.context = sourceFile.fileName;\n            var node = this.findNode(sourceFile, position);\n            if (node) {\n                return this.getSourceFromNode(fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n            }\n        }\n        else {\n            this.ensureTemplateMap();\n            // TODO: Cannocalize the file?\n            var componentType = this.fileToComponent.get(fileName);\n            if (componentType) {\n                return this.getSourceFromType(fileName, this.host.getScriptVersion(fileName), componentType);\n            }\n        }\n        return undefined;\n    };\n    TypeScriptServiceHost.prototype.getAnalyzedModules = function () {\n        this.updateAnalyzedModules();\n        return this.ensureAnalyzedModules();\n    };\n    TypeScriptServiceHost.prototype.ensureAnalyzedModules = function () {\n        var analyzedModules = this.analyzedModules;\n        if (!analyzedModules) {\n            if (this.host.getScriptFileNames().length === 0) {\n                analyzedModules = {\n                    files: [],\n                    ngModuleByPipeOrDirective: new Map(),\n                    ngModules: [],\n                };\n            }\n            else {\n                var analyzeHost = { isSourceFile: function (filePath) { return true; } };\n                var programFiles = this.program.getSourceFiles().map(function (sf) { return sf.fileName; });\n                analyzedModules =\n                    analyzeNgModules(programFiles, analyzeHost, this.staticSymbolResolver, this.resolver);\n            }\n            this.analyzedModules = analyzedModules;\n        }\n        return analyzedModules;\n    };\n    TypeScriptServiceHost.prototype.getTemplates = function (fileName) {\n        var _this = this;\n        this.ensureTemplateMap();\n        var componentType = this.fileToComponent.get(fileName);\n        if (componentType) {\n            var templateSource = this.getTemplateAt(fileName, 0);\n            if (templateSource) {\n                return [templateSource];\n            }\n        }\n        else {\n            var version_1 = this.host.getScriptVersion(fileName);\n            var result_1 = [];\n            // Find each template string in the file\n            var visit_1 = function (child) {\n                var templateSource = _this.getSourceFromNode(fileName, version_1, child);\n                if (templateSource) {\n                    result_1.push(templateSource);\n                }\n                else {\n                    ts.forEachChild(child, visit_1);\n                }\n            };\n            var sourceFile = this.getSourceFile(fileName);\n            if (sourceFile) {\n                this.context = sourceFile.path || sourceFile.fileName;\n                ts.forEachChild(sourceFile, visit_1);\n            }\n            return result_1.length ? result_1 : undefined;\n        }\n    };\n    TypeScriptServiceHost.prototype.getDeclarations = function (fileName) {\n        var _this = this;\n        var result = [];\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            var visit_2 = function (child) {\n                var declaration = _this.getDeclarationFromNode(sourceFile, child);\n                if (declaration) {\n                    result.push(declaration);\n                }\n                else {\n                    ts.forEachChild(child, visit_2);\n                }\n            };\n            ts.forEachChild(sourceFile, visit_2);\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFile = function (fileName) {\n        return this.tsService.getProgram().getSourceFile(fileName);\n    };\n    TypeScriptServiceHost.prototype.updateAnalyzedModules = function () {\n        this.validate();\n        if (this.modulesOutOfDate) {\n            this.analyzedModules = null;\n            this._reflector = null;\n            this.templateReferences = null;\n            this.fileToComponent = null;\n            this.ensureAnalyzedModules();\n            this.modulesOutOfDate = false;\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"program\", {\n        get: function () { return this.tsService.getProgram(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"checker\", {\n        get: function () {\n            var checker = this._checker;\n            if (!checker) {\n                checker = this._checker = this.program.getTypeChecker();\n            }\n            return checker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.validate = function () {\n        var _this = this;\n        var program = this.program;\n        if (this.lastProgram !== program) {\n            // Invalidate file that have changed in the static symbol resolver\n            var invalidateFile = function (fileName) {\n                return _this._staticSymbolResolver.invalidateFile(fileName);\n            };\n            this.clearCaches();\n            var seen_1 = new Set();\n            for (var _i = 0, _a = this.program.getSourceFiles(); _i < _a.length; _i++) {\n                var sourceFile = _a[_i];\n                var fileName = sourceFile.fileName;\n                seen_1.add(fileName);\n                var version = this.host.getScriptVersion(fileName);\n                var lastVersion = this.fileVersions.get(fileName);\n                if (version != lastVersion) {\n                    this.fileVersions.set(fileName, version);\n                    if (this._staticSymbolResolver) {\n                        invalidateFile(fileName);\n                    }\n                }\n            }\n            // Remove file versions that are no longer in the file and invalidate them.\n            var missing = Array.from(this.fileVersions.keys()).filter(function (f) { return !seen_1.has(f); });\n            missing.forEach(function (f) { return _this.fileVersions.delete(f); });\n            if (this._staticSymbolResolver) {\n                missing.forEach(invalidateFile);\n            }\n            this.lastProgram = program;\n        }\n    };\n    TypeScriptServiceHost.prototype.clearCaches = function () {\n        this._checker = null;\n        this._typeCache = [];\n        this._resolver = null;\n        this.collectedErrors = null;\n        this.modulesOutOfDate = true;\n    };\n    TypeScriptServiceHost.prototype.ensureTemplateMap = function () {\n        if (!this.fileToComponent || !this.templateReferences) {\n            var fileToComponent = new Map();\n            var templateReference = [];\n            var ngModuleSummary = this.getAnalyzedModules();\n            var urlResolver = createOfflineCompileUrlResolver();\n            for (var _i = 0, _a = ngModuleSummary.ngModules; _i < _a.length; _i++) {\n                var module_1 = _a[_i];\n                for (var _b = 0, _c = module_1.declaredDirectives; _b < _c.length; _b++) {\n                    var directive = _c[_b];\n                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference).metadata;\n                    if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n                        var templateName = urlResolver.resolve(this.reflector.componentModuleUrl(directive.reference), metadata.template.templateUrl);\n                        fileToComponent.set(templateName, directive.reference);\n                        templateReference.push(templateName);\n                    }\n                }\n            }\n            this.fileToComponent = fileToComponent;\n            this.templateReferences = templateReference;\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromDeclaration = function (fileName, version, source, span, type, declaration, node, sourceFile) {\n        var queryCache = undefined;\n        var t = this;\n        if (declaration) {\n            return {\n                version: version,\n                source: source,\n                span: span,\n                type: type,\n                get members() {\n                    return getClassMembersFromDeclaration(t.program, t.checker, sourceFile, declaration);\n                },\n                get query() {\n                    if (!queryCache) {\n                        var pipes_1 = t.service.getPipesAt(fileName, node.getStart());\n                        queryCache = getSymbolQuery(t.program, t.checker, sourceFile, function () { return getPipesTable(sourceFile, t.program, t.checker, pipes_1); });\n                    }\n                    return queryCache;\n                }\n            };\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromNode = function (fileName, version, node) {\n        var result = undefined;\n        var t = this;\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts.SyntaxKind.StringLiteral:\n                var _a = this.getTemplateClassDeclFromNode(node), declaration = _a[0], decorator = _a[1];\n                if (declaration && declaration.name) {\n                    var sourceFile = this.getSourceFile(fileName);\n                    if (sourceFile) {\n                        return this.getSourceFromDeclaration(fileName, version, this.stringOf(node) || '', shrink(spanOf(node)), this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text), declaration, node, sourceFile);\n                    }\n                }\n                break;\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFromType = function (fileName, version, type) {\n        var result = undefined;\n        var declaration = this.getTemplateClassFromStaticSymbol(type);\n        if (declaration) {\n            var snapshot = this.host.getScriptSnapshot(fileName);\n            if (snapshot) {\n                var source = snapshot.getText(0, snapshot.getLength());\n                result = this.getSourceFromDeclaration(fileName, version, source, { start: 0, end: source.length }, type, declaration, declaration, declaration.getSourceFile());\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflectorHost\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflectorHost;\n            if (!result) {\n                if (!this.context) {\n                    // Make up a context by finding the first script and using that as the base dir.\n                    var scriptFileNames = this.host.getScriptFileNames();\n                    if (0 === scriptFileNames.length) {\n                        throw new Error('Internal error: no script file names found');\n                    }\n                    this.context = scriptFileNames[0];\n                }\n                // Use the file context's directory as the base directory.\n                // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n                // tsserver. We don't need the exact base directory, just one that contains\n                // a source file.\n                var source = this.tsService.getProgram().getSourceFile(this.context);\n                if (!source) {\n                    throw new Error('Internal error: no context could be determined');\n                }\n                var tsConfigPath = findTsConfig(source.fileName);\n                var basePath = path.dirname(tsConfigPath || this.context);\n                var options = { basePath: basePath, genDir: basePath };\n                var compilerOptions = this.host.getCompilationSettings();\n                if (compilerOptions && compilerOptions.baseUrl) {\n                    options.baseUrl = compilerOptions.baseUrl;\n                }\n                if (compilerOptions && compilerOptions.paths) {\n                    options.paths = compilerOptions.paths;\n                }\n                result = this._reflectorHost =\n                    new ReflectorHost(function () { return _this.tsService.getProgram(); }, this.host, options);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.collectError = function (error, filePath) {\n        if (filePath) {\n            var errorMap = this.collectedErrors;\n            if (!errorMap || !this.collectedErrors) {\n                errorMap = this.collectedErrors = new Map();\n            }\n            var errors = errorMap.get(filePath);\n            if (!errors) {\n                errors = [];\n                this.collectedErrors.set(filePath, errors);\n            }\n            errors.push(error);\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"staticSymbolResolver\", {\n        get: function () {\n            var _this = this;\n            var result = this._staticSymbolResolver;\n            if (!result) {\n                this._summaryResolver = new AotSummaryResolver({\n                    loadSummary: function (filePath) { return null; },\n                    isSourceFile: function (sourceFilePath) { return true; },\n                    toSummaryFileName: function (sourceFilePath) { return sourceFilePath; },\n                    fromSummaryFileName: function (filePath) { return filePath; },\n                }, this._staticSymbolCache);\n                result = this._staticSymbolResolver = new StaticSymbolResolver(this.reflectorHost, this._staticSymbolCache, this._summaryResolver, function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflector\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflector;\n            if (!result) {\n                var ssr = this.staticSymbolResolver;\n                result = this._reflector = new StaticReflector(this._summaryResolver, ssr, [], [], function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateClassFromStaticSymbol = function (type) {\n        var source = this.getSourceFile(type.filePath);\n        if (source) {\n            var declarationNode = ts.forEachChild(source, function (child) {\n                if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n                    var classDeclaration = child;\n                    if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                        return classDeclaration;\n                    }\n                }\n            });\n            return declarationNode;\n        }\n        return undefined;\n    };\n    /**\n     * Given a template string node, see if it is an Angular template string, and if so return the\n     * containing class.\n     */\n    TypeScriptServiceHost.prototype.getTemplateClassDeclFromNode = function (currentToken) {\n        // Verify we are in a 'template' property assignment, in an object literal, which is an call\n        // arg, in a decorator\n        var parentNode = currentToken.parent; // PropertyAssignment\n        if (!parentNode) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        else {\n            // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n            if (parentNode.name.text !== 'template') {\n                return TypeScriptServiceHost.missingTemplate;\n            }\n        }\n        parentNode = parentNode.parent; // ObjectLiteralExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        parentNode = parentNode.parent; // CallExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var callTarget = parentNode.expression;\n        var decorator = parentNode.parent; // Decorator\n        if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var declaration = decorator.parent; // ClassDeclaration\n        if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        return [declaration, callTarget];\n    };\n    TypeScriptServiceHost.prototype.getCollectedErrors = function (defaultSpan, sourceFile) {\n        var errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n        return (errors && errors.map(function (e) {\n            var line = e.line || (e.position && e.position.line);\n            var column = e.column || (e.position && e.position.column);\n            var span = spanAt(sourceFile, line, column) || defaultSpan;\n            if (isFormattedError(e)) {\n                return errorToDiagnosticWithChain(e, span);\n            }\n            return { message: e.message, span: span };\n        })) ||\n            [];\n    };\n    TypeScriptServiceHost.prototype.getDeclarationFromNode = function (sourceFile, node) {\n        if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n            node.name) {\n            for (var _i = 0, _a = node.decorators; _i < _a.length; _i++) {\n                var decorator = _a[_i];\n                if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var call = decorator.expression;\n                        var target = call.expression;\n                        var type = this.checker.getTypeAtLocation(target);\n                        if (type) {\n                            var staticSymbol = this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n                            try {\n                                if (this.resolver.isDirective(staticSymbol)) {\n                                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol).metadata;\n                                    var declarationSpan = spanOf(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        metadata: metadata,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                            catch (e) {\n                                if (e.message) {\n                                    this.collectError(e, sourceFile.fileName);\n                                    var declarationSpan = spanOf(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptServiceHost.prototype.stringOf = function (node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n                return node.text;\n            case ts.SyntaxKind.StringLiteral:\n                return node.text;\n        }\n    };\n    TypeScriptServiceHost.prototype.findNode = function (sourceFile, position) {\n        function find(node) {\n            if (position >= node.getStart() && position < node.getEnd()) {\n                return ts.forEachChild(node, find) || node;\n            }\n        }\n        return find(sourceFile);\n    };\n    TypeScriptServiceHost.missingTemplate = [undefined, undefined];\n    return TypeScriptServiceHost;\n}());\nexport { TypeScriptServiceHost };\nfunction findTsConfig(fileName) {\n    var dir = path.dirname(fileName);\n    while (fs.existsSync(dir)) {\n        var candidate = path.join(dir, 'tsconfig.json');\n        if (fs.existsSync(candidate))\n            return candidate;\n        var parentDir = path.dirname(dir);\n        if (parentDir === dir)\n            break;\n        dir = parentDir;\n    }\n}\nfunction spanOf(node) {\n    return { start: node.getStart(), end: node.getEnd() };\n}\nfunction shrink(span, offset) {\n    if (offset == null)\n        offset = 1;\n    return { start: span.start + offset, end: span.end - offset };\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\nfunction chainedMessage(chain, indent) {\n    if (indent === void 0) { indent = ''; }\n    return indent + chain.message + (chain.next ? chainedMessage(chain.next, indent + '  ') : '');\n}\nvar DiagnosticMessageChainImpl = /** @class */ (function () {\n    function DiagnosticMessageChainImpl(message, next) {\n        this.message = message;\n        this.next = next;\n    }\n    DiagnosticMessageChainImpl.prototype.toString = function () { return chainedMessage(this); };\n    return DiagnosticMessageChainImpl;\n}());\nfunction convertChain(chain) {\n    return { message: chain.message, next: chain.next ? convertChain(chain.next) : undefined };\n}\nfunction errorToDiagnosticWithChain(error, span) {\n    return { message: error.chain ? convertChain(error.chain) : error.message, span: span };\n}\n//# sourceMappingURL=typescript_host.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ts from 'typescript';\nimport { createLanguageService } from './language_service';\nimport { TypeScriptServiceHost } from './typescript_host';\nvar projectHostMap = new WeakMap();\nexport function getExternalFiles(project) {\n    var host = projectHostMap.get(project);\n    if (host) {\n        return host.getTemplateReferences();\n    }\n}\nexport function create(info /* ts.server.PluginCreateInfo */) {\n    // Create the proxy\n    var proxy = Object.create(null);\n    var oldLS = info.languageService;\n    function tryCall(fileName, callback) {\n        if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n            return undefined;\n        }\n        try {\n            return callback();\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    function tryFilenameCall(m) {\n        return function (fileName) { return tryCall(fileName, function () { return (m.call(ls, fileName)); }); };\n    }\n    function tryFilenameOneCall(m) {\n        return function (fileName, p) { return tryCall(fileName, function () { return (m.call(ls, fileName, p)); }); };\n    }\n    function tryFilenameTwoCall(m) {\n        return function (fileName, p1, p2) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2)); }); };\n    }\n    function tryFilenameThreeCall(m) {\n        return function (fileName, p1, p2, p3) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3)); }); };\n    }\n    function tryFilenameFourCall(m) {\n        return function (fileName, p1, p2, p3, p4) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4)); });\n        };\n    }\n    function tryFilenameFiveCall(m) {\n        return function (fileName, p1, p2, p3, p4, p5) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4, p5)); });\n        };\n    }\n    function typescriptOnly(ls) {\n        var languageService = {\n            cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n            getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n            getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n            getCompilerOptionsDiagnostics: function () { return ls.getCompilerOptionsDiagnostics(); },\n            getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n            getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n            getCompletionsAtPosition: tryFilenameTwoCall(ls.getCompletionsAtPosition),\n            getCompletionEntryDetails: tryFilenameFiveCall(ls.getCompletionEntryDetails),\n            getCompletionEntrySymbol: tryFilenameThreeCall(ls.getCompletionEntrySymbol),\n            getJsxClosingTagAtPosition: tryFilenameOneCall(ls.getJsxClosingTagAtPosition),\n            getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n            getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n            getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n            getSignatureHelpItems: tryFilenameTwoCall(ls.getSignatureHelpItems),\n            getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n            findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n            getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n            getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n            getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n            getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n            findReferences: tryFilenameOneCall(ls.findReferences),\n            getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n            /** @deprecated */\n            getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n            getNavigateToItems: function (searchValue, maxResultCount, fileName, excludeDtsFiles) { return tryCall(fileName, function () { return ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles); }); },\n            getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n            getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n            getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n            getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n            getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n            getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n            getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n            getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n            getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n            getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n            isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n            getSpanOfEnclosingComment: tryFilenameTwoCall(ls.getSpanOfEnclosingComment),\n            getCodeFixesAtPosition: tryFilenameFiveCall(ls.getCodeFixesAtPosition),\n            applyCodeActionCommand: (function (action) { return tryCall(undefined, function () { return ls.applyCodeActionCommand(action); }); }),\n            getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n            getProgram: function () { return ls.getProgram(); },\n            dispose: function () { return ls.dispose(); },\n            getApplicableRefactors: tryFilenameTwoCall(ls.getApplicableRefactors),\n            getEditsForRefactor: tryFilenameFiveCall(ls.getEditsForRefactor),\n            getDefinitionAndBoundSpan: tryFilenameOneCall(ls.getDefinitionAndBoundSpan),\n            getCombinedCodeFix: function (scope, fixId, formatOptions, preferences) {\n                return tryCall(undefined, function () { return ls.getCombinedCodeFix(scope, fixId, formatOptions, preferences); });\n            },\n            // TODO(kyliau): dummy implementation to compile with ts 2.8, create real one\n            getSuggestionDiagnostics: function (fileName) { return []; },\n            // TODO(kyliau): dummy implementation to compile with ts 2.8, create real one\n            organizeImports: function (scope, formatOptions) { return []; },\n            // TODO: dummy implementation to compile with ts 2.9, create a real one\n            getEditsForFileRename: function (oldFilePath, newFilePath, formatOptions, preferences) { return []; }\n        };\n        return languageService;\n    }\n    oldLS = typescriptOnly(oldLS);\n    var _loop_1 = function (k) {\n        proxy[k] = function () { return oldLS[k].apply(oldLS, arguments); };\n    };\n    for (var k in oldLS) {\n        _loop_1(k);\n    }\n    function completionToEntry(c) {\n        return {\n            // TODO: remove any and fix type error.\n            kind: c.kind,\n            name: c.name,\n            sortText: c.sort,\n            kindModifiers: ''\n        };\n    }\n    function diagnosticChainToDiagnosticChain(chain) {\n        return {\n            messageText: chain.message,\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            next: chain.next ? diagnosticChainToDiagnosticChain(chain.next) : undefined\n        };\n    }\n    function diagnosticMessageToDiagnosticMessageText(message) {\n        if (typeof message === 'string') {\n            return message;\n        }\n        return diagnosticChainToDiagnosticChain(message);\n    }\n    function diagnosticToDiagnostic(d, file) {\n        var result = {\n            file: file,\n            start: d.span.start,\n            length: d.span.end - d.span.start,\n            messageText: diagnosticMessageToDiagnosticMessageText(d.message),\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            source: 'ng'\n        };\n        return result;\n    }\n    function tryOperation(attempting, callback) {\n        try {\n            return callback();\n        }\n        catch (e) {\n            info.project.projectService.logger.info(\"Failed to \" + attempting + \": \" + e.toString());\n            info.project.projectService.logger.info(\"Stack trace: \" + e.stack);\n            return null;\n        }\n    }\n    var serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n    var ls = createLanguageService(serviceHost);\n    serviceHost.setSite(ls);\n    projectHostMap.set(info.project, serviceHost);\n    proxy.getCompletionsAtPosition = function (fileName, position, options) {\n        var base = oldLS.getCompletionsAtPosition(fileName, position, options) || {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n        };\n        tryOperation('get completions', function () {\n            var results = ls.getCompletionsAt(fileName, position);\n            if (results && results.length) {\n                if (base === undefined) {\n                    base = {\n                        isGlobalCompletion: false,\n                        isMemberCompletion: false,\n                        isNewIdentifierLocation: false,\n                        entries: []\n                    };\n                }\n                for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                    var entry = results_1[_i];\n                    base.entries.push(completionToEntry(entry));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getQuickInfoAtPosition = function (fileName, position) {\n        var base = oldLS.getQuickInfoAtPosition(fileName, position);\n        // TODO(vicb): the tags property has been removed in TS 2.2\n        tryOperation('get quick info', function () {\n            var ours = ls.getHoverAt(fileName, position);\n            if (ours) {\n                var displayParts = [];\n                for (var _i = 0, _a = ours.text; _i < _a.length; _i++) {\n                    var part = _a[_i];\n                    displayParts.push({ kind: part.language || 'angular', text: part.text });\n                }\n                var tags = base && base.tags;\n                base = {\n                    displayParts: displayParts,\n                    documentation: [],\n                    kind: 'angular',\n                    kindModifiers: 'what does this do?',\n                    textSpan: { start: ours.span.start, length: ours.span.end - ours.span.start },\n                };\n                if (tags) {\n                    base.tags = tags;\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getSemanticDiagnostics = function (fileName) {\n        var result = oldLS.getSemanticDiagnostics(fileName);\n        var base = result || [];\n        tryOperation('get diagnostics', function () {\n            info.project.projectService.logger.info(\"Computing Angular semantic diagnostics...\");\n            var ours = ls.getDiagnostics(fileName);\n            if (ours && ours.length) {\n                var file_1 = oldLS.getProgram().getSourceFile(fileName);\n                if (file_1) {\n                    base.push.apply(base, ours.map(function (d) { return diagnosticToDiagnostic(d, file_1); }));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getDefinitionAtPosition = function (fileName, position) {\n        var base = oldLS.getDefinitionAtPosition(fileName, position);\n        if (base && base.length) {\n            return base;\n        }\n        return tryOperation('get definition', function () {\n            var ours = ls.getDefinitionAt(fileName, position);\n            if (ours && ours.length) {\n                base = base || [];\n                for (var _i = 0, ours_1 = ours; _i < ours_1.length; _i++) {\n                    var loc = ours_1[_i];\n                    base.push({\n                        fileName: loc.fileName,\n                        textSpan: { start: loc.span.start, length: loc.span.end - loc.span.start },\n                        name: '',\n                        // TODO: remove any and fix type error.\n                        kind: 'definition',\n                        containerName: loc.fileName,\n                        containerKind: 'file',\n                    });\n                }\n            }\n            return base;\n        }) || [];\n    };\n    return proxy;\n}\n//# sourceMappingURL=ts_plugin.js.map"]}